%%[This page was last updated on 2021-11-20 @16:49]%%


<panel type="info" header="### 1. Kwok Xiu Sheng Theodore `@theodorekwok` (422 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721779586" expanded>

I dont think this method is needed, cause the parent class has it and crypto can just call it
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721781228" expanded>

Is there a reason for these attributes? The attributes are ok just that in our meeting notes, crypto has expiry of signal and Remarks as its attributes.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721783016" expanded>

Lets make this private to implement this as a singleton class, cause we should only have one single instantiation of instrument class. Check [this](https://nus-cs2113-ay2122s1.github.io/website/se-book-adapted/chapters/designPatterns.html#singleton-pattern) out for the implementation
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721784191" expanded>

There is also no need to pass in a parameter. 
```suggestion
    private InstrumentManager() {
        instruments = new ArrayList<>();
    }

```
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721787963" expanded>

Add spacing here, same for a few others
```suggestion
    public void setData() {

```
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721789237" expanded>

To prevent the build test from failing would it be better to either comment this out or just create execute functions in each of the child class?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721789607" expanded>

Similar to the build test comment in command class
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r721806022" expanded>

is decription suppose to be the name? If so can we have name instead
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/25#discussion_r724602052" expanded>

Add a newline here
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/25#discussion_r724609465" expanded>

What is the purpose of this function? 
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/30#discussion_r725484735" expanded>

Shift the "+" operator to next line to solve the checkstyle issues 
https://se-education.org/guides/conventions/java/index.html &gt;- look at Place line break to improve readability section

'''suggestion
    protected static String lineDecorator = "_".repeat(80);
    private static String logo = "            _________                      __                     \n"
            + "           |  _   _  |                    [  |  _                 \n"
            + " _ .--..--.|_/ | | \\_| .--.  ,--.   .---.  | | / ] .---.  _ .--.  \n"
            + "[ '.-. .-. |   | |  [ '/''\\]''_\\ : / /''\\] | '' &gt; / /__\\\\[ '/''\\] \n"
            + " | | | | | |  _| |_  | |    /| | |,| \\__.  | |'\\ \\| \\__., | |     \n"
            + "[___||__||__]|_____|[___]   \\'-;__/'.___.'[__|  \\_]'.__.'[___]    \n";

'''
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725565657" expanded>

Do include the isValidPrice Conditional to prevent users from inputting a non valid number. Considering that user can choose not to input a price, so need to check if price is empty or if its not empty check if its a validPrice.
Can define a constant number 0 or -1 to indicate that the price is empty.
Feel free to create a separate issue from this and resolve in another PR
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725565913" expanded>

Consider name it to expiry to keep naming consistent
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725566011" expanded>

```suggestion
        this.entryPrice = entryPrice;
        this.exitPrice = exitPrice;
        this.expiry = expiry;
        this.remark = remark;

```

To keep naming consistent
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725566145" expanded>

If the parameters are optional, do add in the (optional) to it like remarks. It must have slipped my mind for Expiry, so feel free to add for that as well
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725566818" expanded>

This portion should be in a do while loop so that the user can keep interacting instead of just interacting once. The while condition should be while(!c.execute.equals(ExitCommand.CommandWord)), so the c.execute wont be in the try catch block.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725566856" expanded>

```suggestion
        String[] commandComponents = InputParser.getCommandComponents(userInput);
```

To make it more explicit on what the string array is
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725566977" expanded>

Use the TextUi.showErrorMessage to display errors. Make showErrorMessage static.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725567040" expanded>

Remove the empty constructors for the command
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725567171" expanded>

You can throw the InvalidCommandError in InputParser.filterByCommandType under the default case. filterByCommandType has a throw Exception for this purpose. So the execute can just return the command_word, set command_word to "invalid" instead of null
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725567247" expanded>

Can use this default case to throw new InvalidCommandError
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725567582" expanded>

```suggestion
            Command command = InputParser.filterByCommandType(components);
            command.setData(instrumentManager)
```

Rename c to command to make it more explicit. You also need to setData so that the command object has access to the instance of instrumentManager so that all executions is done on that instrumentManager.

Do test out locally that you add in the instruments when you run the code
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725567741" expanded>

Need only one catch block. Cause Exception is superclass of InvalidCommandError. So when invalidCommandError is thrown, it will also be caught and errorMessage shown would be the over-ridden invalidCommandError
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725567848" expanded>

This will be redundant when the other changes below are made
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725569112" expanded>

With this in mind, cause the filterByCommandType may throw exception, the command object may not ever be initialised so in the catch block initialise the command to a new InvalidCommand
^ I leave the implementation details for this up to you
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725578064" expanded>

its just command = new ExitCommand(), like if there isnt any constructor java would just use a default constructor which is essentially the exact same thing you are writing here
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725578539" expanded>

https://stackoverflow.com/questions/13773710/can-a-class-have-no-constructor
You dont need to explicitly create a constructor cause java will just default create it like your empty constructor. 

You are right that can return without throwing the invalidCommandError, its just that the InvalidInstrumentError is being thrown and there is no place to catch it except for the main loop. Originally I implemented a invalidInstrumentParser class so that there is no need to throw InvalidInstrumentError, but on william's suggestion decided to throw error instead.

For now we throw the error instead of return the invalidCommand object. The invalidCommand object can be assigned in the main function instead.

Generally we remove code that is not needed, we don't leave them there just because the logic is fine or they don't do anything
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725578622" expanded>

It is alright to not have it. But base on the above comments, it is likely you will need it to assign to command in the main funtion
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725583982" expanded>

Do rename it to "invalid"
```suggestion
    public static final String COMMAND_WORD = "invalid";
```
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725584346" expanded>

Alright thanks!
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725603019" expanded>

Try not to initialise command to invalid at the start, it works in the program wise but its confusing to the reader
https://nus-cs2113-ay2122s1.github.io/website/se-book-adapted/chapters/codeQuality.html#don-t-recycle-variables-or-parameters

Rather initialise command in the try catch block. I know you have a while loop so use a do while loop instead and in the catch block initialise the command as invalidCommand
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725603061" expanded>

Remove the comment
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725603093" expanded>

Abstract this into TextUi class
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725603156" expanded>

Is there a reason why this was changed to static? It should an instance member and not a class member
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/37#discussion_r725616721" expanded>

There should be validation here to check that input is a number, pls create a separate issue for this or resolve in this pr directly
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/37#discussion_r725616915" expanded>

This violates the import code quality
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/37#discussion_r725617004" expanded>

```suggestion
    public static void displayAddPastReturnsInstruction() {
        System.out.println("Past Returns (optional): ");
    }


```

Add the optional if this attribute is not compulsory
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725625602" expanded>

Final are for variables that are assigned only once, not necessarily for constants only, so the naming still stays
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#discussion_r725636733" expanded>

Shift this functionality into a function that takes in instruments along with SPACE constant into TextUi. Maybe can rename SPACE to like CURRENT_PRICE_HEADER or CURRENT_PRICE_FIELD
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#discussion_r725636886" expanded>

There is no need to redeclare cause AddInstrumentParser already has it. Do consider rename ErrorMessage.displayAddPriceError instead of currentPrice cause its being used in more than one place
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#discussion_r725637122" expanded>

However if its optional may need to create a new checker that first check if input is empty, if its not empty than check if is validPrice
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#discussion_r725714695" expanded>

Can shift this as a function into TextUi, including the for loop, like TextUi.displayAllInstruments(instruments)

Try to use the Array.stream().forEach 
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#discussion_r725715229" expanded>

Shift this validation and undefined_past_return_value into add instrument Parser. Make undefined_past_return_value to -101 as theoretical all valid range of values range from -100 to infinity
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/38#discussion_r725717445" expanded>

There can be spaces between the separators %1$s like "18 Oct" for example
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/38#discussion_r725717556" expanded>

My bad the variables should have final I missed out on the stockparser test, can help me add in also
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/38#discussion_r725717688" expanded>

Add newline here
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726131616" expanded>

Can do this in a separate PR, the pr was suppose to be for junit specific changes.
On a separate note, should we do this name validation? Cause like stock we don't rly care if user puts "AAPL" vs "apple" cause we cant check with a known db of valid instrument names. For forex, even if we force user to put 6 characters they can still put this rubbish like aaaaaa. So I was thinking maybe we don't do this check and we just put a note on user guide that its up to the user responsibility to put in accurate info
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726133519" expanded>

Rename to SEPARATOR_SPECIFIERS or something %1$s is like a format specifier 
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726134326" expanded>

The junit tests currently doesnt test for invalid entry price and exit price given that you said those parameters are compulsory. Create a new issue for this and don't forget to include the validations for those params
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/45#discussion_r726167939" expanded>

Nice, I think we shld do this way for the other parameters, will create new issue from this
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/45#discussion_r726169008" expanded>

I dont think the isBlank is needed cause the getUserCommand automatically trims whitespaces, so even if user puts in blank spaces the trimming will make it an empty string
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726625316" expanded>

I still think the length check is redundant, like I write "usd to sgd" its like somewhat understandable to user. The point is like if not possible to validate a name completely I feel its pointless to add the check
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726634864" expanded>

```suggestion
            if (name.isEmpty() || (instrumentType.equals(AddForexParser.INSTRUMENT_TYPE) && name.length() != FX_PAIR_NAME_LENGTH)) {
               throw new IllegalArgumentException();
```

Simplify the conditional, to make the code better maybe abstract out the conditional here
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/56#discussion_r726909608" expanded>

Nice work, clearing redundant dead code. Btw can we add a tryNoExpiryMultipletimes test
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/58#discussion_r726912160" expanded>

```suggestion
    public static final String LOG_EMPTY_PAST_RETURNS = "User left past returns empty. Defaulting to double -101.0";

```
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/62#discussion_r727009486" expanded>

Instead of TYPE_STOCK can rename to TYPE_INSTRUMENT for accuracy
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/62#discussion_r727009680" expanded>

Remove the blank space
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/69#discussion_r727607726" expanded>

Given this, maybe shift the logger attribute from addinstrument parser to inputparser instead
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/73#discussion_r730496400" expanded>

Can indent these as they are sub section of add
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/73#discussion_r730496425" expanded>

include expiry as it isnt optional
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730496904" expanded>

I think can hardcode the filepath variable as a attribute in storage class
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730497024" expanded>

Is there a reason why these arent final?
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730497384" expanded>

To reduce a dependency of command being dependent on storage, can we have something like storage.updatefileData and pass in the instrumentalist instead?
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730497454" expanded>

so storage is only dependent on instrument and no other classes
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730497487" expanded>

These would change if storage is decoupled from command
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730497542" expanded>

this shld be final
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730498429" expanded>

Can remove the this
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730498773" expanded>

Abstract out the "data" and  "data/mTracker.txt" to a private attribute like FILE_PATH
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730499113" expanded>

can use streams here, then getSize wont be necessary
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730499398" expanded>

Also pass in the instrumentList instead of whole instrumentManager
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730499513" expanded>

Also abstract out the ";" as a constant and there is no need to put "this." 
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730499846" expanded>

Remove this method and create a new class in fileManager that does all the conversion instead
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730500202" expanded>

Can rename to updateFileData
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r730498894" expanded>

Just checking is this the function where we will be loading the saved data as well?

</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/87#discussion_r730599700" expanded>

It should be edit INDEX
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/87#discussion_r730600764" expanded>

Instructions here should be "Please enter one or more " + instrument.getType() + " parameters to edit." + instrument.getListOfParameters());

example: "Please enter one or more stock parameters to edit. (Accepted parameters: name, currentprice, sentiment and remarks)

Then the user can give a string like this: "name currentprice" for eg, not the index
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/87#discussion_r730601561" expanded>

After the user give parameters, then the bottom part proceeds as per normal in the order that the attributes are defined in the instrument class. So for stock its name followed by currentprice, sentiment then remarks
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/88#discussion_r730618487" expanded>

This was suppose to be under crypto add, it got displaced down here
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/89#discussion_r730921142" expanded>

typo 'singleton'
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/93#discussion_r731561075" expanded>

Just say its a basic java class that contains the helper methods for displaying the different features to the user
^something like this. Reason is because java class containing private string attributes does not seem completely accurate, as we have generally have helper methods of that sort
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/96#discussion_r732379292" expanded>

the "TYPE" was meant to be a placeholder, in your specific example it should be stock
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732399383" expanded>

Avoid saying main parent class&gt;- its not exactly the main, instrumentManager class and instrument are both like equally important and do different stuff. Can just say contains both the InstrumentManager and Instrument class
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732399714" expanded>

can change to bullet points, we are not exactly describing a seq here
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732400494" expanded>

```suggestion
`Stock` implements the Overridden methods (e.g. `toList()`).
```

to highlight the method
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732400770" expanded>

```suggestion
1. Stores the instrument data through `Instrument` objects which are contained and managed by the `InstrumentManager`
```

^ something like this
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732401952" expanded>

Can remove first, I notice the sequence diagrams for parser may also show an equivalent like add stock. But I think the sequence diagram for adding an instrument seems more appropriate here. What do you think? Do you have an alternative seq diagram we can show for parser? 
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732402160" expanded>

Can add in point about InstrumentManager being a singleton because its imperative that only one Manager exists and that there are no way for a user to add instrument to different lists etc
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732403039" expanded>

Rephrase to like "Does not have any dependencies on any other components, as the instrument is meant to responsible solely for the data representation and modification" 
^something like this
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r732409713" expanded>

Ohh I see thank you!
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732410960" expanded>

Yea I think the seq diagram maybe we can think of better functionality, add functionality is definitely the hardest, maybe both parser and instrument we can go for something simpler like delete, list or edit
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732635836" expanded>

I think theres no need to create this function here. Try to leave all validation checking related stuff to the parser. Can look at my delete PR
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732636744" expanded>

This conditional wont be necessary if validation is done in parser, so far our commands execute is called when all inputs are gd
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732637787" expanded>

This will throw an error if user puts non integer
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732638362" expanded>

Plus magic number 1, if i am not wrng u defined a const above for this
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732639436" expanded>

Can define X as a DONE_SYMBOL and space as NOT DONE in TextUi
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732641166" expanded>

I think getType should appear first so its 
Type: stock [x], not Type: [x] stock
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732643102" expanded>

toString shouldnt return this, its not what the method is for, i think it shld be defined under another function
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732645346" expanded>

The style of this, feel free to modify if u feel it would look better
</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732716232" expanded>

I realise its not exactly accurate as my delete command execute has try and catch. I suppose the parser just validates that its a valid number, but whether is a valid number its validated in instrumentManager
</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r732739613" expanded>

I have updated my delete PR to reflect more of how the error handling shld be done
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/100#discussion_r732820765" expanded>

```suggestion
The `Command` component:

* Each command class is responsible in carrying out its respective function where each command will execute different actions on the model component. In addition they ensure that the user sees the correct messages based on their input
```

Something like this, rephrase if u can make it better

</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/100#discussion_r732822127" expanded>

```suggestion
* All Command classes have a method `execute()` that does the actions required according to the user's input.
```
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/100#discussion_r732825410" expanded>

```suggestion
* Contains a parent `AddInstrumentCommand` class where all commands related to adding an instrument inherits from.
```
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/100#discussion_r732826215" expanded>

```suggestion
* Other than ExitCommand and InvalidCommand, the other command classes are dependent of on the InstrumentManager in order to execute the required actions on the stored instruments.
```
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/100#discussion_r732834524" expanded>

```suggestion
* The command classes are dependent on the `TextUi` class. This allows the command class to display its execution results to the user.
```
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733383301" expanded>

Can remove the unused imports
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733385212" expanded>

the public variable shld come first
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733387044" expanded>

can abstract in a separate function like addSavedInstrumentToList
also define the magic values, like SEPARATOR = ";", INSTRUMENT_TYPE_INDEX = 0, CRYPTO_TYPE = "Crypto" and so on 
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733387851" expanded>

Erm we shld use this default for scenarios where the user somehow corrupted the textSegment[0]
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733391454" expanded>

define the magic indexes. To error handle, we should validate each field, like what we did for addParser, so if possible check out whether can make file not writable. In anycase for error handling can do in separate PR. I have plans to refactor the validations out of parser -&gt; https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/92
Once refactored along with standardising the custom exceptions, we can work on error handling for file
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733393298" expanded>

I noticed that other instrument type remarks require a different index, if so just define specifically REMARK_FOREX_INDEX for example for the different types
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733394737" expanded>

can define the "\n" or use System.lineseparator if that works.
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733397130" expanded>

can abstract this to a separate function
And the displayFileError I don't think is appropriate here. Should displayFileWriteError()
You may need to create specific displayFileErrors for different scenarios, loading the file, reading the file, writing the file etc
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733403735" expanded>

Looking this reminds me of the instrumentParser, do you think you can create the child classes like ForexDecoder etc each one add to list, it helps to reduce the repeating of general attributes
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733404241" expanded>

Not necessary in this PR, in the interest of time. But if its something u think its good, can create a issue for it and put under the code quality issue
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733409267" expanded>

Can a add loadfile display here so that user knows that its loading from saved data. Under the if block add a create file display
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/108#discussion_r733674011" expanded>

Didnt catch this just now, the 'this' in this.file can remove
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/108#discussion_r733679889" expanded>

Can create 3 attributes in the InstrumentDecoder like DECODED_NAME, DECODED_PRICE, DECODED_SENTIMENT,
then use a method called decodeGeneralAttributes to assign these values. Like that for each of the instrument decoder no need to keep repeating these 3 lines
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r733682991" expanded>

Can make the getStatusIcon as a method in textui instead that takes in the isDone parameter. Trying to eliminate any dependence instrument component has on TextUi so that the future refactoring is easier
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734108419" expanded>

Can help abstract this out to another function, I realise its going to be used one more time with edit also
</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734109385" expanded>

```suggestion
        if (!isDone) {
            return;
        }
        set the instrument as done
```

^ to make the happy path prominent
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734109751" expanded>

Would it be better to instead pass the Instrument instead of the manager, cause if I am not wrong the instrument has a markDone method. Like that there is no need for lastIndex variable
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734110570" expanded>

Can rename to setDoneStatus/checkDoneStatus, setIsDone seems to imply that its setting instrument as done, not checking the done status
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734111412" expanded>

Can remove this extra line
</panel>

<panel  header="**125 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734111645" expanded>

Can remove the extra line here
</panel>

<panel  header="**126 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734112359" expanded>

Can remove this. I dont think this is being used anywhere else
</panel>

<panel  header="**127 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734114265" expanded>

Since this parser is going to be used repeatedly, can declare a private InputParser parser, then in the @beforeEach function, assign parser as new InputParser(), like that for all the methods below can remove the line "InputParser parser = new InputParser();"

^do rename the @BeforeEach function, to like initialiseTestComponents or something
</panel>

<panel  header="**128 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734368315" expanded>

rename i to instrument
</panel>

<panel  header="**129 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734368968" expanded>

Can define the space " " here
</panel>

<panel  header="**130 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734371383" expanded>

Do you think its better to rename to like displayInstrumentGeneralView

then for the view command, got a function that does like displayInstrumentSpecificView, cant think of a good name for now
</panel>

<panel  header="**131 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734371584" expanded>

I think the author tags suppose to be our github userid
</panel>

<panel  header="**132 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734372282" expanded>

Can print out the instrument with general attributes. Given that you deleted toString I think this will give an error, not sure, but can print out more details
</panel>

<panel  header="**133 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734480186" expanded>

Abstract out to a display general headers method
</panel>

<panel  header="**134 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734482153" expanded>

My bad, i understand why u did this, to decouple the textui from instrument, but i think these and the ones below can be methods in the instrument classes, cause these stuff dont call any TextUi formatting methods. Psps. Like that there is no need for the above if statements to check the type cause can just use polymorphism
</panel>

<panel  header="**135 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734482641" expanded>

So the method in instrument class can be like getAttributesWithHeaders or something
</panel>

<panel  header="**136 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734482789" expanded>

This method wont be needed with the suggestion below
</panel>

<panel  header="**137 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734577416" expanded>

may rename to like getAndValidateIndexNumber
</panel>

<panel  header="**138 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734577682" expanded>

I think this is to be put before instrumentManager.addInstrument(crypto)
same for the rest
</panel>

<panel  header="**139 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734583147" expanded>

I think can just return the symbol, likewise for the getICON and on the UI side use the checkboxDisplay function to create the boxes. Idk when my checkboxDisplay method was deleted lol
</panel>

<panel  header="**140 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734583526" expanded>

is there a reason why the author tags are being removed?
</panel>

<panel  header="**141 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734584882" expanded>

So here can do like createCheckboxDisplay(instrument.getIcon()) and createCheckboxDisplay(instrument.getStatusIcon())
</panel>

<panel  header="**142 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734610088" expanded>

Sry didnt catch this just now, rename to initialiseTestResources or something
</panel>

<panel  header="**143 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734610341" expanded>

```suggestion
        parser = new InputParser();
        INSTRUMENTS = new ArrayList<>();
        INSTRUMENTS.add(TEST_STOCK);

```
</panel>

<panel  header="**144 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734610588" expanded>

Can use it for the getIcon also
</panel>

<panel  header="**145 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734611402" expanded>

Remove these 2 lines since they are not used
</panel>

<panel  header="**146 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/121#discussion_r734616144" expanded>

can change it to public
</panel>

<panel  header="**147 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734913748" expanded>

Can use the getAndAddValidateIndexNumber method
</panel>

<panel  header="**148 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734913883" expanded>

Remove the bracket, there is a textUi createbox method that will handle this,
Shift the protected to above private, order shld be public, protected, private
</panel>

<panel  header="**149 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734913950" expanded>

The typeIcon and StatusIcon can be created on the TextUi end. So like in TextUi its createBoxDisplay() 2 times for type and status, then u call instrument getGeneralParams
</panel>

<panel  header="**150 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734914411" expanded>

```suggestion
        System.out.println(TAB + createBoxDisplay(newInstrument.getTypeIcon) 
              + createBoxDisplay(newInstrument.getStatusIcon)
              + newInstrument.getGeneralParams() + " - has been added to list.");

```
</panel>

<panel  header="**151 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734914518" expanded>

```suggestion
        return idx + INDEX_BRACKET
                + createBoxDisplay(instrument.getIcon())
                + createBoxDisplay(instrument.getStatusIcon())
                + instrument.getGeneralParams();

```
</panel>

<panel  header="**152 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734914649" expanded>

```suggestion
                + createBoxDisplay(instrument.getIcon())
                + createBoxDisplay(instrument.getStatusIcon())
                + instrument.getGeneralParams());
```
</panel>

<panel  header="**153 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734914658" expanded>

same for above
</panel>

<panel  header="**154 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734913699" expanded>

remove this empty line
</panel>

<panel  header="**155 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/122#discussion_r734915643" expanded>

I think can make these 2 public
</panel>

<panel  header="**156 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/122#discussion_r734916294" expanded>

Delete this whole file can create test for validate class instead. Done forget to rename the test function names appropriately like instead of addName_validName_expectSuccess() -&gt; rename to like validateName_validName_expectSuccess
</panel>

<panel  header="**157 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/122#discussion_r734935186" expanded>

can capitalise all these
</panel>

<panel  header="**158 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/127#discussion_r734990906" expanded>

is there a reason why got this addition? So far this has only been used on index based commands like delete, view etc
</panel>

<panel  header="**159 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/127#discussion_r734990993" expanded>

is there a reason for displaying keyword as uppercase view instead of whatever the user gave?
</panel>

<panel  header="**160 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/127#discussion_r734991065" expanded>

Can define the 0 as NONE or something
</panel>

<panel  header="**161 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735081205" expanded>

swap them around, private is suppose to be before protected
</panel>

<panel  header="**162 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735083605" expanded>

can abstract this to editGeneralParameters. The other 2 parameters below are editEtfSpecificParameters
</panel>

<panel  header="**163 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735083978" expanded>

```suggestion
        String parsePreviousPrice = previousCurrentPrice.toString();
```
</panel>

<panel  header="**164 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735084169" expanded>

Given the comments above, you can either delete this or declare 2 attributes
protected Instrument instrumentBeforeEdit
protected Instrument instruemntAfterEdit
</panel>

<panel  header="**165 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735084326" expanded>

```suggestion
    protected void editGeneralParameters(Instrument instrumentToEdit) {
        editName(instrumentToEdit);
        editCurrentPrice(instrumentToEdit);
        editSentiment(instrumentToEdit);
```

You would need to pass in instrumentToEdit as a parameter when you remove the instrumentToEdit attribute
</panel>

<panel  header="**166 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735084551" expanded>

Can just make this return COMMAND_WORD like addinstrumentClass cause this class isn't the one executing but its child classes
</panel>

<panel  header="**167 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735085893" expanded>

Put the execute method in here where the etf is edited
</panel>

<panel  header="**168 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735086400" expanded>

Something like this
```suggestion
    public String execute() {
        AssertCommandHelpers.assertIndexWithinBounds(instrumentManager.getSize(), index);
        InstrumentBeforeEdit = instrumentManager.getInstrument(index);
        InstrumentAfterEdit = instrumentManager.editInstrument(index, editedParameters);
        TextUi.displayInstrumentComparison(InstrumentBeforeEdit, InstrumentAfterEdit);
        return COMMAND_WORD;
    }
```

when displaying the instrument can use the getAllParams method to show the full difference
</panel>

<panel  header="**169 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735086666" expanded>

These methods should be shifted into the instrument classes, excluding the TextUi.displayEditRemark, I think just showing instrument before and after would be sufficient. need not acknowledge every single attribute change
</panel>

<panel  header="**170 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735086854" expanded>

This shouldnt be needed if you decouple the command from the editing of instrument, but letting the instrument class handle the editing attributes part 
</panel>

<panel  header="**171 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735087100" expanded>

here these methods can be shifted to the general instrument class cause they are general parameters
</panel>

<panel  header="**172 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735087168" expanded>

Same as above, what is to be done for EditEtfCommand is essentially the same for all other classes
</panel>

<panel  header="**173 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735087351" expanded>

Remove these and shift them to ErrorMessages.
</panel>

<panel  header="**174 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735086719" expanded>

So the instrumentManager.editInstrument would call the instrument.edit method. In the edit method will have the methods from above
</panel>

<panel  header="**175 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735087503" expanded>

Can create another method, like displayEditInstrumentNameInstruction. The text should also be different like "Enter a new name" 
</panel>

<panel  header="**176 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735087907" expanded>

same here
</panel>

<panel  header="**177 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735087944" expanded>


```suggestion
        editNameParameter(instrumentType, parametersGiven);
```
</panel>

<panel  header="**178 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735088168" expanded>

The switch statements are not needed. Only one EditInstrumentParser class is needed. 
We can have one method getEditParameters() that would get all the parameters like name, price, sentiment, remarks, expiry, entry, exit etc. The reason this is correct is because when the user enters the attributes to edit we have a filtering method that removes any attributes that are not found in the instrument
</panel>

<panel  header="**179 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735088180" expanded>

Add new line
</panel>

<panel  header="**180 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735088244" expanded>

so here also need all other edit parameters 
</panel>

<panel  header="**181 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735088332" expanded>

Suppose to validate the return parameter taken in
</panel>

<panel  header="**182 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735088649" expanded>

this function here filters out the attributes which allows us to use only one editinstrument class. 
also can use stream here 
Arrays.stream(parametersToEdit).
		forEach((param) -&gt; TextUi.displayIfAttributeExist(validAttributes, param)).
		filter(validAttributes.contain(param) == true).collect(Collectors.toCollection(HashSet::new));

^ the syntax is not fully correct but this is the idea. We also want to let the user know that we are discarding some of the invalid attributes they gave instead of silently failing.

So for example user edits stock but parametersToEdit contains past-returns which is an invalid attribute. Need to say past-returns is an invalid attribute, ignoring it for example.
</panel>

<panel  header="**183 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735088805" expanded>

rename to filterOutInvalidParameters, this is not a boolean method
</panel>

<panel  header="**184 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735089255" expanded>

I think its ok not to tell the user all the changes in attributes. But just one display saying instrumentBeforeEdit and instrumentAfterEdit
</panel>

<panel  header="**185 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735089536" expanded>

should not be needed from above comments
</panel>

<panel  header="**186 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735089744" expanded>

this does not print out the attributes of instrument like (name, current-price, sentiment) etc. Rather it prints out the actually instrument data like its name, price etc which is not what we want to show to user.

So the instrument class actually needs a formatted method that prints the attributes of instrument class in this style
(name, current-price, sentiment, ...)


</panel>

<panel  header="**187 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735189513" expanded>

```suggestion
        instrumentManager.editInstrument(index, editedParameters);
```
</panel>

<panel  header="**188 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735189536" expanded>

```suggestion
        TextUi.displayEditBeforeAfter(instrumentBefore, instrumentAfter);
```
</panel>

<panel  header="**189 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735189747" expanded>

```suggestion
        editedParameters.put(NAME_ATTRIBUTE, inputName);
```
Pls correct it for the rest, i wont annotate them
</panel>

<panel  header="**190 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190105" expanded>

Can change inside the isValidPastReturn class. I realise the validation method is not correct. Currently it only checks if past return is a double. But need to check if past return is &gt; -100 percent. Can look at isValidPrice
</panel>

<panel  header="**191 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190363" expanded>

remove the additional newline here
</panel>

<panel  header="**192 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190394" expanded>

```suggestion
    public HashSet<String> filterInvalidParameters(String[] parametersToEdit, HashSet<String> validAttributes) {

```
</panel>

<panel  header="**193 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190486" expanded>

```suggestion
        for (String param: parametersToEdit) {

```
</panel>

<panel  header="**194 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190742" expanded>

Sry it wasnt caught in the other prs, but can rearrange. Public -&gt; protected -&gt; private
</panel>

<panel  header="**195 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190879" expanded>

Abstract these to individual functions. 
</panel>

<panel  header="**196 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735190937" expanded>

```suggestion
    public void editGeneralParameter(HashMap<String, String> editedParameters) {

```
</panel>

<panel  header="**197 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735191022" expanded>

```suggestion
    protected HashMap<String, String> editedParameters;
```
</panel>

<panel  header="**198 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735191053" expanded>

```suggestion
    public EditInstrumentCommand(HashMap<String, String> editedParameters) {
```
</panel>

<panel  header="**199 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735191174" expanded>

```suggestion
    protected static final String SEPARATOR = ", ";
```
is there a reason for space?
</panel>

<panel  header="**200 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735191464" expanded>

Same here abstract to individual methods. And create a editCryptoSpecificParameters. Similar to the addXYZCommand
</panel>

<panel  header="**201 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/130#discussion_r735192022" expanded>

Ensure that when displayed it wont be like "expiryis an invalid ... "
</panel>

<panel  header="**202 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735193224" expanded>

Can check the Styles.puml, you diagram should have white words in the boxes instead of blackwords, 
its hard to see
use this in styles
-> skinparam Participant {
    BorderThickness 0
    FontColor #FFFFFF
    FontName Arial
}

also hide the footbox which is the bottom box at the end of the lifeline
</panel>

<panel  header="**203 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735193345" expanded>

suppose to have 2 parameters, done and an index number like 3
</panel>

<panel  header="**204 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735193504" expanded>

this function is called within the getDoneInstrumentCommand, not outside of it
</panel>

<panel  header="**205 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735193691" expanded>

The setIndex is suppose to start a new activation bar outside of the Done constructor activation bar. It is not self-invocating
</panel>

<panel  header="**206 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735194224" expanded>

Can u check the activate order, the activation bar extends outside the point when get(Index) starts. the activation bar is suppose to start when get(index) starts.
Also no need the get(Index), its a java arraylist method, so its not exactly correct that get method is an instrument method
</panel>

<panel  header="**207 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735195984" expanded>

Add newline
</panel>

<panel  header="**208 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735196237" expanded>

to show inheritance need to use the open arrow.   ".|>" likewise for the model diagram
</panel>

<panel  header="**209 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/132#discussion_r735196588" expanded>

Sry maybe I shouldnt have said smiley faces. Just remove the emojis for the exit and greet message. Even the smiley emoji gets corrupted in the display
</panel>

<panel  header="**210 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735196104" expanded>

Can we have like XYZDecoder instead of all classes. Reason is that you also need to draw dependencies between the classes here and instrument and instrumentManager class. So this helps to reduce cluttering.
Can look at my console diagram in the other pr. Dont forget to add notes so readers know what XYZ is referring to
</panel>

<panel  header="**211 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735195375" expanded>

For the large boxes can we choose the like similar color to the class they represent. But use a like a very faint color or something. You may need to use a color picker and define a new color. Same for console and model. UI already looks good so can stick with it

Can look at my addstockseqdiagram. I think the faint color could work
</panel>

<panel  header="**212 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735563201" expanded>

```suggestion
a new text file to store the data. It updates the file by calling the `writeFile()` method in the `InstrumentEncoder` class.
```
</panel>

<panel  header="**213 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735564010" expanded>

```suggestion
InstrumentManager-> Instrument: markAsDone()
```
</panel>

<panel  header="**214 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r735564369" expanded>

no need to say return, it does not exactly return, its a void method
</panel>

<panel  header="**215 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/133#discussion_r735582185" expanded>

Can shift this to instrument instead of repeating for every instrument class
</panel>

<panel  header="**216 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/133#discussion_r735590659" expanded>

```suggestion
        StringBuilder combineString = new StringBuilder();
        String[] splitRemarks = remark.trim().split(REGEX_SEPARATOR);
        for (int i = 0; i < splitRemarks.length; i++) {
            if (i % WORDS_PER_LINE == 0 && i != 0) {
                splitRemarksWithSeparator.add(System.lineSeparator());
            }
            splitRemarksWithSeparator.add(splitRemarks[i].trim());
            combineString.append(SPACE);
        }
        return combineString.toString();

```
</panel>

<panel  header="**217 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736030706" expanded>

Add newline here
</panel>

<panel  header="**218 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736030790" expanded>

Add newline
</panel>

<panel  header="**219 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736031260" expanded>

can draw the dependencies to other components like model and UI, similar to my console class diagram.
</panel>

<panel  header="**220 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736032147" expanded>

Just write else
</panel>

<panel  header="**221 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736032752" expanded>

can tab this so that its clear that loop is within the alt else block. https://plantuml.com/sequence-diagram
check under grouping, the loop in indented
</panel>

<panel  header="**222 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736033078" expanded>

```suggestion
{"Crypto", "32.0", "positive","true", "2022-01-12", ""}
```

don't forget the status and use the right format for date
</panel>

<panel  header="**223 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736033271" expanded>

indent here also so the opt box is within the loop
</panel>

<panel  header="**224 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736033572" expanded>

```suggestion
CryptoDecoder-> Crypto: Crypto("Crypto", "32.0", "positive","true", "2022-01-12", "")
```
</panel>

<panel  header="**225 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736033805" expanded>

write return crypto here
</panel>

<panel  header="**226 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736034480" expanded>

indent here, the loop box is not suppose to overlap with the activation bar of storage updateFileInstruments. But only the bar of writeFile cause writeFile is the method that implements the loop
</panel>

<panel  header="**227 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736034978" expanded>

```suggestion
eg. {"Stock;AAPL;32.0;positive;false;Nil"}
```
</panel>

<panel  header="**228 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736063408" expanded>

Also need to draw dependencies to console, cause our storage component will need to validate the file data. More specifically InstrumentDecoder and XYZDecoder need to have a dependency on Validate class in console
</panel>

<panel  header="**229 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736063637" expanded>

```suggestion
note bottom of XYZDecoder: XYZDecoder = CryptoDecoder, ForexDecoder, \nEtfDecoder, StockDecoder
```
</panel>

<panel  header="**230 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736124562" expanded>

```suggestion
* `Expiry` Expiry date of the crypto. Date only in the `YYYY-MM-DD` format is allowed.
```
</panel>

<panel  header="**231 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736124862" expanded>

```suggestion
* `Name` Name of forex. Empty name is not allowed and forex pairs' names should be 
```
</panel>

<panel  header="**232 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736125616" expanded>

maybe use an actual etf just in case cause its etf parameters
</panel>

<panel  header="**233 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736125855" expanded>

The expected outcome says 4th instrument, so standardise it
</panel>

<panel  header="**234 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736126109" expanded>

what is the &gt;> suppose to be? Is it a link or something? If its link can use 'this' with a hyperlink to the section
</panel>

<panel  header="**235 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r736342197" expanded>

Remove this method, you can compare hashmaps instead of creating a string to compare
</panel>

<panel  header="**236 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r736343223" expanded>

use an expected output hashmap
https://howtodoinjava.com/java/collections/hashmap/compare-two-hashmaps/
and compare the 2 hashmaps that we got
</panel>

<panel  header="**237 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r736343983" expanded>

can create variable like TEST_STOCK, see inputParserTest
</panel>

<panel  header="**238 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r736345540" expanded>

Can maybe rename with the user input characteristics, putting number isn't the best
like USER_INPUT_CURRENT_PRICE_AND_SENTIMENT_EDIT or something. Same for EXPECTED_OUTPUT and PARAM_INPUT
</panel>

<panel  header="**239 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736254749" expanded>

I made a mistake in my console class diagram. I think this is suppose to be abstract
</panel>

<panel  header="**240 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736255738" expanded>

Storage also depends on instrument and instrumentManager need the arrows
</panel>

<panel  header="**241 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736321540" expanded>

```suggestion
            {"Crypto", "32.0", "positive", "2022-01-12", ""}
```
</panel>

<panel  header="**242 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736323050" expanded>

Looks like i need to update the main architecture diagram with error component. Can choose a component colour. The grey box is too light to view the words

And you need to also draw dependencies between the filemanager and error component since we are including it in
</panel>

<panel  header="**243 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736326567" expanded>

You need to shift this outside so that the altbox does not exceed the storage activation bar
</panel>

<panel  header="**244 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736328846" expanded>

You need a self-invocation for the decodeGeneralAttributes method
</panel>

<panel  header="**245 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739653285" expanded>

Is there a reason why you have to do a check here in instrumentDecoder? InstrumentDecoder takes file data and convert it to instruments, it has nothing to do with the user setting the done status
</panel>

<panel  header="**246 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739654553" expanded>

Can test the program see whether done still works, I am not sure if you initialise an instrument in the done command and set that instrument as done whether it actually set the instrument in the manager as done also. TLDR, I am not sure if they are 2 different objects. If it works sure lets continue with the implementation
</panel>

<panel  header="**247 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739660425" expanded>

<img width="921" alt="ss1" src="https://user-images.githubusercontent.com/60163283/139537403-3e02efe6-549e-4e60-a2d1-be326ac1cdc8.PNG">

I think you have to create a ref box in there to reference the bottom image. The bottom image is also formatted weirdly. Then the bottom image is to be encompassed in a sd ref frame
</panel>

<panel  header="**248 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739660754" expanded>

Can use a darker orange for error box, it does not complement well with white font colour
</panel>

<panel  header="**249 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739661025" expanded>

```suggestion
in the `Storage` class which uses `InstrumentDecoder#readFile(instrumentManager, fileData)`. This method calls 
```
Can rephrase as u see fit, implements doesn't seem the most accurate here
</panel>

<panel  header="**250 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739661172" expanded>

```suggestion
`InstrumentDecoder#addSavedInstrumentToList(instrumentManager, textSegment)` for each pre-existing instrument which will add the corresponding 
```
I think we should keep it consistent with this kind of annotation whenever we are talking about methods that are in a separate class that is not the main class (eg in this case the main class we talking about is Storage and InstrumentDecoder is the secondary class)
</panel>

<panel  header="**251 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739661229" expanded>

```suggestion
added to the `InstrumentManager`. For example when loading a stock instead of calling `CryptoDecoder#addCryptoToList(textSegment, instrumentManager`
```
Same here and for addStockToList as well
</panel>

<panel  header="**252 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739661400" expanded>

```suggestion
the `updateFileData(instruments)` in the Storage class which implements the `writeFile(instruments, writeToFile)` method
```

Similar issue here with the implements and InstrumentEncoder#writeFile 
</panel>

<panel  header="**253 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739661420" expanded>

```suggestion
in the `InstrumentEncoder`. This method calls the `Instrument#textFileFormatting()` method in the Instrument class for every instrument
```
</panel>

<panel  header="**254 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739661508" expanded>

Regarding the frame can hold on first, I asking Rafael if the entities are suppose be inside the grid or can it be outside
</panel>

<panel  header="**255 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739761717" expanded>

Then use the instrument doneInstrument method &gt;- use this method to handle the exception. Its bad design to handle an exception that is not related to the class at all
</panel>

<panel  header="**256 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739777148" expanded>

Actually scrap my comment above, I think we shld ask Rafael he may know more
</panel>

<panel  header="**257 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739769303" expanded>

The instrumentManager is suppose to manage the instruments which means perform the actions on the instruments. 
The instrumentManager is already coupled with the classes despite your modification. Just because its in the abstract index class does not mean its not coupled with DoneCommand. But by doing this you are unnecessarily coupling an unrelated exception to the storage
</panel>

<panel  header="**258 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198#discussion_r739781109" expanded>

Use do while loop here
</panel>

<panel  header="**259 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739815397" expanded>

```suggestion
        boolean isDoneStatus = instrument.getIsDone();
```

to make it sound more boolean
</panel>

<panel  header="**260 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739815457" expanded>

Remove unused imports
</panel>

<panel  header="**261 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739815470" expanded>

Remove unused imports
</panel>

<panel  header="**262 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198#discussion_r739909415" expanded>

Sry missed this the first time
```suggestion
        case AddStockCommand.COMMAND_WORD:
              // Fallthrough
        case AddCryptoCommand.COMMAND_WORD:
              // Fallthrough
        case AddForexCommand.COMMAND_WORD:
              // Fallthrough
        case AddEtfCommand.COMMAND_WORD:
```

according to the java coding standards
</panel>

<panel  header="**263 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198#discussion_r739909613" expanded>

Add break statement here. If its better to use an if else feel free to do so
</panel>

<panel  header="**264 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/203#discussion_r739937707" expanded>

is there a reason why this is not refactored like the rest of the other test classes?
</panel>

<panel  header="**265 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r739942628" expanded>

Ok Rafael got back to me, the entities can be outside the grid, entities have to be inside the grid only if the obj is being created within the ref frame
</panel>

<panel  header="**266 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198#discussion_r739945376" expanded>

Ohh its cause u are returning, since that's the case I think its ok
</panel>

<panel  header="**267 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/207#discussion_r740096260" expanded>

Use past date here
</panel>

<panel  header="**268 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740097713" expanded>

```suggestion
    public static final String INVALID_FOREX_NAME_GIVEN_ERROR = "Sorry forex pair codes must contain 6 letters! "

```
</panel>

<panel  header="**269 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740098398" expanded>

```suggestion
    public static final String INVALID_NEGATIVE_PRICE_ERROR = "Sorry price cannot be negative. "

```
</panel>

<panel  header="**270 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740099546" expanded>

```suggestion
    public static final String INVALID_SENTIMENT_EMPTY_ERROR = "Sorry sentiment cannot be empty. "
            + "Please enter either positive, negative or neutral.";

```
</panel>

<panel  header="**271 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740106068" expanded>

can I refer to https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/173#issuecomment-956110579

I know we discussed this a few weeks ago, but it seems like this restriction even brought up the issue in the first place. I need to know your opinion on why forex specifically must have these special restrictions
</panel>

<panel  header="**272 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740109443" expanded>

Can rename this error method
</panel>

<panel  header="**273 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740120570" expanded>

I dont think this addresses what the user is pointing. 
Say user input: find   (with some spaces in between like the user screenshot)      phrase to find
^ this implementationn would give " (with those spaces)  phrase to find" as the search string. So there is that front space. Are we going to remove the extra spaces? If so u just need to do searchString.trim()
</panel>

<panel  header="**274 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740121400" expanded>

Can remove this method if its not being used. If I recall it was not used at all
</panel>

<panel  header="**275 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740122161" expanded>

If i am not wrong java ide says this can be converted to local variable as its only used in execute, so to reduce the scope lets follow the ide suggestion
</panel>

<panel  header="**276 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740204057" expanded>

Alright! 
</panel>

<panel  header="**277 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740220310" expanded>

It can be like this USD/SGD, like most of the time they display it like this
</panel>

<panel  header="**278 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740224951" expanded>

Whats the limit to restriction? Say we restrict numbers what abt special characters?
</panel>

<panel  header="**279 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740667841" expanded>

Can abstract the expression to a constant like FOREX_REGEX
</panel>

<panel  header="**280 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740674746" expanded>

I think can get this method to inherit from the AddInstrumentParserTest. But rename the AddInstrumentParserTest to like GeneralInstrumentParserTest or InstrumentParserTest. Cause your edit class test is not exactly addparser
</panel>

<panel  header="**281 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740674875" expanded>

```suggestion
        HashMap<String, String> expectedResult = new HashMap<>();
```

Can remove the space, check it carefully for the rest of the code
</panel>

<panel  header="**282 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740681740" expanded>

Sry I didnt catch this earlier. The getParametersToEdit method has an exact name as the one in the inputParser which confused me. Can rename the "getParametersToEdit" method to like "createEditCommand"
</panel>

<panel  header="**283 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740682032" expanded>

Why is this not EditInstrumentParserTest
</panel>

<panel  header="**284 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740682604" expanded>

Remove when you extend this class
</panel>

<panel  header="**285 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740832831" expanded>

Invert this
```suggestion
    public static boolean isNonEmptyEditParametersInput(String input) {
        return !input.isEmpty();
    }
```

Our validate functions are mostly isSomeSuccessCheck <- so lets keep this convention. Then in the input parser it would be if (!Validate.isNonEmptyEditParametersInput) ... 
</panel>

<panel  header="**286 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740834659" expanded>

Change according to the first comment
</panel>

<panel  header="**287 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740834981" expanded>

Can rename to like EditEmptyParametersError &gt;- just for convention are exceptions have an error at the back
</panel>

<panel  header="**288 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740835787" expanded>

```suggestion
    public static final String EDIT_EMPTY_ERROR = "Edit parameters cannot be empty aborting edit process";
```
^something like this tell, the user that the edit process is terminated cause of the error
</panel>

<panel  header="**289 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740836817" expanded>

```suggestion
            expectedResult.put(expectedKeys[i], expectedValues[i]);
```
</panel>

<panel  header="**290 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740842481" expanded>

Can add an assert here that length of expectedKeys == length of expectedValues
</panel>

<panel  header="**291 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740885248" expanded>

```suggestion
    
    public void expiryExist() {
         try {
              LocalDate.parse(textSegment[CRYPTO_EXPIRY_INDEX]);
         }
    }
   

    public static boolean isValidExpiry(String[] textSegment) {
        return Validate.isValidExpiry(textSegment[CRYPTO_EXPIRY_INDEX]);
    }

    public static void validateAndDecodeSpecificAttributes(String[] textSegment) throws FileLoadError {
        if (isValidExpiry(textSegment)) {
            decodeSpecificAttributes(textSegment);
        }
        throw new FileLoadError();
    }

    public static void tryValidateAndDecodeSpecificAttributes(String[] textSegment) {
        try {
            validateAndDecodeSpecificAttributes(textSegment);
        } catch (Exception e) {
            TextUi.showErrorMessage(e);
        }
    }

    private static void decodeSpecificAttributes(String[] textSegment) {
        decodedExpiry = LocalDate.parse(textSegment[CRYPTO_EXPIRY_INDEX]);
        decodedRemarks = textSegment[CRYPTO_REMARKS_INDEX];
    }
```
</panel>

<panel  header="**292 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740902322" expanded>

```suggestion
    public static boolean isValidExpiry(String[] textSegment) {
        return Validate.isValidExpiry(textSegment[CRYPTO_EXPIRY_INDEX]);
    }
    
    public String getExpiryFromFile(String[] textSegment) {
         String expiry;
         try {
             expiry = textSegment[CRYTPO_EXPIRY_INDEX];
         } catch (IllegalArgumentException e) {
             throw new InvalidNoSavedExpiryInCryptoError();
         }
         return expiry
    }
    
    public String getRemarksFromFile(String[] textSegment) {
         String remarks;
         try {
             remarks = textSegment[CRYTPO_REMARKS_INDEX];
         } catch (IllegalArgumentException e) {
             throw new InvalidFileRemarksFormatInCryptoError();
         }
         return remarks 
    }

    public static void validateAndDecodeSpecificAttributes(String[] textSegment) throws InvalidNoSavedExpiryInCrypto, InvalidFileRemarksFormatInCryptoError,  InvalidExpirySavedInFileError {
        String expiry = getExpiryFromFile(textSegment);
        String remarks = getRemarksFromFile(textSegment);
        if (!isValidExpiry(expiry)) {
            throw new InvalidExpirySavedInFileError();
        }
        decodeSpecificAttributes(expiry, remarks);
    }

    public static void tryValidateAndDecodeSpecificAttributes(String[] textSegment) {
        try {
            validateAndDecodeSpecificAttributes(textSegment);
        } catch (Exception e) {
            TextUi.showErrorMessage(e);
        }
    }

    private static void decodeSpecificAttributes(String[] textSegment) {
        decodedExpiry = LocalDate.parse(textSegment[CRYPTO_EXPIRY_INDEX]);
        decodedRemarks = textSegment[CRYPTO_REMARKS_INDEX];
    }
```
</panel>

<panel  header="**293 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740904600" expanded>

I think you shld split this up. To make specific errors we have to create individual methods for each attribute
</panel>

<panel  header="**294 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740905257" expanded>

In general happy path shld be the no error path, not the throw error path
</panel>

<panel  header="**295 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740905474" expanded>

Remove unused import
</panel>

<panel  header="**296 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740909215" expanded>

The rest I think can follow the above. Basically need to create a few exceptions for each of the saved attribute having error. Then there isn't any need for FileLoadError &gt;- I think FileLoadError should be used only used in loadFileMethod
</panel>

<panel  header="**297 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740909859" expanded>

Feel free to abstract out into methods or something if u find out a better implementation
</panel>

<panel  header="**298 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740912615" expanded>

You also need to create an input where some parameters are missing. Given that there so many just one or 2 will do
</panel>

<panel  header="**299 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740913913" expanded>

should this be in InstrumentEncoderTest? Cause are converting from instrument to save file format.
^ in interest of time I don't think this is very impt
</panel>

<panel  header="**300 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r740917796" expanded>

I dont think this does anything as the you are just loading data in the instrumentManager, its like testing our local data/mTracker.txt is currently populated with valid data.

I think storage test isn't needed given the priorities. &gt;- I think InstrumentDecoder is enough, given that's where the errors most probably will come frm
</panel>

<panel  header="**301 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741544009" expanded>

```suggestion
        editedParameters.put(DONE_ATTRIBUTE, DONE_ATTRIBUTE);
```

Can get the user input like put in yes/no to set it as done or undone. The editing of status can go both ways
</panel>

<panel  header="**302 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741545032" expanded>

```suggestion
    protected static final String DONE_ATTRIBUTE = "done-status";
```
</panel>

<panel  header="**303 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741545720" expanded>

Use a do while loop, like the add instrument parser
</panel>

<panel  header="**304 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741546041" expanded>

This will change based on above comments
</panel>

<panel  header="**305 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r741556573" expanded>

Sry this should be IndexOutOfBoundsException
</panel>

<panel  header="**306 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r741556790" expanded>

To fix the error I think you just have to remove this method and use validateAndDecodeSpecificAttributes(textSegment);
instead. The error handling shld be done to the loop that is calling this
</panel>

<panel  header="**307 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r741557308" expanded>

Same for the rest
</panel>

<panel  header="**308 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/209#discussion_r741557724" expanded>

Can provide the spacing in the instrument class also that uses this
</panel>

<panel  header="**309 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741599732" expanded>

can add an assert in the else block that editedParameters.get(DONE_ATTRIBUTE) equals "undone" only
</panel>

<panel  header="**310 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741602225" expanded>

```suggestion
    private static final String EDIT_STATUS_MESSAGE = "Enter new Status (please enter either done or undone):";

```
</panel>

<panel  header="**311 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741602483" expanded>

```suggestion
            + "Enter either done or undone.";
```
y/n doesn't really make sense given that its query abt status
</panel>

<panel  header="**312 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741602672" expanded>

make it to lowercase so that it is case insensitive since we only allow 2 values done and undone
</panel>

<panel  header="**313 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r741603159" expanded>

```suggestion
    public static final String DONE_INDICATOR = "done";
    public static final String NOT_DONE_INDICATOR = "undone";
```
</panel>

<panel  header="**314 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/213#discussion_r741726134" expanded>

```suggestion
        assert workspace.equals(ADD_PROCESS) || workspace.equals(EDIT_PROCESS) : NOT_IN_ADD_OR_EDIT;
```
</panel>

<panel  header="**315 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/213#discussion_r741741048" expanded>

```suggestion
            () -&gt; testCryptoParameters(USER_INPUT_TRY_ABORT_AT_NAME, NO_PARAMS_EXPECTED));
```
Can create an empty string[], cause the params are redundant at that point
</panel>

<panel  header="**316 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/213#discussion_r741741451" expanded>

Same here
</panel>

<panel  header="**317 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742480314" expanded>

typo with 'planed'. Can try to link to specific issues that you opened up. I think that would be good.
</panel>

<panel  header="**318 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742480433" expanded>

State that you also write most of the meeting objectives
</panel>

<panel  header="**319 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742480767" expanded>

is this not williams pr? https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/152
If you were referring to another PR can add the link here to prevent confusion
</panel>

<panel  header="**320 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742480876" expanded>

Link to the PRs here when your diagrams are ready
</panel>

<panel  header="**321 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742481218" expanded>

Can talk about the difficulty of this feature, like what were the considerations. Can also talk about why it is important
</panel>

<panel  header="**322 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742481955" expanded>

Can shift this into team based task
https://nus-cs2113-ay2122s1.github.io/website/schedule/week12/project.html#ppp-sections-to-include-2
</panel>

<panel  header="**323 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r742508681" expanded>

This is good, I apologise for not catching the rest earlier, but for the rest of editparameters method can shift the TextUi.displayEditXYZ() into the do while loop? Right now its just querying the edit parameter forever but the user don't see the instruction
</panel>

<panel  header="**324 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r742510034" expanded>

Remove gap here
</panel>

<panel  header="**325 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r742510517" expanded>

Actually can remove the else block here and in the if block just return after markAsDone()

</panel>

<panel  header="**326 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r742510942" expanded>

Same for the do while loop in add instrument type. Currently TextUi.displayAddInstrumentFirstInstruction(); it is only displayed once. Can help shift it inside the do while loop
</panel>

<panel  header="**327 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r742511290" expanded>

Can shift this conditional inside the TextUi.displayEditBeforeAfter
</panel>

<panel  header="**328 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r742511949" expanded>

Can abstract to return SIZE_ZERO
</panel>

<panel  header="**329 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742532932" expanded>

The model component toList() method is not there anymore, can provide another overridden method?
</panel>

<panel  header="**330 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742537101" expanded>

<img width="231" alt="ss1" src="https://user-images.githubusercontent.com/60163283/140259058-12f4643e-c2b2-45c2-a454-a0abd47df0a1.PNG">

Update the the methods here, should be getAndValidateIndexNumber and getAndValidateDoneStatus
Also the textui entity can rename to <<class>> TextUi, cause all the textui methods are class level methods
https://nus-cs2113-ay2122s1.github.io/website/schedule/week10/topics.html#W10-2 
^ check out calls to static methods
Also can fix the constructor glitch, I think the latest styles shld have fixed
</panel>

<panel  header="**331 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742538078" expanded>

<img width="285" alt="ss2" src="https://user-images.githubusercontent.com/60163283/140259468-78b9f548-8256-4766-a6cb-28cea9ffdaf7.PNG">

update this part with a self invocation to getInstrumentAtIndex() <- now got the IndexedCommand abstraction. The getInstrumentAtIndex() will make a call to instrumentManager.getInstrument()

Same for markAsDone() <- instrumentManager done method does not exist anymore.
TextUi is a class level method so TextUi entity should be <<class>> TextUi
</panel>

<panel  header="**332 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742540003" expanded>

Need to update the fileManager class diagram to have methods. Important methods for storage are loadFileData, writeFileData, updateFileData. Same for InstrumentDecoder, important methods are readFile, addSavedInstrumentToList (note that they are static methods so make sure they are underlined). For XYZDecoder need method addXYZToList (also static)

For instrumentEncoder methods are editFile and writeFile (also static)

</panel>

<panel  header="**333 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742540296" expanded>

```suggestion
corresponding instrument in the `InstrumentManager` through calling the `XYZDecoder#addXYZToList(textSegment, instrumentManager)`. In the event
```
</panel>

<panel  header="**334 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742540931" expanded>

Same here for TextUi, its calling a class level method. InstrumentDecoder is also calling a class level method readFile.
</panel>

<panel  header="**335 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742541421" expanded>

InstrumentDecoder shld be &gt;&gt;class>>, same for CryptoDecoder as we are calling class level method addCryptoToList.
Also fix the constructor glitch in InvalidInstrumentInFileError
</panel>

<panel  header="**336 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742542645" expanded>

```suggestion
added to the `InstrumentManager`. For example when loading a stock instead of calling `CryptoDecoder#addCryptoToList(textSegment, instrumentManager)`
```
</panel>

<panel  header="**337 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742542858" expanded>

CryptoDecoder shld be &gt;&gt;class>>, the method calls are all class level

I think can remove the note, I don't quite get what you are saying. I think the diagram is comprehensive enough
</panel>

<panel  header="**338 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742543317" expanded>

Add newline
</panel>

<panel  header="**339 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742543341" expanded>

Add newline
</panel>

<panel  header="**340 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742560737" expanded>

I see, then just leave it in, just don't forget to link to the pr where u added the new stories
</panel>

<panel  header="**341 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742577732" expanded>

yep
</panel>

<panel  header="**342 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742615004" expanded>

The XYZDecoder shld not have addStockToList but addXYZToList. And make the diagram bigger. Make the model diagram smaller.
</panel>

<panel  header="**343 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/222#discussion_r742725655" expanded>

Add space here, same for rest
</panel>

<panel  header="**344 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/222#discussion_r742725739" expanded>

Add full stop, same for rest
</panel>

<panel  header="**345 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/222#discussion_r742725986" expanded>

Make it an action, 'gets', same for rest
</panel>

<panel  header="**346 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/222#discussion_r742726205" expanded>

Same here "handles" or "A class that handles"
</panel>

<panel  header="**347 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r742901910" expanded>

I think u can just claim this whole file
</panel>

<panel  header="**348 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r742903082" expanded>

What is this ending author tag for? If I am not wrong it either checks the next author or end of file whichever comes first.  this is at end of file alr
</panel>

<panel  header="**349 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r742903641" expanded>

Its at end of file, i dont think this is needed
</panel>

<panel  header="**350 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r742904790" expanded>

Same here
</panel>

<panel  header="**351 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r742913534" expanded>

I would like to claim the simulateConsoleInput, checkParameters methods here if that is alright with you.
</panel>

<panel  header="**352 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r742914573" expanded>

I think the testXYZParameters method for the addXYZParserTest were written by us also.
</panel>

<panel  header="**353 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/222#discussion_r743303522" expanded>

Sry no need space between the @ stuff, I was referring to the space between the description text and the first @
</panel>

<panel  header="**354 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743659926" expanded>

<img width="430" alt="ss1" src="https://user-images.githubusercontent.com/60163283/140517129-76b6f8d6-39e7-4ef6-abb1-60e033807ff9.PNG">
need to include the TextUi.displayEditInstrumentFirst... and getParametersToEdit which then calls filterInvalidParameters. Can rename valid attributes to validAttributes (add a note giving an example of valid attributes for like stock for example).  When returning from filterInvalidParameters say return filteredParameters.
</panel>

<panel  header="**355 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743660442" expanded>

<img width="339" alt="ss2" src="https://user-images.githubusercontent.com/60163283/140517626-cbb949d1-7f97-41e2-824f-87ac53d94a2d.PNG">
setIndex(1) <- need the parameter
</panel>

<panel  header="**356 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743661519" expanded>

This is not reference diagram, this is the execute part can rename it was confusing.
</panel>

<panel  header="**357 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743662332" expanded>

<img width="300" alt="ss3" src="https://user-images.githubusercontent.com/60163283/140517894-f3efc087-f455-4a1f-86db-72e3386deabb.PNG">
Should be self invocate getInstrumentAtIndex then getInstrument(1), can look at william's done feature ref diagram.
</panel>

<panel  header="**358 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743662899" expanded>

<img width="468" alt="ss4" src="https://user-images.githubusercontent.com/60163283/140518096-329d7518-3bc8-4de1-9dc2-b95911d9caa8.PNG">
getAllParams, same for below
</panel>

<panel  header="**359 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743663908" expanded>

<img width="178" alt="ss5" src="https://user-images.githubusercontent.com/60163283/140518191-93dbb177-c469-4c4f-a767-73e812a45b1d.PNG">
Method does not exist its instruments.get which is an arraylist method so can ignore.
</panel>

<panel  header="**360 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743665018" expanded>

<img width="128" alt="ss11" src="https://user-images.githubusercontent.com/60163283/140518653-694421f8-5435-43a5-b6b1-eedac1d7c869.PNG">
Can use :stock instead of instrument. in the explanation part can just say edit parameters for stock as an example. We never edit for in
strument type but always the child type
</panel>

<panel  header="**361 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743672432" expanded>

<img width="538" alt="ss9" src="https://user-images.githubusercontent.com/60163283/140519747-fb520964-5f04-4080-a717-db26afd43c6d.PNG">
Same issue, there shldnt be any incoming arrow. Make activation bar bigger than sd box. 
</panel>

<panel  header="**362 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743675218" expanded>

<img width="305" alt="ss10" src="https://user-images.githubusercontent.com/60163283/140519851-d9fd1891-f7e0-44f5-bc70-5ea002e020c9.PNG">
Once u replace instrument with stock, list down all the editXYZ methods in editGeneralParameter (editName, editCurrentPrice, editSentiment, editDoneStatus), then afterwards selfinvocate to editRemark
Remove the box note and replace that with a note stating that other instrument specific parameters will call the relevant editXYZ method. Also write a note stating what XYZ stands for.
</panel>

<panel  header="**363 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743665298" expanded>

<img width="227" alt="ss6" src="https://user-images.githubusercontent.com/60163283/140518535-40f8b517-b34e-4c74-bae8-fe2f3fc9c759.PNG">
This shld be class with << >> as calling a static method of TextUi
</panel>

<panel  header="**364 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743667658" expanded>

<img width="523" alt="ss7" src="https://user-images.githubusercontent.com/60163283/140518743-9f559816-9c17-4a4b-9541-54cf02dcafab.PNG">
No incoming arrow. Its also the wrong method (getParametersToEdit) that's incoming.
Can make the activation bar for EditInstrumentParser longer than the sd box. Can look at William and my ref diagram
</panel>

<panel  header="**365 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r743670772" expanded>

<img width="552" alt="ss8" src="https://user-images.githubusercontent.com/60163283/140519016-2ed80460-f69b-4a84-8417-a90fae98ae93.PNG">
Change to loop until valid ... is entered. The loop box is in the wrong place. The loop box should be in the editNameParameter method and editXYZParameter. And the editNameParameter should have an alt where the first condition is if the attribute is not found in the hashset do nothing, else it then does the loop.
So the loop box should be within the second box below alt in the editNameParameter.
^same for editXYZParameter. Can also add a note stating what XYZ stands for like list down all the parameters currentPrice, sentiment and so on and replace your current note about the box. Its not clear what box is referring to and doesn't seem the right term to use.
</panel>

<panel  header="**366 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743683313" expanded>

```suggestion
The ui component only contains the `TextUi.java` file and its API can be found
```
</panel>

<panel  header="**367 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743686589" expanded>

I think the term is has high cohesion
</panel>

<panel  header="**368 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743693398" expanded>

```suggestion
ListCommand#execute() calls the `displayAllInstruments(instruments)` method when the user wishes to list out all instruments in the watchlist:
```
</panel>

<panel  header="**369 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743695529" expanded>

<img width="332" alt="ss1" src="https://user-images.githubusercontent.com/60163283/140523788-9586f12c-876e-4ae1-88a3-a2ba72a05cd9.PNG">
Need the dash returning lines here, say return instrumentDisplay or something <- like its a display of an instrument in a line
</panel>

<panel  header="**370 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743696102" expanded>

I dont think need the first note cause in the text u alr said that execute invokes the displayAllInstruments()
The note dont need Instrument.getGeneralParams(), just say "The getGeneralParams() method ... 
</panel>

<panel  header="**371 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743699212" expanded>

Same here need to return from the activation bar for TextUi.
The notes try to avoid stating the class.method cause I am not sure if its correct, can just say method name, its clear enough with class its coming frm
</panel>

<panel  header="**372 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743790854" expanded>

It is still displayInstrument()
And can `ListCommand#execute()`
</panel>

<panel  header="**373 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/231#discussion_r743791661" expanded>

no need the type Arraylist&gt;instrument>, just instruments would do.
</panel>

<panel  header="**374 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744047175" expanded>

Make image bigger
</panel>

<panel  header="**375 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744047585" expanded>

```suggestion
More details about the reference frame for getting the new edited parameters from the user is given below:
```
</panel>

<panel  header="**376 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744047630" expanded>

```suggestion
Next we have a sequence diagram detailing the command execution of setting the stock with new values (in this case it is updating the stock name):
```
</panel>

<panel  header="**377 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744047772" expanded>

```suggestion
More details about checking if parameters exist in HashMap and to edit the parameters if it exists is shown below:
```
</panel>

<panel  header="**378 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744047856" expanded>

```suggestion
For example the user can edit the expiry parameter in Crypto but not in Stock.
```
</panel>

<panel  header="**379 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048217" expanded>

This should be after the first reference diagram before execute diagram cause that's where the user sees the instructional prompt.
```suggestion
From the note in the reference diagram above, each parameter the user wants to edit, 
there would be an instructional prompt to guide the user to give a valid input. This is done through the `TextUi` class.
```
</panel>

<panel  header="**380 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048309" expanded>

Add newline
</panel>

<panel  header="**381 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048338" expanded>

```suggestion
note right: Prompt user to enter in parameters and\ncheck if parameters entered are valid.\nError is thrown if there is no input.\nvalidAttributes for Stock are name,\ncurrent-price, sentiment and remarks.
```
</panel>

<panel  header="**382 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048438" expanded>

Add newline
</panel>

<panel  header="**383 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048678" expanded>

Get new edited parameters \nfrom user and create a hashmap \nassociating the parameter type \nand its new value

Add newline to make the ref box thinner and not overlap with command
</panel>

<panel  header="**384 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048827" expanded>

Add newline
</panel>

<panel  header="**385 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048874" expanded>

This should be color_console. Same for all the rest make sure the color of entity matches its component
</panel>

<panel  header="**386 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744048969" expanded>

```suggestion
group sd Get new edited parameters from user and create a hashmap associating the parameter type and its new value
```
</panel>

<panel  header="**387 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049080" expanded>

```suggestion
note left: editNameParameters check if the name is entered \nthen prompts user to provide a new name.\nMethod loop until a valid name is given.
```
</panel>

<panel  header="**388 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049213" expanded>

```suggestion
else
```
No need any words in else
</panel>

<panel  header="**389 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049297" expanded>

same here no need any else details
</panel>

<panel  header="**390 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049319" expanded>

add newline
</panel>

<panel  header="**391 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049377" expanded>

Make it bigger, make sure the text in diagram closely matches the normal text in dg, same for all the diagrams
</panel>

<panel  header="**392 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049580" expanded>

Make note not overlap with ui by using \n.

```suggestion
check if stock parameters\n exist in HashMap\n
and if it exists,\n update its parameter.
```
</panel>

<panel  header="**393 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049728" expanded>

Forget the alt here, it doesnt seem to add much value.
</panel>

<panel  header="**394 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049794" expanded>

```suggestion
note left: editName checks if the key "name" exist in HashMap\nand if it exist, it updates the name parameter
```
</panel>

<panel  header="**395 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049830" expanded>

Remove this note as we shld show all the edit method calls in editGeneralParameter
</panel>

<panel  header="**396 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744049883" expanded>

Rather create the self invocation for all the attributes like current price and sentiment under editGeneralParameters
</panel>

<panel  header="**397 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744050110" expanded>

Stock doesnt have an editSpecificParameter method
</panel>

<panel  header="**398 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744050147" expanded>

It is just editRemark &gt;- no need for editXYZ
</panel>

<panel  header="**399 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744050151" expanded>

Remove this
</panel>

<panel  header="**400 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744050346" expanded>

```suggestion
note left: The rest of the edit methods are similar to editName\n.
```
Can shift this to more central in the diagram
</panel>

<panel  header="**401 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744074716" expanded>

```suggestion
The add instrument functionality is mainly handled by the `console` and `commands` components. Within the `console`
```
</panel>

<panel  header="**402 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744074777" expanded>

Change colour to colour_console.
</panel>

<panel  header="**403 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744074984" expanded>

```suggestion
note left: This represents similar methods that does the same\nas the one above but for other parameters.\nXYZ represents all other parameters of\ncurrent price, sentiments, past returns, entry price, exit price, expiry, remarks, status.
```

It is all parameters not just for stock
</panel>

<panel  header="**404 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744075047" expanded>

make more lines, it shld not overlap ui
</panel>

<panel  header="**405 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#discussion_r744075164" expanded>

Remove the setRemark call
</panel>

<panel  header="**406 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744097029" expanded>

All the methods need a bracket with the type of parameters they take in
```suggestion
    {method} + getSize(): int
    {method} + getInstruments(): ArrayList<Instrument>
    {method} + getInstrument(int): Instrument
    {method} + addInstrument(Instrument): Instrument
    {method} + findInstruments(String): ArrayList<Instrument>
    {method} + deleteInstrument(int)
    {method} + editInstrument(int, Hashmap<String, String>)
```
</panel>

<panel  header="**407 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744097197" expanded>

Can add a note on what ABC is a placeholder for
</panel>

<panel  header="**408 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744097264" expanded>

Also need brackets along with the type of parameters they take in
</panel>

<panel  header="**409 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744097129" expanded>

Execute should be abstract, and since execute is abstract, for all the commands, need to show the execute method. The execute for indexCommand shld be abstract also
</panel>

<panel  header="**410 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744100524" expanded>

<img width="546" alt="ss1" src="https://user-images.githubusercontent.com/60163283/140603574-d5ec101f-e6e9-47fe-ae00-8e1b5b576eb8.PNG">

</panel>

<panel  header="**411 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/240#discussion_r744128265" expanded>

leave gap here
</panel>

<panel  header="**412 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/240#discussion_r744128274" expanded>

Capitalise
</panel>

<panel  header="**413 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r744186752" expanded>

I dont think this was deleted by accident? Can help check
</panel>

<panel  header="**414 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/244#discussion_r744201427" expanded>

Remove the newline
</panel>

<panel  header="**415 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/244#discussion_r744201436" expanded>

Remove the space
</panel>

<panel  header="**416 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/244#discussion_r744201441" expanded>

Remove the newline here
</panel>

<panel  header="**417 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/244#discussion_r744201476" expanded>

typo here
</panel>

<panel  header="**418 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/245#discussion_r744206844" expanded>

This isnt needed cause got my authortag below
</panel>

<panel  header="**419 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/245#discussion_r744206879" expanded>

Can remove this
</panel>

<panel  header="**420 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/245#discussion_r744206901" expanded>

Same here and for the rest, so long got an author tag below there isn't a need to put @@author here
</panel>

<panel  header="**421 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/246#discussion_r744404549" expanded>

Got to update this
</panel>

<panel  header="**422 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/246#discussion_r744404629" expanded>

```suggestion
	Please enter one or more Etf parameters to edit separated by a single space only.
```
</panel>

<panel  header="**423 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/40#discussion_r726117950" expanded>

When there is no remarks, an empty string is added which still increases the parameters size
</panel>

<panel  header="**424 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/53#discussion_r726790861" expanded>

From the video it seems like the consolehandler is meant to display messages onto the console, as for now I don't really know what scenario or situation is severe enough that should be displayed to the user beyond our current exceptions
</panel>

<panel  header="**425 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/91#discussion_r731581527" expanded>

Thanks, lol kept on missing this out
</panel>

<panel  header="**426 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/91#discussion_r731581843" expanded>

alright!, btw no need to merge this first, can wait for the other to add their dg
</panel>

<panel  header="**427 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/208#discussion_r740155240" expanded>

nope, the name, price, remarks those dont use the getCommandComponents method
</panel>

<panel  header="**428 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#discussion_r741558979" expanded>

Ohh good point, i just wanted to make some bold header that was smaller than the main header
</panel>

<panel  header="**429 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/216#discussion_r742570000" expanded>

InputParser cause getUserInput is static
</panel>

<panel  header="**430 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#issuecomment-939469301" expanded>

LGTM
</panel>

<panel  header="**431 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/38#issuecomment-939688614" expanded>

Good work, merging it in.
</panel>

<panel  header="**432 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#issuecomment-939858007" expanded>

LGTM!
</panel>

<panel  header="**433 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/49#issuecomment-940651424" expanded>

Looks good!
</panel>

<panel  header="**434 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/60#issuecomment-940846194" expanded>

LGTM!
</panel>

<panel  header="**435 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/56#issuecomment-940854335" expanded>

LGTM! Thanks
</panel>

<panel  header="**436 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/86#issuecomment-945360209" expanded>

LGTM!
</panel>

<panel  header="**437 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/73#issuecomment-945400985" expanded>

LGTM
</panel>

<panel  header="**438 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/88#issuecomment-945543593" expanded>

lgtm
</panel>

<panel  header="**439 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/89#issuecomment-945776731" expanded>

LGTM!
</panel>

<panel  header="**440 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/96#issuecomment-947282859" expanded>

LGTM!
</panel>

<panel  header="**441 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/100#issuecomment-947746116" expanded>

LGTM!
</panel>

<panel  header="**442 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#issuecomment-949454216" expanded>

LGTM!
</panel>

<panel  header="**443 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/132#issuecomment-950467373" expanded>

LGTM!
</panel>

<panel  header="**444 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#issuecomment-951992244" expanded>

Looks good to me. I will check out the loop issue in encoding diagram. Can create an issue stating we need to simplify our diagram using refs
</panel>

<panel  header="**445 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/189#issuecomment-955666282" expanded>

Abort is really difficult and will left to the last. It requires quite bit of change to the code which probably will introduce more bugs than it solves
</panel>

<panel  header="**446 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/183#issuecomment-955666790" expanded>

I think this issue is linked to file separator not PR #164 
</panel>

<panel  header="**447 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/174#issuecomment-955667236" expanded>

It was noted in the UG that any extraneous keywords for find is ignored. 
</panel>

<panel  header="**448 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/173#issuecomment-955667703" expanded>

https://en.wikipedia.org/wiki/Ticker_symbol
Stock Tickers can have numbers. So should only do check for forex, crypto. Not sure abt etfs
</panel>

<panel  header="**449 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/168#issuecomment-955667963" expanded>

<img width="440" alt="ss1" src="https://user-images.githubusercontent.com/60163283/139576598-fe8d8e66-9875-44b1-aa33-8fb7b23e1734.PNG">
Probably refering to this
</panel>

<panel  header="**450 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/165#issuecomment-955668027" expanded>

Will address this
</panel>

<panel  header="**451 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/162#issuecomment-955668152" expanded>

<img width="308" alt="ss1" src="https://user-images.githubusercontent.com/60163283/139576638-980f5bb8-c46c-4942-8f61-38ce946484fc.PNG">
Will address this
</panel>

<panel  header="**452 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/168#issuecomment-955668310" expanded>

Will address this
</panel>

<panel  header="**453 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/173#issuecomment-956110579" expanded>

Why is it the case that user can input as they like for the other instruments, but forex must have all the restrictions? Like say we restrict to characters will user complain about not being able to use symbols? Like USD/SGD is the style that is used most when displaying pairs. Is there any value in restricting the forex names so much when we can validate properly to the fullest? I personally feel that no validation for this is better than partial validation
</panel>

<panel  header="**454 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/207#issuecomment-957229152" expanded>

LGTM!
</panel>

<panel  header="**455 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/154#issuecomment-958580474" expanded>

Hi, for point number 2 are you referring to the arrows from XYZDecoder to InstrumentDecoder? This is because from our code XYZDecoder inherits from InstrumentDecoder and they are not instrument types
</panel>

<panel  header="**456 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#issuecomment-958581538" expanded>

> ![image](https://user-images.githubusercontent.com/55841532/139968613-2244ad5c-fe59-4d9a-881d-592de07535bf.png)
> 
> The constructor gap glitch is still present in this diagram, under DoneCommand.

I didn't touch this diagram and some others as William has a pr for those
</panel>

<panel  header="**457 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#issuecomment-960562895" expanded>

LGTM!
</panel>

<panel  header="**458 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/152#issuecomment-962380890" expanded>

LGTM!
</panel>

<panel  header="**459 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/230#issuecomment-962396071" expanded>

LGTM!
</panel>

<panel  header="**460 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/154#issuecomment-962579756" expanded>

Our XYZDecoders are only dependent on the instrument. They do not inherit from the instrument class.
</panel>

<panel  header="**461 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/246#issuecomment-962573839" expanded>

is there a way to write that abort is case insensitive and must type 'abort' only without any additional characters?
</panel>

</panel>


<panel type="info" header="### 2. TAN JIA LE `@rizemon` (210 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/33#discussion_r721559390" expanded>

Perhaps allow the constructor to set the values of `name` and `description`?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r722203811" expanded>

Perhaps removing the newline here will make it neater ?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r722206346" expanded>

Perhaps remove the whitespace after every 2 hexadecimal digits? So that the output will be `68656c6c6f` for `hello` instead of `68 65 6c 6c 6f`.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r722207538" expanded>

Perhaps replace `ascii` with `allAsciiChars` to provide more meaning to the input?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r722208281" expanded>

Perhaps add a comment here describing the class?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r722209012" expanded>

Perhaps remove the `-` so as to follow the user guide? (i.e `hexencode`)
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722211252" expanded>

Perhaps add a comment here to describe what the class does?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722212470" expanded>

Perhaps remove the `-` so that it follow the user guide ? (i.e `hexdecode`)
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722213569" expanded>

Perhaps avoid the use of these magic literals? 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/35#discussion_r722215131" expanded>

Perhaps add a simple comment here to describe the class?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/35#discussion_r722215201" expanded>

Perhaps add a simple comment here to describe the class?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/35#discussion_r722244834" expanded>

Remember to add a blank line at the end of all files (Git convention)
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722211690" expanded>

Perhaps remove this redundant newline between the variables so that it looks neater?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722997575" expanded>

Perhaps avoid reusing the variable or perhaps chain these 2 lines together ? 
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722999455" expanded>

Perhaps remove the newline at line 21?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r723000179" expanded>

Good use of streams
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r722204207" expanded>

Perhaps remove this extra newline at line 16?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#discussion_r723001508" expanded>

Perhaps add a newline here at the end of the file? (Git convention)
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722998278" expanded>

Perhaps remember to add a newline at the end of a file? (Git convention)
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r723546457" expanded>

Perhaps specify `protected` for these variables?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r723546776" expanded>

Clean and simple to understand
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r723910483" expanded>

What if `tokens` is an array with no elements? Perhaps do a check here and throw a `ParserException` if the length of `tokens` is not correct.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r723912425" expanded>

Good catch for the `ArrayIndexOutOfBoundsException` but perhaps let this method throw the exception instead of returning `null`? Then perhaps the exception can be handled in the main loop instead of here.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r723912608" expanded>

Perhaps add a space in front of the `1`?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r723913230" expanded>

Instead of returning `null`, wouldn't throw an exception `ParserException` be better?
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724035445" expanded>

Perhaps instead of checking if `commandType` is empty, I think you should check whether `tokens` is empty? If `tokens` is empty, then we will throw the exception.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724037701" expanded>

Not advisable to re-throw another exception. Because the `ArrayIndexOutOfBoundsException` could be caused when accessing the element at index `1` during the `copyOfRange` call, perhaps throw the `ParserException` when the size of `tokens` is `&gt;= 1` ?
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724039162" expanded>

Perhaps remove this `try-catch` here since you are re-throwing the exact same exception? That way, you can delegate the exception handling to the main loop in `Decodex`.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724063099" expanded>

Perhaps doing a `strip()` on the `userInput` first would be better?
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724168372" expanded>

Perhaps perform a `strip()` before calling `isEmpty()`? 
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724169629" expanded>

Good job in avoid complicated expressions
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724171493" expanded>

While this is still correct, using `VALID_TOKENS_LENGTH` for 2 different checks and purposes can seem confusing to readers. Perhaps create another constant on top with a value of `2`?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724172132" expanded>

Good use of SLAP
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724175069" expanded>

Perhaps include more troublesome test cases like `""`,  `" "`, or `" test"`?
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724176255" expanded>

Hope to see test cases to trigger the `ParserException`!
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/68#discussion_r725475044" expanded>

Instead of relying on another command, perhaps its better to insert the data directly into the `dataManager` instead? 
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/69#discussion_r725476978" expanded>

Perhaps use `!moduleName.isEmpty()` instead of checking the length is more than 0?
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/69#discussion_r725477008" expanded>

Good use of `StringBuilder` and easy to follow.
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/69#discussion_r725477965" expanded>

I see, then LGTM
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/72#discussion_r725647141" expanded>

As this is no longer used, perhaps discard this method? And also, I foresee we might use a third-party library or Regex for parsing line arguments so lets remove this method for now.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/72#discussion_r725647428" expanded>

Perhaps consider doing a "left strip" before `split()`? 

Also perhaps add a `-1` to make it into `split(" ", -1")`? This will ensure that even empty tokens will be kept. This is important as splitting this `"hello  world"` (note that double space in the middle) and then joining with space will result in `"hello world"` (only single space in the middle). But adding the `-1` will allow us to retain that double space.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/72#discussion_r725648485" expanded>

Good use of SLAP
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/72#discussion_r725649144" expanded>

If you are removing the `getUserArgumentsAsArray`, perhaps replace this test for one using `getUserArgumentsAsString`?
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/74#discussion_r725661596" expanded>

Perhaps remove the surrounding `try-catch` and add the `UnknownModuleException` to the method signature of this test instead ?
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/72#discussion_r725807682" expanded>

Perhaps `getUserArgument` will be a more accurate name sinace we are only getting one argument?
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/81#discussion_r725871310" expanded>

Perhaps discard the `Locale.ROOT`? This is because there are a few other string related method calls that also takes in a locale but we mostly didn't specify it, therefore leaving it to Java to use the default.
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/81#discussion_r725874139" expanded>

Perhaps add a test case for `"\x00` null character?
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/81#discussion_r725876597" expanded>

Perhaps not do a `trim()`? This may accidentally lose some data. (e.g the user may intend to keep the trailing whitespaces)
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/81#discussion_r725881736" expanded>

Perhaps remove the unused `Locale` import?
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/97#discussion_r725915146" expanded>

Perhaps use the format `Selected module: %s`?
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/81#discussion_r725916396" expanded>

Perhaps capitalize the first letter of "number"?
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/81#discussion_r725916860" expanded>

Perhaps lowercase the first letter of "String"?
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726865037" expanded>

As this method is generally used for those that have an input string, perhaps change the message to something more general like `[-] Input is empty`?
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726872336" expanded>

Perhaps add some JavaDoc comments?
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726873571" expanded>

Perhaps add some JavaDoc comments?
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726952077" expanded>

Even though it was not the intended change, code that were introduced should still be of a certain standard (e.g comments, code quality) before being merged in.
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726952158" expanded>

See my other comment.
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/119#discussion_r727159642" expanded>

For each of the command format, perhaps they should be in the same code block?
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/119#discussion_r727159903" expanded>

For the first command, the command format should be `input`, not `data`.
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/119#discussion_r727161672" expanded>

The example usage should be `exit`, not `select hexencode`.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/119#discussion_r727161367" expanded>

For the example usage for the `input` command, perhaps copy again from my PR for the user guide?
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/119#discussion_r727167279" expanded>

Remember to add the `exit` command to the table of contents.
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/129#discussion_r727709597" expanded>

Perhaps add this message to `ModuleException`, similar to how it was done for base64?
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730259368" expanded>

Typically the first word should be a verb.  (With reference from https://se-education.org/guides/conventions/java/basic.html#comments)

Perhaps use `Instantiates a new DataManager.` would be better ?
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730259449" expanded>

Easy to understand.
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730259882" expanded>

Missing `@throws ParserException`, perhaps rephrase or repeat the same cause of the exception?
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730260159" expanded>

Perhaps use the word `Prepares` instead of `Crafts`? This also applies to the test of the other crafting commands.
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730260266" expanded>

Perhaps the word `corresponding` would be a better word than `respective`?
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730260420" expanded>

I think perhaps we follow the format `The ____ class handles_____`? (i.e `The Parser class handles the parsing and validation of user input.`).
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730260803" expanded>

Likewise, perhaps use the word `corresponding` instead?
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/154#discussion_r730297490" expanded>

Since the `Ui` object has already been instantiated, perhaps you could let `Ui` to hold the `Scanner`?
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/154#discussion_r730297773" expanded>

For `assert` messages, I feel that there is no need to change the way we have been doing. 

Perhaps there is no need to create constants for this? Similar to logger messages, since they are understood at only one location.
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/154#discussion_r730370411" expanded>

Revert this line to how it originally was.
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730390433" expanded>

Perhaps not reuse the `binString` variable?
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730390502" expanded>

Magic number 2. Perhaps follow how hex does it ?
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730390922" expanded>

Also, no need to handle spaces as we can immediately assume that it is wrong.
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730391072" expanded>

Good attempt, but perhaps `^([01]{8})*$` would be clearer?
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730391285" expanded>

Perhaps follow best practice (https://www.baeldung.com/java-assert#best-practices) and avoid calling another method here? Maybe checking if the length is multiple of 8 will do?
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730391409" expanded>

Perhaps `tokens` would be a better name?
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730391812" expanded>

Follow Tian Boon's convention.
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392050" expanded>

Perhaps remove the `else` clause but keep the return statement?
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392074" expanded>

Magic number 8.
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392229" expanded>

Perhaps move this into the individual tests instead? Following the other module tests.
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392333" expanded>

Good test for null bytes.
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392370" expanded>

Good test for empty.
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392506" expanded>

Likewise, move this into the individual tests.
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392552" expanded>

Follow Tian Boon's convention.
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392619" expanded>

Follow Tian Boon's order. (See https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/47/files)
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392700" expanded>

Missing JavaDocs for `ModuleException`.
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r730392860" expanded>

Likewise, perhaps remove the space here?
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r731106040" expanded>

Magic number 8
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r731107852" expanded>

Perhaps add the word `If` after the name of the exception? (See Tian Boon's convention https://github.com/AY2122S1-CS2113T-T10-3/tp/blob/master/src/main/java/decodex/data/DataManager.java#L30)
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r731109352" expanded>

Perhaps choose a different name from your method? Perhaps `String[] binaryTokens`?
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731122952" expanded>

Missing full-stop at the end of this line
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731124641" expanded>

I think perhaps you wanted to compare `module` and `poppedModule`?
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731126576" expanded>

Perhaps write `Instantiates a new recipe of modules`?
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731127685" expanded>

Perhaps move the instantiation of the `moduleList` into the constructor?
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731128702" expanded>

Perhaps check if the recipe name is blank and throw an exception? Also if you are adding the check, make sure to create a test case for this too
</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r731130819" expanded>

Typo for `RECIPE` in the constant name
</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r731131909" expanded>

Perhaps remove the `this`? (See https://se-education.org/guides/conventions/java/index.html#classes-and-interfaces Avoid unnecessary use of this with fields.)
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r731133332" expanded>

Perhaps another way would be to use `HashMap` that maps recipe name to recipe? And checking for duplicate names will be quite fast too.
</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r731133956" expanded>

Perhaps add an `If` after the name of the exception? (See TB's convention https://github.com/AY2122S1-CS2113T-T10-3/tp/blob/master/src/main/java/decodex/data/DataManager.java#L30)
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r731134905" expanded>

Perhaps remove this extra newline here at line 72? Also, note the typo in the exception's message constant name
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r731137200" expanded>

Agreed with @arraysius, probably can just enforce that the program has to append to an existing `RecipeManager`.
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/155#discussion_r731193895" expanded>

Perhaps also use the `binaryTokens` name here as well? Because `splitString` sounds more like method name than a variable name.
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731670515" expanded>

Perhaps add a Javadoc for the exception?
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731698476" expanded>

Perhaps this method should not be static ?
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731701722" expanded>

Perhaps only instantiate the folders but no need to instantiate the input file yet?
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731713642" expanded>

Perhaps remove the word `Default` to reflect the latest change?
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731714571" expanded>

Perhaps update these to reflect the latest changes?
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731715634" expanded>

Perhaps let this method return a byte array instead of a string? (Perhaps use `Files.readAllBytes( Paths.get(filePath) )`)
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731717135" expanded>

There are definitely going to be more errors, like permissions, repeated file name. Perhaps just handle filenotfoundexception with a special message, then every other generic file/io related exception as a general exception?
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731717962" expanded>

See above regarding catching different file/io exceptions. Also, this 2 try-catch can be combined and throw a general file/io exception if you follow my comment above.
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732758984" expanded>

Perhaps change this to an assert? Since we are mostly using asserts for null checks of the method arguments.
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732760145" expanded>

Maybe use `err` instead of `e` ? (See Decodex.java)
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732762024" expanded>

Perhaps just return `parameters` instead of introducing `null` here? 
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732763254" expanded>

Magic number 0. Also perhaps add a check if the length of `parameters` is more than 0?
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732903807" expanded>

Perhaps put the 2 index constants together?
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732905064" expanded>

A weird way of doing it, but perhaps move it into the prepare methods?
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732906744" expanded>

Perhaps remove the `else` keyword and move this out as a standalone `if` clause?
</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/182#discussion_r733612945" expanded>

I would say ignore the clickable links for now as this is just an initial draft. Once we have more or less a working draft, we can add the clickable links later on. 
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r733720440" expanded>

Magic numbers 1 and 2. 

Also, using the word `arguments` might be wrong because your first token, your command, is clearly not an argument. Perhaps you want to separate the argument tokens out first?
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r733724386" expanded>

Perhaps it's better to leave the `strip`-ing to the Parser?
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r733725159" expanded>

Perhaps you want to break this complex expression down?
</panel>

<panel  header="**125 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r733723623" expanded>

There is a bit of repeated code here but perhaps you can do this instead:
```
boolean isPrintModuleList = listCategory == null || listCategory.equals(LIST_CATEGORY_MODULES);
boolean isPrintRecipeList = listCategory == null || listCategory.equals(LIST_CATEGORY_RECIPE);
if (isPrintModuleList) {
    ui.printModuleList(getModuleList(moduleManager));
}else if (isPrintRecipeList) {
    ui.printRecipeList(getRecipeList(recipeManager));
}else{
    throw new ...
}
```

</panel>

<panel  header="**126 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734466325" expanded>

Perhaps leave this test case out since it's not really testing anything? A test should have something you can `assert`. Perhaps you can consider following https://stackoverflow.com/questions/1119385/junit-test-for-system-out-println ?
</panel>

<panel  header="**127 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734467040" expanded>

See comment above
</panel>

<panel  header="**128 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734467124" expanded>

See comment above.
</panel>

<panel  header="**129 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734467747" expanded>

Perhaps remove these redundant newlines? Since there are only a few lines in each test, I do not think there is a need to segment them.
</panel>

<panel  header="**130 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734469098" expanded>

Perhaps limit the scope of `inputContent` by declaring it within the `try` block as well as move the return statement into the `try` block as well?
</panel>

<panel  header="**131 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734470228" expanded>

Other IO errors such as error during file read, file permissions etc may still be caught but the error returned will be file not found, which is irrelevant. Perhaps have 2 catch clause, one for `FileNotFoundException`, which will throw `ErrorMessages.INPUT_FILE_DOES_NOT_EXIST_MESSAGE`, the one for `IOException`, to capture the other IO errors and will throw a more general error message like `Error during file read`
</panel>

<panel  header="**132 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734471937" expanded>

I think the `authorName` should be replaced with your github name instead of appending to it. (See https://reposense.org/ug/usingAuthorTags.html). We will also need to standardise and inform the rest as to how to put the `@@author tag` (Do we put in the Javadocs, or as a standalone comment as seen here?)
</panel>

<panel  header="**133 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734473422" expanded>

Perhaps configure this method to be more flexible by taking in more parameters? Remember that we have 2 input directories (`/input` and `/recipes`) as well as (`/output` and `/recipes`)?
</panel>

<panel  header="**134 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734473920" expanded>

Likewise, make these more flexible as we have a few directories to take care of: `/input, /output, and /recipes`.
</panel>

<panel  header="**135 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734554570" expanded>

Perhaps only update the data in the data manager after the recipe runs completely without errors?
</panel>

<panel  header="**136 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734555707" expanded>

Also, perhaps only print the final resulting data after the recipe has run completely without errors? Or else the data will flood the console.
</panel>

<panel  header="**137 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734556860" expanded>

Perhaps `run()` should take in a Data object, perform all the operations in the recipe, and then return a new Data object?
</panel>

<panel  header="**138 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734557938" expanded>

Also, I think it will be easier that if the recipe is empty, then it will just do nothing instead of throwing an exception?
</panel>

<panel  header="**139 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734558819" expanded>

Good test, but perhaps add another test case where a module in a recipe fails?
</panel>

<panel  header="**140 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734582362" expanded>

In that case I would agree but possibly what we could do is at the `SelectCommand` level, it will print a message `Modules executed: hexencode -&gt; hex decode -&gt; etc` before printing the data. Therefore we will be able to clearly recognize what modules were executed. Of course, this message is only printed if the recipe is successfully executed. This will also remove the need for an exception to be thrown.
</panel>

<panel  header="**141 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734586523" expanded>

I understand, but tests dictate that we need to assert something, either checking a change in an object, checking for exceptions or checking the return value of a method call. I am suggesting using the print result for asserting as in the lecture earlier today, the lecturer talked about a method (See the link earlier) to do unit testing for UI since you actually have no other way to check properly.
</panel>

<panel  header="**142 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734977844" expanded>

Perhaps do all these in one line?
</panel>

<panel  header="**143 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734977885" expanded>

Thanks for heeding my comments, but perhaps call the exceptions `err` instead? Also, convert the IOexception message to a constant.
</panel>

<panel  header="**144 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734977990" expanded>

Perhaps convert message into a constant?
</panel>

<panel  header="**145 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/198#discussion_r734978062" expanded>

Perhaps move some of the exceptions up to the method signature line?
</panel>

<panel  header="**146 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/198#discussion_r734978123" expanded>

Perhaps remove this newline?
</panel>

<panel  header="**147 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/197#discussion_r734978385" expanded>

After a recipe is created, we can automatically assume that they would like to edit it. Perhaps add a call to `recipeManager.selectRecipeForEditing()`?
</panel>

<panel  header="**148 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/197#discussion_r734978477" expanded>

Perhaps move some of the exceptions to the same line as the method signature?
</panel>

<panel  header="**149 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734985107" expanded>

Perhaps lets just leave it as `() -&gt; recipe.pop()`?
</panel>

<panel  header="**150 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r734990542" expanded>

Perhaps move some of the exceptions to the same line as the method?
</panel>

<panel  header="**151 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r734990572" expanded>

Likewise, move to same line
</panel>

<panel  header="**152 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r734991593" expanded>

Perhaps `runModule` would be a better name? 
</panel>

<panel  header="**153 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r734991637" expanded>

Likewise, `runRecipe` would be a better name
</panel>

<panel  header="**154 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734994082" expanded>

Perhaps change `RECIPE_FILENAME_FORMAT` to something else to better reflect the purpose since it's mainly for data, not recipes?
</panel>

<panel  header="**155 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734994246" expanded>

Perhaps rename `e` to `err`?
</panel>

<panel  header="**156 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734994415" expanded>

Perhaps move the `isSuccessful` down to limit the scope?
</panel>

<panel  header="**157 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734995033" expanded>

Since the resulting data could potentially not be textual, perhaps create another prefix `.bin` or `.data` so that users will not mistaken this as a human-readable file?
</panel>

<panel  header="**158 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734995186" expanded>

A bit late to ask, but wouldn't it better if instead of putting them in an array, you just declare the directories as 3 separate constants?
</panel>

<panel  header="**159 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r735075340" expanded>

Forgot to include this, but include the printing of the contents of the recipe as discussed
</panel>

<panel  header="**160 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r735075945" expanded>

For recipes, perhaps the extension is `.txt` since we know it will be textual form? But for `data` outputs we will leave the extension as `.data`. So therefore there will be 2 extensions: `.data` for data and `.txt` for recipes
</panel>

<panel  header="**161 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r735136512" expanded>

Perhaps change this into a guard clause and return immediately? This will result in removal of the `else` and remove one level of indent.
</panel>

<panel  header="**162 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/202#discussion_r735136825" expanded>

Perhaps put these on the same line or at least minimize the number of lines used?
</panel>

<panel  header="**163 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735767595" expanded>

Perhaps you can use `isEmpty()` instead?
</panel>

<panel  header="**164 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735769627" expanded>

Perhaps use `isEmpty()` ?
</panel>

<panel  header="**165 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735770236" expanded>

And perhaps just return an empty array instead of null?
</panel>

<panel  header="**166 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735772640" expanded>

When a recipe fails to be instantiated (perhaps due to invalid module or invalid recipe name etc), perhaps catch the relevant exceptions and continue loading the other valid recipes? Because currently once an exception occurs, it will stop processing all recipe files. Is that really the intended behaviour?
</panel>

<panel  header="**167 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735773116" expanded>

Perhaps use `indexOf(".")` instead of splitting by `.` ?
</panel>

<panel  header="**168 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735774121" expanded>

Magic number 1
</panel>

<panel  header="**169 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735775699" expanded>

Before check if the link is empty, perhaps perform a `trim()` first?
</panel>

<panel  header="**170 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735778185" expanded>

Good idea as to select the current editing recipe by default. We could do the same for `recipe delete` but then again, we should force the user to type the name of a recipe so that they do not mistakenly delete a recipe.
</panel>

<panel  header="**171 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735778785" expanded>

Extra newline at the end (See git conventions)
</panel>

<panel  header="**172 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735780028" expanded>

Perhaps rename it to `getModuleList`? Following naming convention from @arraysius (https://github.com/AY2122S1-CS2113T-T10-3/tp/blob/master/src/main/java/decodex/commands/ListCommand.java#L48)
</panel>

<panel  header="**173 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735780143" expanded>

Missing JavaDocs
</panel>

<panel  header="**174 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735783215" expanded>

Perhaps call it `run_listBlankNoEditingRecipe_expectException` instead? Got confused
</panel>

<panel  header="**175 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r736104234" expanded>

Perhaps just put "Prepares" will do.
</panel>

<panel  header="**176 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r736114804" expanded>

If this `hasError` is of no use, perhaps remove it ?
</panel>

<panel  header="**177 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r736117017" expanded>

I think instead of printing an error for each recipe, simply just collate the names of all recipes that caused an exception and print them on a single line?
</panel>

<panel  header="**178 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r736118163" expanded>

Perhaps add the parsed recipes into `RecipeManager`? Then if an exception occurs during addition of the recipe (e.g repeated name etc, check RecipeManager), perhaps skip over the recipe or crash the program?
</panel>

<panel  header="**179 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/237#discussion_r736845312" expanded>

Perhaps split these into separate lines?
</panel>

<panel  header="**180 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/239#discussion_r736872960" expanded>

Move the operator `|` to the next line.
</panel>

<panel  header="**181 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739636579" expanded>

This is on me but when I think about it, perhaps checking if its NULL is better because this will handle if the recipeDirectory is not a directory as well as handle i/o issues (maybe issues when the os listing the files)
</panel>

<panel  header="**182 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739636786" expanded>

I think if we are going with the null approach, just give a general error here saying that failed to access `recipes` directory. Then perhaps, we could give the solution to this error within the user guide's FAQ.
</panel>

<panel  header="**183 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739636813" expanded>

Perhaps add a space in between the error icon and the message? 
</panel>

<panel  header="**184 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739765918" expanded>

Avoid arrow-head style of coding. What you could is avoid running `exists()` since `isDirectory` and `isFile` can implicitly tell you that the file/folder exists. Perhaps do this instead? :

```
if (outputDirectory.isDirectory()) {
    return;
}
if(outputDirectory.isFile()) {
    String formattedErrorMessage = String.format(ErrorMessages.INVALID_DIRECTORY_ACCESS, outputDirectory);
    throw new StorageException(formattedErrorMessage);
}
```
</panel>

<panel  header="**185 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/273#discussion_r740067234" expanded>

Perhaps maybe include `must be an integer between...`? This is so that they do not mistakenly put floating point numbers.
</panel>

<panel  header="**186 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/273#discussion_r740067957" expanded>

I think here instead of saying `offset`, I think we should state that is the `moduleArgument` or somewhere so that they know we are referring to `moduleArgument`.
</panel>

<panel  header="**187 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/274#discussion_r740093597" expanded>

Perhaps change the help message to  `Shows the current data`?
</panel>

<panel  header="**188 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/274#discussion_r740094370" expanded>

Perhaps `ui.printOutput()` would be more fitting?
</panel>

<panel  header="**189 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/274#discussion_r740095656" expanded>

A general exception like `too many arguments` would be better? I also realized we have a few `too many ...` exception messages
</panel>

<panel  header="**190 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r740099404" expanded>

Perhaps add a check if `listFiles()` returns null? If so, throw an exception
</panel>

<panel  header="**191 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r740101742" expanded>

Perhaps put these on the same line?
</panel>

<panel  header="**192 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/275#discussion_r740120332" expanded>

Perhaps change this to `Deselects the recipe currently being edited`?
</panel>

<panel  header="**193 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r740123474" expanded>

Understood, did not see the earlier instantiate method.
</panel>

<panel  header="**194 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r740126707" expanded>

Or perhaps use a regex check if we want to be much stricter? Like `^[A-Za-z0-9_]\.txt$`?
</panel>

<panel  header="**195 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742042742" expanded>

Perhaps undo this change as this could result in the redrawing of the PUML diagrams?
</panel>

<panel  header="**196 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742042810" expanded>

Perhaps undo this change as this could result in the redrawing of the PUML diagrams?
</panel>

<panel  header="**197 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742045474" expanded>

Perhaps it will be better to convert this into private since `Parser` itself is not a static class ?
</panel>

<panel  header="**198 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742047849" expanded>

Actually what you could do is declare is `boolean isExit = command isinstanceof ExitCommand`?
</panel>

<panel  header="**199 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742103092" expanded>

Ignore this as this will cause stack overflow
</panel>

<panel  header="**200 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742108909" expanded>

Did not see, perhaps just state that it is for `recipes`? We do not want to give early spoilers yet 
</panel>

<panel  header="**201 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742111259" expanded>

Perhaps say `Specifies the separator used for reconstructing the string from a list of tokens`?
</panel>

<panel  header="**202 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742144971" expanded>

Perhaps there is too much indentation here? Checkstyle probably not picking up.
</panel>

<panel  header="**203 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/317#discussion_r744225434" expanded>

Since these points are already considered notes, probably remove the parts "Take note" or "additional note".
</panel>

<panel  header="**204 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/327#discussion_r744278027" expanded>

For `RecipeCommandParser` line, change `Command` to `RecipeXYZCommand` and help fix the type for `RecipeXYZCommand`.
</panel>

<panel  header="**205 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744444399" expanded>

Perhaps include `input` into the code block too ? If you want to represent space, maybe use `&gt;space>`?
</panel>

<panel  header="**206 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744454467" expanded>

Missing bullet point indent
</panel>

<panel  header="**207 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744454631" expanded>

Should not be gibberish, but unintelligible
</panel>

<panel  header="**208 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744474237" expanded>

Perhaps you want to bullet indent these too ?
</panel>

<panel  header="**209 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744474459" expanded>

Perhaps standardise whether you want to use numbers or bullet?
</panel>

<panel  header="**210 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744474853" expanded>

Perhaps standardise the format here too ?
</panel>

<panel  header="**211 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r723916148" expanded>

Perhaps add a newline here ? (Git convention)
</panel>

<panel  header="**212 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r724913615" expanded>

We have already standardised that all exceptions be placed under `decodex.data.exception` and therefore, `ModuleException` will remain here.
</panel>

<panel  header="**213 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/33#issuecomment-933696837" expanded>

LGTM!
</panel>

<panel  header="**214 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/36#issuecomment-935761570" expanded>

LGTM
</panel>

<panel  header="**215 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#issuecomment-935769820" expanded>

LGTM
</panel>

<panel  header="**216 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/47#issuecomment-938564077" expanded>

I think creating another file in `/docs` will actually generate a page that is accessible on the Github pages. Perhaps it might be better to do leave the standards in the issue?
</panel>

<panel  header="**217 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/73#issuecomment-939504434" expanded>

The `Scanner` object that handles stdin as well.
</panel>

<panel  header="**218 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/98#issuecomment-939814712" expanded>

Data can be empty, therefore there is no need for this assert.
</panel>

<panel  header="**219 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/115#issuecomment-940831437" expanded>

That is correct.
</panel>

<panel  header="**220 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/106#issuecomment-941062048" expanded>

Fixed in #113
</panel>

<panel  header="**221 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/100#issuecomment-941911010" expanded>

User guide updated.
</panel>

<panel  header="**222 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/271#issuecomment-956026463" expanded>

Rejected because no details of a bug was reported.
</panel>

<panel  header="**223 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/270#issuecomment-956027960" expanded>

Rejectedd as reviewer was viewing an outdated version of the user guide. 
</panel>

<panel  header="**224 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/269#issuecomment-956029858" expanded>

Change the command format from `&gt;recipeName>` to `{recipeName}` and perhaps specify the behaviour when `recipeName` is not provided.
</panel>

<panel  header="**225 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/268#issuecomment-956030123" expanded>

Outdated picture, just need to update it to follow the new command syntaxes.
</panel>

<panel  header="**226 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/267#issuecomment-956030871" expanded>

Code should check that there are `0` arguments and if there are, should reflect an error saying that there are too many arguments.
</panel>

<panel  header="**227 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/264#issuecomment-956033041" expanded>

Perhaps have a `show` command that shows only the current data.
</panel>

<panel  header="**228 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/263#issuecomment-956033858" expanded>

Perhaps when executing recipes, check if the number of arguments is `0`, otherwise reflect an error that there are too many arguments.
</panel>

<panel  header="**229 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/262#issuecomment-956034447" expanded>

Perhaps add a `recipe unselect` that will unselect the currently edited recipe.
</panel>

<panel  header="**230 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/261#issuecomment-956035313" expanded>

At https://github.com/AY2122S1-CS2113T-T10-3/tp/blob/master/src/main/java/decodex/parser/RecipeCommandParser.java#L89

Perhaps instead of checking whether the number of arguments is not equal to the correct number of arguments, we divide this into 2 cases: less than and more than.
</panel>

<panel  header="**231 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/258#issuecomment-956035964" expanded>

Similar to #261 
</panel>

<panel  header="**232 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/257#issuecomment-956036424" expanded>

Same as #261 
</panel>

<panel  header="**233 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/256#issuecomment-956036919" expanded>

Perhaps specify in the user guide that recipe names are alphanumeric and can only contain an underscore.
</panel>

<panel  header="**234 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/255#issuecomment-956037198" expanded>

Same as #262 
</panel>

<panel  header="**235 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/254#issuecomment-956037892" expanded>

Perhaps state in the user guide that the modules do not support "seperators" in the data like spaces, commas etc.
</panel>

<panel  header="**236 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/253#issuecomment-956040021" expanded>

Perhaps include in table listing of modules mentioned in #260 that the argument can only in between `MIN_INT` and `MAX_INT`.
</panel>

<panel  header="**237 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/252#issuecomment-956041698" expanded>

The error message at https://github.com/AY2122S1-CS2113T-T10-3/tp/blob/master/src/main/java/decodex/modules/ModuleManager.java#L192 needs to be more specific, perhaps "The offset must be between MIN_INT and MAX_INT".
</panel>

<panel  header="**238 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/297#issuecomment-961672686" expanded>

LGTM
</panel>

<panel  header="**239 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/283#issuecomment-961707895" expanded>

Resolved in other PRs
</panel>

<panel  header="**240 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/326#issuecomment-962633679" expanded>

1) Revert line 29 to `SPLIT_REGEX = "\\s+"`, because `\t` is already included in `\s` since tab is considered a whitespace.
2) On line 95, replace with `String[] tokens = strippedUserInput.split(SPACE_SEPARATOR , SPLIT_LIMIT_VALUE);`
</panel>

<panel  header="**241 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/347#issuecomment-962676410" expanded>

Invalid
</panel>

</panel>


<panel type="info" header="### 3. Richard Willie `@richwill28` (126 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/93#discussion_r737070798" expanded>

Hi, I discovered that the image included here doesn't show up on the [DG website](https://ay2122s1-cs2113t-t12-2.github.io/tp/DeveloperGuide.html).

<img width="741" alt="Capture" src="https://user-images.githubusercontent.com/69445142/138994157-5e09602d-7e5e-4317-8025-d6312514d291.PNG">

</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/88#discussion_r737076435" expanded>

Just a minor suggestion according to [SE Markdown Convention](https://se-education.org/guides/conventions/markdown.html).

![image](https://user-images.githubusercontent.com/69445142/138995681-7fdd88e3-8738-47f6-9a77-d01753889fb3.png)

</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/90#discussion_r737078941" expanded>

Possible typo.

```md
![System Architecture Sequence Diagram]
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/86#discussion_r737079566" expanded>

Minor Git convention violation: No newline at EOF.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/86#discussion_r737084876" expanded>

Minor Git convention violation: No newline at EOF.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/86#discussion_r737086221" expanded>

The UML diagram here is not quite standardized, as seen from the [DG website](https://ay2122s1-cs2113t-t09-1.github.io/tp/DeveloperGuide.html).

![image](https://user-images.githubusercontent.com/69445142/138997107-213cfaf3-ed73-4b8a-bd59-44fdbe07f6a2.png)

The following issue might be a helpful read: https://github.com/nus-cs2113-AY2122S1/forum/issues/114
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721395077" expanded>

No `\n` at the end of the file. Git coding convention violation.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721398171" expanded>

Consider using `List&gt;Lesson> lessonList = new ArrayList&gt;>()` instead to improve flexibility.

Note: [Relevant info](https://stackoverflow.com/questions/2279030/type-list-vs-type-arraylist-in-java)
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721399550" expanded>

Hmm.. actually might be better to just declare it first, without initializing. Initialization should be done inside the constructor.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721400402" expanded>

Initialize here instead. For example, `lessonList = new ArrayList&gt;>();`.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721401680" expanded>

`addLesson` may be a better name?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721402220" expanded>

`deleteLesson` may be a better name?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721403384" expanded>

FYI, the brackets here are unnecessary.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721411643" expanded>

I think might be better to simplify it to this?

```java
return "[T]" + getDoneSymbol() + " " + "Title: " + title + " " + (information.isBlank() ? "" : "(Info: " + information + ")");
```
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721413280" expanded>

Similar issue with `lessonList`.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721413394" expanded>

Similar issue with `lessonList`.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721414239" expanded>

`addTask` may be a better name?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721414524" expanded>

`deleteTask` may be a better name?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721459104" expanded>

Actually what I meant was instead of using `if-else` like this

```java
if (information.equals("")) {
    return ...
} else {
    return ...
}
```

Might me better to shorten it to this, using ternary operator

```java
return "[T]" + getDoneSymbol() + " " + "Title: " + title + " " + (information.isBlank() ? "" : "(Info: " + information + ")");
```

Also for checking if the `information` is empty, we can replace `information.equals("")` with `information.isBlank()`.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721874664" expanded>

`title` should be a better naming for consistency with the `Lesson` class.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721875048" expanded>

Same issue as mentioned above.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721875673" expanded>

Unused import?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721878955" expanded>

Consider refactoring these to `enum`, to reduce clutter on the `Parser` class. But we can do this at another time, doesn't have to be this PR.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721878032" expanded>

Do note that `printStackTrace` is not exactly user-friendly. For development purpose it's ok, but we will have to remove it by the end of our production.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721899890" expanded>

Currently it's like [this](https://github.com/AY2122S1-CS2113T-W11-3/tp/blob/259469b72ea870b4de39afa44ec5fe2c810d6486/src/main/java/seedu/duke/Duke.java#L32). I think it's better if the printing is done inside the `Ui` class instead.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721901727" expanded>

An extra blank line, might be a Git coding convention violation.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722270752" expanded>

Consider separating the variables with an empty line, to improve readability.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722271021" expanded>

Same issue here.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722272077" expanded>

An extra empty line, might be a coding convention violation.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722275259" expanded>

Minor coding standard violation, more specifically the *white space within a statement*. So it should be written like this

```java
for (Task task : taskList)
```
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722277025" expanded>

Implementation seems correct, though using Streams would be more elegant. But we will make do with this for now.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722277993" expanded>

Oh, and `findTasksByKeyword` or `filterTasksByKeyword` might be a better naming?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722280605" expanded>

Consider refactoring the error message to a constant in the `Message` class.
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722282784" expanded>

`findLessonsByKeyword` or `filterLessonsByKeyword` might be a better naming?
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722285241" expanded>

Similar to `findTasks`, the Streams implemenation of this would be more elegant. But currently it's ok, we will move on to implement more important stuffs first.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722285780" expanded>

Minor coding standard violation, more specifically the white space within a statement. So it should be written like this

```java
for (Lesson lesson : lessonList)
```
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722335003" expanded>

Consider shortening the variable name, the hard limit is 30 characters. [Rationale](https://nus-cs2113-ay2122s1.github.io/website/se-book-adapted/chapters/codeQuality.html#not-too-long-not-too-short).
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#discussion_r722335198" expanded>

Same issue here.
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725425301" expanded>

Consider putting `import java` before `import seedu`, I believe it's a part of AB3 convention.
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725425567" expanded>

Consider adding an empty line here, for readability.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725426068" expanded>

Nice catch! However, the `-i` parameter is optional though. When the user doesn't use it, the `indexOf` will return `-1` and error message will be thrown, which I think shouldn't happen?
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725426139" expanded>

Nice usage of `import static`.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725426422" expanded>

Consider adding an empty line here, for readability.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725426661" expanded>

Nice SLAP. Hmm.. I'm wondering if we can just let the user put the flag in random order?
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725426807" expanded>

Probably better to put this method at the end of the class, to not disrupt the group of parse methods here.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725427138" expanded>

Hmm.. I thought `information` is gonna be an optional parameter?
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725427298" expanded>

Forgot to mention that it's probably better to write it like this to avoid `NullPointerException` when serializing the data.

```java
private String information = "";
```
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725428277" expanded>

Might be better to swap this two lines for readability.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725428347" expanded>

Oh is this intentional?
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725428693" expanded>

Actually no need to capitalize.

https://github.com/AY2122S1-CS2113T-W11-3/tp/blob/b62548f5c294feb04be37e41e224306e7338fe0d/src/main/java/seedu/duke/parser/DayOfTheWeek.java#L16

I'm gonna improve the `DayOfTheWeek` enum in future commits to make it more flexible.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725428855" expanded>

Try to arrange in alphabetical order, according to AB3.
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725429717" expanded>

Bad SLAP. Also, we have initialized `storage` inside Duke constructor.

https://github.com/AY2122S1-CS2113T-W11-3/tp/blob/b62548f5c294feb04be37e41e224306e7338fe0d/src/main/java/seedu/duke/Duke.java#L21

The `execute` method can take an instance of `Storage` as the input parameter.
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725429755" expanded>

Same issue as per above.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725430747" expanded>

Hmm.. to save data for every command, since we have both `taskList` and `lessonList`, I think it's a bit tricky. But we can probably do something like this.

```java
storage.saveData(taskList.serialize(), lessonList.serialize());

// inside the Storage class
public void saveData(String taskData, string lessonData) throws IOException {
    // combine the two strings
    // save to a file
}
```
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725434244" expanded>

Yes the first part will throw an error first. So actually no need to check `params.length > 2` again.
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725434532" expanded>

Did you test whether loading existing file works as well?
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725435194" expanded>

I see, but you will need to change the implementation of `parseAddTaskCommand` inside the Parser class.
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725436942" expanded>

Hmm.. I think it only make sense if we check this inside `case 3:`.
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725437750" expanded>

`try-catch` might be unnecessary here. We can just throw both exceptions instead.

```java
public void execute(...) throws DukeException, IOException
```

Also, masking an `IOException` to a `DukeException` is probably not a good practice.
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725437902" expanded>

Same issue as per above.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725470719" expanded>

Same issue as per above.
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725470770" expanded>

Same issue as per above.
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725470884" expanded>

Might be better to add some comments here.
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/32#discussion_r725472143" expanded>

Hmm.. I don't think we should handle exception here for SLAP. Since the `execute` method already `throws` exception, the `try-catch` here is unnecessary. The only thing that we need to check is maybe the validity of the `taskIndex`, so something like this should suffice.

```java
public void execute(...) throws DukeException, IOException {
    if (!isTaskIndexValid) {
        throw new DukeException(...);
    }

    // happy path here..
    Task task = taskList.getTask(taskIndex);
    taskList.markTaskAsDone(taskIndex);
    ui.printDoneTask(taskList, task);
    storage.saveData(taskList, lessonList);
}
```
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/32#discussion_r725472295" expanded>

Consider adding Javadoc here.
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/32#discussion_r725472486" expanded>

I think it's better to handle exception here.
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/32#discussion_r725472633" expanded>

Generally, I think we should mask everything (except `IOException`) to `DukeException` for the consistency of our program.
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/32#discussion_r725472671" expanded>

Same here.
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725470646" expanded>

Actually we can simplify this to a single line.

```java
storage.saveData(taskList, lessonList);
```

Since the `execute` method already `throws` the exception, don't need to use `try-catch`. Also, masking an `IOException` into a `DukeException` is probably not a good practice.
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726716520" expanded>

I think we changed our name to **NUS Buddy**. 😆
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726719632" expanded>

> Do not wrap lines at a specific length. Coding standards for other languages typically specify a maximum length for a statement. However, Markdown is used to write natural language content which should not be chopped into a sentence fragments.
> 
> RATIONALE: Doing so with throw off grammar checkers and make it harder to modify content later (a simple change might require re-sizing many adjacent lines.

[Source](https://se-education.org/guides/conventions/markdown.html)
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726720066" expanded>

Probably better to remove empty line here? For format/layout purpose.
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726720114" expanded>

Same here.
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726720150" expanded>

Same here.
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726720180" expanded>

Same here.
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/33#discussion_r726721510" expanded>

Assertions are used to catch programmer's error, so I don't think the usage here is appropriate?
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/36#discussion_r727213434" expanded>

I think assertions should be in the following format.

```java
assert something : "error message";
```
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/34#discussion_r727265012" expanded>

> Use * for bullet-points (not -).
>
> RATIONALE: Although both work, * closer to the final outcome.

[Source](https://se-education.org/guides/conventions/markdown.html)

Minor standard violation here. I also notice the same issues below.
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/34#discussion_r727266216" expanded>

We can ignore this for now.
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/34#discussion_r727262565" expanded>

Minor issue: an extra empty line.

Edit: Only at line 133.
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/62#discussion_r730247856" expanded>

Consider changing this to `ModuleIndexException`.
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/62#discussion_r730248578" expanded>

You could combine the `try-catch` block here with the one below.
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/62#discussion_r730248737" expanded>

Minor coding violation: Missing `\n` at the end of file.
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/62#discussion_r730248780" expanded>

Same coding violation here.
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/62#discussion_r730248784" expanded>

Same coding violation here.
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730597381" expanded>

Consider sorting the enums in alphabetical order.
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730606066" expanded>

Hmm.. any reason for changing it to `public static`?
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730610271" expanded>

The `JsonUtil` class is meant to be a common utility class that can be used by many other classes. Currently, the functionality is too module-specific. [Reference](https://github.com/se-edu/addressbook-level3/blob/master/src/main/java/seedu/address/commons/util/JsonUtil.java).

Consider extracting some statements into utility methods (e.g. `readJsonFIle`) inside this class. Some module-related methods can be refactored to the `FullModuleList` or `ModuleList` class (whichever is more suitable). 
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730646312" expanded>

Good point, but I think making `FullModuleList` a class instance of `Duke` doesn't really make sense. We can leave it for now until we came up with better alternative representation.
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730684755" expanded>

Ok, fair enough. Using generics is not our top priority currently, so we shall proceed.
</panel>

<panel  header="**91 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/73#discussion_r731793637" expanded>

Git convention violation: No newline at EOF.
</panel>

<panel  header="**92 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/73#discussion_r731793828" expanded>

Same issue.
</panel>

<panel  header="**93 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/73#discussion_r731793950" expanded>

Same issue.
</panel>

<panel  header="**94 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735670023" expanded>

User error should be handled with `try-catch` or `throw` instead of `assert`?
</panel>

<panel  header="**95 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735671058" expanded>

Same issue here.
</panel>

<panel  header="**96 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735672170" expanded>

Is this `index` similar to task index or... module code?
</panel>

<panel  header="**97 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735679035" expanded>

This can be shorten with a `for` loop. References: https://github.com/AY2122S1-CS2113T-W11-3/tp/blob/0565107c3ce547b34afd52bc1d63097245b70ac3/src/main/java/seedu/duke/commons/core/DayOfTheWeek.java#L12
</panel>

<panel  header="**98 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735681319" expanded>

It's probably better to just use `A+`, `A-`, ... directly? Instead of using placeholder variables since they are quite straightforward.
</panel>

<panel  header="**99 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735685211" expanded>

This can be shorten to only several lines as well.

1. Checking input
2. Return using `enum.toString()`
</panel>

<panel  header="**100 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735687042" expanded>

Hmm.. I'm not sure if the usage of `enum` here is appropriate.
</panel>

<panel  header="**101 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r735688149" expanded>

Consider changing this to `return 0.0` just for consistency.
</panel>

<panel  header="**102 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/91#discussion_r737095388" expanded>

Good job spotting my silly mistake. 👍
</panel>

<panel  header="**103 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/104#discussion_r738947740" expanded>

Whitespace inconsistency. It should be..

```
// program exits...
```

Also, maybe it's better to put the comment inside the `execute` method instead.
</panel>

<panel  header="**104 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739638055" expanded>

No difference in the actual code, but might be better syntactically to use `enum.toString()` here.
</panel>

<panel  header="**105 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739638129" expanded>

An extra empty line. Consider removing it for consistency with other classes.
</panel>

<panel  header="**106 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739638575" expanded>

Consider assigning to `params[4]` to a variable with descriptive name.
</panel>

<panel  header="**107 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739638881" expanded>

Consider moving this method to a utility class instead, for example `StringUtil` for string-related operations.
</panel>

<panel  header="**108 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739639140" expanded>

Consider moving this method to `ParserUtil`.
</panel>

<panel  header="**109 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739639921" expanded>

Hmm.. I don't think this is a particularly better implementation than the previous commits. Consider combining these two methods into one, and move them to `ParserUtil`.
</panel>

<panel  header="**110 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739640258" expanded>

Same issue with the parse lesson implementation. Having numbers in a method name is usually not a good convention.
</panel>

<panel  header="**111 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739640423" expanded>

Consider combining the two methods into one, and move them to `ParserUtil`.
</panel>

<panel  header="**112 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/110#discussion_r739682258" expanded>

Thanks for fixing this. Remember to close the corresponding issues related to this (warning there are a lot!).
</panel>

<panel  header="**113 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/159#discussion_r739779210" expanded>

Might be better to just use `printMessage()` instead? Since the format is the same.
</panel>

<panel  header="**114 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/159#discussion_r739779236" expanded>

Same here.
</panel>

<panel  header="**115 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739798985" expanded>

Should probably check if the start and end time are similar as well? Also, consider refactoring the logic inside the `if` for SLAP.
</panel>

<panel  header="**116 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739799322" expanded>

Faulty input should be handled with exception instead?
</panel>

<panel  header="**117 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739799446" expanded>

I think this should be handled by an exception.
</panel>

<panel  header="**118 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739799510" expanded>

Hmm.. any good reason of nesting this inside an `else` rather than just using `else if`?
</panel>

<panel  header="**119 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739799876" expanded>

Is it possible to enclose everything here with `try-catch`? Just to give more emphasis on the happy path.
</panel>

<panel  header="**120 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739799943" expanded>

Same here.
</panel>

<panel  header="**121 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739800013" expanded>

Remember to add your authorship :)
</panel>

<panel  header="**122 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739958437" expanded>

> the list being empty isn't exceptional behaviour

Good point. The current implementation is fine then.
</panel>

<panel  header="**123 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/165#discussion_r739959237" expanded>

Might be better to avoid using plural for class name just for consistency.
</panel>

<panel  header="**124 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/187#discussion_r744442683" expanded>

Good catch!
</panel>

<panel  header="**125 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/195#discussion_r744795620" expanded>

Is the hyperlink here still working?
</panel>

<panel  header="**126 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/195#discussion_r744799261" expanded>

Same here. Is the hyperlink still working?
</panel>

<panel  header="**127 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/28#discussion_r724795711" expanded>

**Tip: Initialize string to `""`**

Don't leave it as follows, as it can cause `NullPointerException` and I had a hard time debugging this.
```java
private String information;
```
</panel>

<panel  header="**128 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/28#discussion_r724926690" expanded>

I used it for debugging purpose, to clarify whether the regex is working. You can remove it on the next commit.
</panel>

<panel  header="**129 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/64#discussion_r730543134" expanded>

Noted.
</panel>

<panel  header="**130 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/74#discussion_r732507529" expanded>

Fixed.
</panel>

<panel  header="**131 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/84#discussion_r736353174" expanded>

Actually yes. Thanks for reminding me this, I will also polish other error messages.
</panel>

<panel  header="**132 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/84#discussion_r736353432" expanded>

Noted.
</panel>

<panel  header="**133 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/95#discussion_r738403231" expanded>

Noted.
</panel>

<panel  header="**134 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/95#discussion_r738404753" expanded>

Noted.
</panel>

<panel  header="**135 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/184#discussion_r744374380" expanded>

Good point.
</panel>

<panel  header="**136 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/184#discussion_r744375389" expanded>

Good catch, my initial intention was to use `enum` actually. Unfortunately, `A+`, `A-`, `B+`, etc. are not considered as valid `enum` so I decided to put all the grades in an array instead. I'm not 100% sure on this though, so you might want to help me double check.
</panel>

<panel  header="**137 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/193#discussion_r744744450" expanded>

Noted.
</panel>

<panel  header="**138 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/25#issuecomment-934042672" expanded>

Well.. do note that using a class purely to store constants is not exactly OOP. So currently we will make do with this, until better alternatives are found.
</panel>

<panel  header="**139 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#issuecomment-934455208" expanded>

Hang on.. the CI checks are not running. Please refrain from merging first.
</panel>

<panel  header="**140 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/27#issuecomment-934467523" expanded>

Please update `text-ui-test` for now and make sure everything works correctly.
</panel>

<panel  header="**141 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/7#issuecomment-941057906" expanded>

Note: Only the bare minimum is completed. Fancy formatting will be developed in v2.0.
</panel>

<panel  header="**142 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/8#issuecomment-941058062" expanded>

Note: Only the bare minimum is completed. Fancy formatting will be developed in v2.0.
</panel>

<panel  header="**143 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/36#issuecomment-941083876" expanded>

I'm reopening this PR. We will convert this to a UG update PR instead.
</panel>

<panel  header="**144 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/39#issuecomment-941904200" expanded>

It would be great if you can provide a sample input and output for more clarity. @Roycius 
</panel>

<panel  header="**145 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/44#issuecomment-942223722" expanded>

This feature is an enhancement of #41 
</panel>

<panel  header="**146 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/55#issuecomment-942238350" expanded>

Duplicate of #37 
</panel>

<panel  header="**147 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/52#issuecomment-945334258" expanded>

Resolved in PR #64 
</panel>

<panel  header="**148 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/63#issuecomment-945356720" expanded>

@ptejasv @rebchua39 @Roycius I will assign everyone here. Whoever developing a certain feature will also implement the parser for it.
</panel>

<panel  header="**149 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/69#issuecomment-947420610" expanded>

Completed in PR #74 
</panel>

<panel  header="**150 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/37#issuecomment-951904751" expanded>

Note: Mostly done for v2.0
</panel>

<panel  header="**151 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/56#issuecomment-951905148" expanded>

Note: Mostly done for v2.0
</panel>

<panel  header="**152 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/99#issuecomment-954408649" expanded>

Hi @nishanthelango thanks for reviewing our project.

> Consider extracting out logic in long methods like in the AddCommandParser class for better SLAP and readability

Could you elaborate more on this? Are you suggesting that we should extract and divide the methods inside the class? Or just refactor the class entirely?
</panel>

<panel  header="**153 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/99#issuecomment-954424674" expanded>

I see. Thanks for the insight @nishanthelango.
</panel>

<panel  header="**154 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/94#issuecomment-954451719" expanded>

`list module` will include grades by default as per #102. Closing this issue.
</panel>

<panel  header="**155 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/100#issuecomment-954452438" expanded>

This issue is no longer valid as per #101 and #102.
</panel>

<panel  header="**156 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/108#issuecomment-954502314" expanded>

Possible implementation for this:

```shell
$ add task
   day         : ___
   priority    : ___
   information : ___
```

User has the ability to input the parameters one-by-one, prompted by the command. As for what flag will trigger the interactive mode will be a topic for our discussion.
</panel>

<panel  header="**157 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/114#issuecomment-955265611" expanded>

@ptejasv Could you help me test if this is working on **Mac**?

@Roycius @rebchua39 Could you help me test if this is working on **Windows**?

If some of you also test it on **Linux** please inform me as well.
</panel>

<panel  header="**158 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/114#issuecomment-955436818" expanded>

As of 9ae7a48, this feature is working on..

* Windows (according to @rebchua39 and @Roycius )
* Mac (according to @ptejasv)
* Linux (according to @richwill28)
* WSL (according to @richwill28)
</panel>

<panel  header="**159 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/112#issuecomment-955447155" expanded>

Thanks for pointing out our bug @uosjapuelks. Our program actually accepts the input as long as the first 3 letters matches a valid day of the week. Though we didn't specify this on our UG. An improvement will be done with regard to this to avoid invalid input as shown above.
</panel>

<panel  header="**160 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/112#issuecomment-955448788" expanded>

Currently..
```
Here are the tasks on MONDA:
```

This should be formatted to..

```
Here are the tasks on Monday:
```
</panel>

<panel  header="**161 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/112#issuecomment-955455454" expanded>

Currently..

```
There is no task on MONDATT.
```

An error message should be thrown instead.
</panel>

<panel  header="**162 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/113#issuecomment-955463874" expanded>

Thanks for the review @uosjapuelks. Though the timing isn't necessarily backwards. For the scenario above the correct output should looks like..

```
Saturday, 11:00 PM to Sunday, 01:00 AM
```
</panel>

<panel  header="**163 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/113#issuecomment-955465947" expanded>

Note for developer fixing this issue.

This bug occurs when..
1. start time = PM
2. end time = AM
</panel>

<panel  header="**164 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/115#issuecomment-955471260" expanded>

@rebchua39 I believe this is already solved in https://github.com/Roycius/tp/commit/ad9214067eb8e683b3a3d02000b73251a05f642c?
</panel>

<panel  header="**165 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/118#issuecomment-955480452" expanded>

Thanks for the review @izdiyadfrhn.

Note for developer fixing this issue:
This is caused by using shell Markdown.

https://github.com/AY2122S1-CS2113T-W11-3/tp/blob/e951893e879a47d386256ce36263dd9c53ea9bac/docs/UserGuide.md?plain=1#L93

A solution for this is to change it to regular Markdown. For example..

''''
'''
Markdown content here..
'''
''''
</panel>

<panel  header="**166 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/120#issuecomment-955482807" expanded>

A duplicate of #118.
</panel>

<panel  header="**167 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/119#issuecomment-955483557" expanded>

A duplicate of #118.
</panel>

<panel  header="**168 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/142#issuecomment-955486789" expanded>

Just a UI formatting issue on empty list. A more friendly message would be..

```
There are no tasks in the list.
```
</panel>

<panel  header="**169 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/141#issuecomment-955490017" expanded>

Thanks for pointing this out @uosjapuelks. More rigorous and friendly error messages will be implemented in v2.1.
</panel>

<panel  header="**170 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/140#issuecomment-955493967" expanded>

Sorry for the confusion @AnShengLee. Our UG has yet to be updated to reflect the newest state of the program.
</panel>

<panel  header="**171 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/144#issuecomment-955497775" expanded>

A duplicate of #118.
</panel>

<panel  header="**172 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/143#issuecomment-955501889" expanded>

The index is invalid because the list is empty. The error message will be improved on v2.1 as mentioned in #141.
</panel>

<panel  header="**173 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/139#issuecomment-955504727" expanded>

Thanks for the review @WU-LUOYU-SERENA.
</panel>

<panel  header="**174 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/113#issuecomment-955506686" expanded>

Perhaps it would be better to just standardize the time to 12-hour clock format.
</panel>

<panel  header="**175 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/139#issuecomment-955507227" expanded>

Note for developer fixing this issue: This is a duplicate of #113.
</panel>

<panel  header="**176 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/121#issuecomment-955508936" expanded>

A duplicate of #118.
</panel>

<panel  header="**177 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/122#issuecomment-955509417" expanded>

A duplicate of #118.
</panel>

<panel  header="**178 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/124#issuecomment-955510362" expanded>

A duplicate of #118.
</panel>

<panel  header="**179 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/125#issuecomment-955510783" expanded>

A duplicate of #118.
</panel>

<panel  header="**180 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/126#issuecomment-955511153" expanded>

A duplicate of #118.
</panel>

<panel  header="**181 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/127#issuecomment-955511587" expanded>

A duplicate of #118.
</panel>

<panel  header="**182 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/128#issuecomment-955511950" expanded>

A duplicate of #118.
</panel>

<panel  header="**183 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/123#issuecomment-955516026" expanded>

Thanks for pointing this out @izdiyadfrhn. We will try to improve error messages on v2.1.
</panel>

<panel  header="**184 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/137#issuecomment-955520729" expanded>

Thanks for the review @AnShengLee.
</panel>

<panel  header="**185 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/137#issuecomment-955521489" expanded>

Note for developer fixing this issue: This is a duplicate of #112.
</panel>

<panel  header="**186 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/138#issuecomment-955527650" expanded>

This is not a bug. The command for filtering task/lesson with a keyword is `find [task/lesson] [keyword]`. Perhaps the error message could be improved.
</panel>

<panel  header="**187 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/133#issuecomment-955537010" expanded>

Thanks for the review @AnShengLee.

1. We didn't specify this on our UG, but yes it does work.
2. Thanks for pointing this out! This is an important bug and I can't believe we miss this the entire time.
</panel>

<panel  header="**188 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/133#issuecomment-955539730" expanded>

Note for developer fixing this issue:

Number 2 is caused by having spaces in-between the flags inside the Regex.

https://github.com/AY2122S1-CS2113T-W11-3/tp/blob/e951893e879a47d386256ce36263dd9c53ea9bac/src/main/java/seedu/duke/logic/parser/AddCommandParser.java#L90

Changing it to this would probably fix the issue.

```
userResponse.split("-d|-p|-i"); 
```

Also, remember to fix this for all models as well.
</panel>

<panel  header="**189 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/136#issuecomment-955544092" expanded>

A duplicate of #118.
</panel>

<panel  header="**190 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/146#issuecomment-955546851" expanded>

A duplicate of #141.
</panel>

<panel  header="**191 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/145#issuecomment-955547984" expanded>

Thanks for the suggestion @WU-LUOYU-SERENA.
</panel>

<panel  header="**192 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/131#issuecomment-955549507" expanded>

A duplicate of #141.
</panel>

<panel  header="**193 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/129#issuecomment-955552322" expanded>

Hmm.. should we add validation for this? @rebchua39 @ptejasv @Roycius 
</panel>

<panel  header="**194 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/129#issuecomment-955553918" expanded>

Just my take but I feel like this will make the program unnecessarily rigid.
</panel>

<panel  header="**195 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/130#issuecomment-955555355" expanded>

Thanks for pointing this out @AnShengLee. This is definitely a bug from our side.
</panel>

<panel  header="**196 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/130#issuecomment-955558443" expanded>

Note for developer fixing this issue:

An approach mentioned in #133 should probably be sufficient in solving this issue.
</panel>

<panel  header="**197 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/135#issuecomment-955561681" expanded>

A duplicate of #132.
</panel>

<panel  header="**198 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/132#issuecomment-955564178" expanded>

Hmm.. should we add validation for this? @rebchua39 @ptejasv @Roycius
</panel>

<panel  header="**199 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/148#issuecomment-955569594" expanded>

Note for developer fixing this issue:

1. `moduleinfo` does not properly parse invalid inputs.

2. Error messages should also be improved as mentioned in #141.
</panel>

<panel  header="**200 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/149#issuecomment-955569843" expanded>

Thanks for pointing this out @izdiyadfrhn. This is an important bug.
</panel>

<panel  header="**201 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/149#issuecomment-955570190" expanded>

Note for developer fixing this issue:

This is a similar issue to #112. Fixing this would probably also fix the others.
</panel>

<panel  header="**202 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/134#issuecomment-955570610" expanded>

Thanks for pointing this out @uosjapuelks.
</panel>

<panel  header="**203 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/134#issuecomment-955570649" expanded>

Note for developer fixing this issue:

`|` in the data caused incorrect deserialization.
</panel>

<panel  header="**204 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/152#issuecomment-955626141" expanded>

A duplicate of #141.
</panel>

<panel  header="**205 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/157#issuecomment-955626259" expanded>

We will consider this.
</panel>

<panel  header="**206 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/156#issuecomment-955626432" expanded>

This is not a bug. Just a feature that has yet to be developed.
</panel>

<panel  header="**207 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/158#issuecomment-955626544" expanded>

Note for developer fixing this issue:

Allowing flags in random order is preferable, but currently it is not trivial with our current implementation. To solve this I think it's better if we try to utilize some sort of library.
</panel>

<panel  header="**208 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/155#issuecomment-955626717" expanded>

Thanks for pointing this out @AnShengLee.
</panel>

<panel  header="**209 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/155#issuecomment-955626762" expanded>

@ptejasv @Roycius Could look into this?
</panel>

<panel  header="**210 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/154#issuecomment-955626936" expanded>

We will consider this.
</panel>

<panel  header="**211 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/153#issuecomment-955627095" expanded>

A duplicate of #134.
</panel>

<panel  header="**212 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/150#issuecomment-955627417" expanded>

This is not a bug. Filtering by priority is done using `list task {PRIORITY}`, which is specified in the UG.
</panel>

<panel  header="**213 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/129#issuecomment-955666420" expanded>

Update:

> Inputting the same time for start and end "does not make sense" and unrealistic

I decided that we will not validate input with the same start and end time. It is not "realistic" so to speak, but this is a conscious decision made by the user and our program will not scrutinize it. This design decision is also adopted by Google Calendar.

> unless there exists a 24 hour lecture

It would be nice if we can add this feature, just to make our app more complete. However, from an implementation perspective, the users will now have to type the input start day and end day as well. For example..

```
add lesson Long Lecture -s fri 13:00 -e fri 15:00
```

From a UX perspective, our program becomes sub-optimal because the inputs will now be longer than necessary.

```
add lesson Long Lecture -s [DAY] [TIME] -e [DAY] [TIME]
``` 

Therefore, we are willing to take a design decision that ignores the possibility of a 24-hour lecture, since it is out of the ordinary.
</panel>

<panel  header="**214 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/112#issuecomment-955666988" expanded>

This issue is explained more eloquently on #149, so I am closing this one.
</panel>

<panel  header="**215 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/164#issuecomment-955937218" expanded>

> Since for tasks and lessons, it is used to find things in your personal list.

Good point, but I think it is better to avoid introducing a new family of commands like `moduleinfo` (if that makes sense).
</panel>

<panel  header="**216 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/170#issuecomment-960539017" expanded>

Sorry for hijacking this PR @ptejasv, could you help us fix #171 as well?
</panel>

<panel  header="**217 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/172#issuecomment-961158445" expanded>

I will go ahead and merge this PR @rebchua39.
</panel>

<panel  header="**218 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/177#issuecomment-962444610" expanded>

> Rename `Roycius.md` to `roycius.md`

I thought your username is `Roycius`?
</panel>

<panel  header="**219 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/51#issuecomment-962611331" expanded>

This is a duplicate of `list module` (#72 and #105).
</panel>

<panel  header="**220 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/108#issuecomment-962671628" expanded>

Not implemented due to time constraint, though it is definitely a nice improvement if v3.0 were to be implemented.
</panel>

<panel  header="**221 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/182#issuecomment-962757441" expanded>

Note: only edit command for module will be added due to time constraint.
</panel>

<panel  header="**222 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/46#issuecomment-962757796" expanded>

Not implemented due to time constraint.
</panel>

<panel  header="**223 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/154#issuecomment-962760241" expanded>

Not implemented as a part of our design decision.
</panel>

<panel  header="**224 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/37#issuecomment-963153250" expanded>

Completed for v2.1
</panel>

<panel  header="**225 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/56#issuecomment-963197930" expanded>

Completed for v2.1
</panel>

</panel>


<panel type="info" header="### 4. LEE KAI WEN, ALOYSIUS `@arraysius` (86 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/34#discussion_r721537268" expanded>

Using == is ambiguous as it may be checking object reference instead. Would suggest checking equality by the raw bytes, or overriding the equals() method.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/34#discussion_r721537493" expanded>

Using == is ambiguous as it may be checking object reference instead. Would suggest checking equality by the raw bytes, or overriding the equals() method.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/35#discussion_r722164900" expanded>

Module name and description is constant. I don't think the constructor needs to take in parameters. Similar with Base64Encoder.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r722481178" expanded>

Constructor absent. The function parameters might be more suitable to be passed to the constructor.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r722483644" expanded>

Would `command instanceof ExitCommand` be a simpler way to detect the exit command? Then the `isExit()` method would not be required.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r722485409" expanded>

Unsure of the purpose of this method and in subclasses.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r724906726" expanded>

Consider changing `argument` to `dataString`
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r724907511" expanded>

Since `dataString` takes `argument`'s value, and both variables have the same purpose, this line can be omitted if `dataString` is a class variable.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r724911906" expanded>

Perhaps this file should be in `decodex.modules` package instead
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/72#discussion_r725657155" expanded>

As this message is used when the number of tokens is less than expected, it is not very useful when genuinely missing parameters. Consider changing the message and variable name?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/95#discussion_r725896587" expanded>

Perhaps indicate this is a user input when logging
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/87#discussion_r725899368" expanded>

Perhaps checking by `.length` might be simpler
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/101#discussion_r725942159" expanded>

Maybe change the message to "Command should not be null"
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726945214" expanded>

JavaDocs can be done in a separate issue/PR as it is not the intended change in this PR
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726945340" expanded>

See my other comment.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/113#discussion_r726946039" expanded>

Agree
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/118#discussion_r726972821" expanded>

Awkward phrasing. Consider changing to "Note that the program will consider all characters as `data` following the first space character in the `input` command".
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/118#discussion_r727031876" expanded>

Consider following the same two input examples shown in the example image, in the same order.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730272223" expanded>

Agree
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730272293" expanded>

Perhaps `Sets the original Data` is sufficient as the `@params` will explain the parameters the method takes in.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730272344" expanded>

Perhaps `Sets the current Data` is sufficient.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730272494" expanded>

Not quite undoing, may be understood as reversing the process which is not accurate. May be simplified to `Reverts the current data to its original data`.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730273153" expanded>

I think both are acceptable. The message is still clear and unambiguous.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730273345" expanded>

Perhaps avoid using slashes in JavaDocs. Consider changing to `unknown or invalid`.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730273636" expanded>

The message of returning an object is repeated in `@return` so maybe it can be simplify to `Prepares an ExitCommand`. Similar for other preparation methods.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730273789" expanded>

Missing docs for `ParserException`
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/148#discussion_r730274599" expanded>

The description of the return data is not descriptive of the modification done. Consider `A Data object with its alphabetical characters rotated.`.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/148#discussion_r730275077" expanded>

Consider using Java's `Character.isLowerCase()` instead.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/148#discussion_r730275154" expanded>

Consider using Java's Character.isUpperCase() instead.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/147#discussion_r730279468" expanded>

`@throws` for `ParserException` is missing.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/148#discussion_r730279821" expanded>

Missing new line at the end of file.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/148#discussion_r730279966" expanded>

Empty line can be removed.
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r730979787" expanded>

Perhaps the message can be "The recipe is currently empty. There is no module to be removed." to be more descriptive.
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r730985867" expanded>

Consider using `moduleList.isEmpty()` instead. It does not change the logic of the code but may help with readability.
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r730988052" expanded>

Tests for getters and setters are trivial and not required.
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r730990128" expanded>

Unsure of the purpose of this test. When will creation of a `Recipe` object return null?
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r730993569" expanded>

Perhaps the message can be "The recipe is currently empty. There is no module to be removed." to be more descriptive.
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r730995318" expanded>

Consider the scenario when no recipes exist, like when the program is first run. Passing in an empty `recipeList` is redundant.
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/157#discussion_r730997526" expanded>

The current implementation appears to allow creating recipes with duplicate names. Additional checks may be required to prevent that.
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731005585" expanded>

Throwing an exception from a catch block seems redundant. Consider using Java's built-in `FileNotFoundException`.
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731006577" expanded>

Similarly, I think it is possible to make use of Java's exceptions since FileIO errors are not special exceptions to our program.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731009653" expanded>

It is best practice to handle exceptions. Maybe the exception can be thrown in the method signature and handled by the calling method.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731010452" expanded>

Similar as my other comments regarding using Java's built-in exceptions.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r731040480" expanded>

Unnecessary files should not be committed and pushed. We might need to figure out how to test the functionalities without dummy files.
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732751987" expanded>

Perhaps the variable name can be changed to `recipeUnderEditName`, `selectedForEditRecipeName`, or any other variable name that suggests this recipe is undergoing modification.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732754068" expanded>

Update method name in conjunction with variable name
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732756442" expanded>

Method name is similar to `getRecipe`, which sounds like both methods serve the same purpose on first glance. Consider changing to `setRecipeForEdit` or `setEditingRecipe`, etc.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732767291" expanded>

Add JavaDocs and update the the method name with the variable name accordingly
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732768788" expanded>

Update constant name according to variable name. Consider changing the message to `No recipe selected for editing/modification. Please ...`
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732774940" expanded>

Not sure if we want to include command help message in the error message as the other error message do not.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r732780036" expanded>

Maybe just simply `editingRecipeName`. We can discuss this as a team.
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/171#discussion_r733419737" expanded>

Remove `/modification`
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/182#discussion_r733606035" expanded>

Would be great if the table of content headers are clickable links that references their respective headers. You can take a look at user guide as an example.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r733792941" expanded>

I think it can be a general write error for both creation and writing.
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/188#discussion_r734555951" expanded>

I would say that if is not a clickable link then it should not be in the table of contents. Another option is to change the set up and writing code steps to section headers. @rizemon @Kair0s3 
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734560819" expanded>

Fantastic Eggs and How To Eat Them 👍🏻
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734563158" expanded>

Consider if an error occurs halfway through the recipe. I think the half processed data should not be stored. Only if the full recipe is successfully executed then the data should be stored.
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734565847" expanded>

Are we printing the output after each module? I’m not sure about this.
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734572966" expanded>

Agree with the `run()` method only taking in `Data`. But an exception message would make it clear to the user that no operations have been done. Otherwise it will print the same data which may confuse the user if there may some operations that reversed changes. A.k.a empty recipe is not the same as a recipe that hexencode + hex decode
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/192#discussion_r734707127" expanded>

Maybe the recipe name can be placed in it's own variable for simplification.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/194#discussion_r734707699" expanded>

Similar to other PR about placing the editing recipe name in a variable.
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/196#discussion_r734708154" expanded>

Similar as other PR about placing editing recipe name in its own variable.
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734976495" expanded>

This method probably needs to be public so that it can be called from other classes.
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734976546" expanded>

This method probably needs to be public so that it can be called from other classes.
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734976673" expanded>

This method probably needs to be public so that it can be called from other classes because the input folder is not created before the first time the program is launched. Probably needs to be called during Decodex init.
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734984749" expanded>

Interesting variable name
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734989680" expanded>

Writing makes sense. But for reading a file for the first time, the file can't be in the input directory because it hasn't been created. So maybe creating of input directory can be during init.
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735747282" expanded>

If this method is only used in the init then it can be changed to private.
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735748832" expanded>

The regex can probably be put in a constant to avoid magic literals
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735750393" expanded>

Missing period.
</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r735754201" expanded>

The exception docs can probably be changed to "If an error occurs while reading the file...". Similar with other exception docs.
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735804169" expanded>

I think this is good here. and I think `recipe delete` should not have this functionality
</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#discussion_r735805513" expanded>

Add 2 blank spaces before the `%d.` for indentation to follow the user guide.
</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/226#discussion_r736814997" expanded>

Missing newline
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739665369" expanded>

Agreed. Maybe a general error like `Unable to access recipe directory`.
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739665815" expanded>

Can consider checking existence with `recipeDirectory.exists()` as well.
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r739666248" expanded>

Perhaps only files with the `.txt` extension should be loaded to prevent reading of unsupported file types.
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/251#discussion_r740116923" expanded>

Perhaps `.endsWith()` might cover more error cases than `.contains()`
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/330#discussion_r744283917" expanded>

Duplicate definition for data transformation
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/330#discussion_r744284032" expanded>

I think the "(s)" can be omitted and just left as "syntax"
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/330#discussion_r744284156" expanded>

"(s)" can probably be left out.
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/363#discussion_r744414729" expanded>

Perhaps there is a missing newline at the end of the file.
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744426113" expanded>

Perhaps "Converting" should be changed to "Conversion of" since encryption and decryption are nouns.
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744426514" expanded>

Missing new line at EOF
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744426560" expanded>

missing newline at EOF
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744426607" expanded>

Missing newline at EOF
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/69#discussion_r725477686" expanded>

This is not checking if the module name is empty. This is to find the number of characters of the longest module name.
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732786383" expanded>

There is a possibility that the user does not provide parameters for a module that requires them, which would then crash the program. So this is an error that needs to be handled, and not an assumption that requires an assert.
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734581596" expanded>

The test is to ensure that the command executes successfully with `listCategory` being one of the 3 accepted values. The print result is irrelevant. The purpose is the exact opposite of `run_listUnknown_throwsCommandException`.
</panel>

<panel  header="**90 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/16#issuecomment-933290719" expanded>

LGTM
</panel>

<panel  header="**91 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#issuecomment-936845361" expanded>

LGTM
</panel>

<panel  header="**92 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/96#issuecomment-939820705" expanded>

Closes #94 as well
</panel>

<panel  header="**93 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/115#issuecomment-940830188" expanded>

Since `Parser` is the main class cleaning input data, should the modifications be made there instead of in `SelectCommand`?
</panel>

<panel  header="**94 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/130#issuecomment-941938508" expanded>

Duplicate of #127 
</panel>

<panel  header="**95 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/132#issuecomment-941951889" expanded>

Closes #132 
</panel>

<panel  header="**96 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/154#issuecomment-944977455" expanded>

I did not do JUnit tests for Ui as it is all input and output operations
</panel>

<panel  header="**97 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/209#issuecomment-951484923" expanded>

With `RecipeCommandParser` now merged, it would be great if you added the command to the switch statement and the appropriate `prepareRecipeListCommand()` method.
</panel>

<panel  header="**98 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/259#issuecomment-955977218" expanded>

The input `1234` is an absolutely acceptable base64 format and hence it is able to be decoded. That does not mean that the decoded data is intelligible. This is just how base64 works.

Also, imagine the scenario where the user enters a base64 encoded input. The user will want to decode the input, hence we allow decoding of data without encoding it first.

This feature is working as intended.
</panel>

<panel  header="**99 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/265#issuecomment-956030119" expanded>

Duplicate of #268 
</panel>

<panel  header="**100 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/260#issuecomment-956035159" expanded>

Can perhaps have a table listing the modules with and without parameters.
</panel>

<panel  header="**101 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/339#issuecomment-962658705" expanded>

Both parameters of the method have the same name. Perhaps the first one is supposed to be `BASIC_COMMAND_HELP_MESSAGES`
</panel>

<panel  header="**102 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/337#issuecomment-962659962" expanded>

Duplicate of #336 
</panel>

</panel>


<panel type="info" header="### 5. Yue Junfeng `@yuejunfeng0909` (62 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/22#discussion_r724997553" expanded>

Can provide more detail on what data is returned?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726638947" expanded>

leave an empty line before parameters.
for example
```
    /**
     * Returns true if there is an Item in the ItemContainer with the specified name.
     *
     * @param name Name of the item
     * @return True if the item exists
     */
```
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726641527" expanded>

Only one test? what happens if there is no such item on the testList?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726642084" expanded>

What happens if there is no item in the list or there is one item but the command requested to edit another item that is not on the list?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726642373" expanded>

leave an empty line in between
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726645475" expanded>

Item has set cost and price method, can just update directly, but this implementation also works.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726646604" expanded>

can remove this package alr
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726953986" expanded>

Why are there only 2 commands imported, shouldn't it be all 5 commands?
Is it because your implementation is different from haoyu's one?
@haoyusimon please review
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726955186" expanded>

Please add javadoc for constructor as well
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726955937" expanded>

List function has not been implemented?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726968318" expanded>

No need this package alr cuz bigdecimal will be processed internally in Item class.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726970275" expanded>

It will be better if you can create a constant string, and use String.format() to format the output.
You may refer to https://github.com/AY2122S1-CS2113T-F11-4/tp/blob/master/src/main/java/seedu/duke/Parser.java#L53
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726971100" expanded>

try not to keep commented out code in PR
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726971489" expanded>

As mentioned, no need to import this package
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726972988" expanded>

Since all command in parser is static, and we are only interfacing with one ItemClass in v1.0, it will be easier if we just instantiate one static ItemClass
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726973474" expanded>

Unnecessary constructor if all methods in this class is static
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726974332" expanded>

why remove the whitespace?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726975321" expanded>

Why is there a need to output something?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726976465" expanded>

i think no need to test contains when you are testing execute?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726977573" expanded>

If you have made the output format a standard public static String variable, you will be able to easily form an output here.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726980651" expanded>

Is there a better way to do this other than looking at the output?
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726981778" expanded>

no need all this
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727320388" expanded>

can remove this package
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727327203" expanded>

I thought execute should have no input, as all the command should have been prepared by the constructor?
If yes, move the list parameter to the constructor.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727327674" expanded>

Use a constructor to get the list
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727328034" expanded>

there shouldnt be empty line after javadoc
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727329451" expanded>

move this to command package, not the model package.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727331648" expanded>

by right testing should create Stub classes for all associated class to eliminate the possibility of test failure due to error in associated classes.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727329781" expanded>

also, remember new line at end of file
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727336437" expanded>

remove
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727763376" expanded>

 #35 I think the command should create its own exception classes, for example, an IllegalCommandException(), and take in a string to specify the reason for the error, then whoever is using this command package no need to import the model class to be able to capture the exception.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727763892" expanded>

wrong place, move to command package
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727889966" expanded>

Where is this illegal argument exception thrown?
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727890922" expanded>

No need to specify NullPointerException i think
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727892978" expanded>

it does not belong to model package
also there is one in the parser class, but I'm not sure where did this exception is used. please check and correct accordingly
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727893484" expanded>

Move to command package or parser package, this shouldn't belong to model
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727893656" expanded>

wrong place
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727898061" expanded>

the throw exception here, is it because the editCommand, addItem etc throws a lot of different exceptions?
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/38#discussion_r728100639" expanded>

It looks like it will be easier if there is a method to return such a string. Please create an issue as feature request, and assign to me. I will implement in the Item class in my next PR, then please create a new PR to replace this to use that method instead.
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/38#discussion_r728113632" expanded>

Agree. Will merge after this is changed
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/38#discussion_r728132727" expanded>

Wait this should be an exception, not an assertion. JVM does not enable assertion by default, so this may check at all. Only use assertion to check the invariance in your code, such as after a series of operation, a variable should change from 10 to 0, then you assert this variable = 0.
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/43#discussion_r728852319" expanded>

i think dont need to import these
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/43#discussion_r728854492" expanded>

I think its better not to leave full stop here, according to https://nus-cs2113-ay2122s1.github.io/website/se-book-adapted/chapters/documentation.html#javadoc
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/63#discussion_r730823480" expanded>

Shouldnt "list" be shelf?
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730826053" expanded>

No need this, there is a static method to print welcome message in the UI package
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730827824" expanded>

Please change the return type of execute function of all method to String in the next PR so that Lixin can work on implementing UI package.
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730829917" expanded>

I think it's better to create separate PR for general documentation updates.
Each PR is supposed to be only targeting one issue.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/63#discussion_r730854421" expanded>

It's about coding standard. If there is no clash of variable name or any other specific reason, the name of variable should be in camelCase of the class name.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730858692" expanded>

Yes it's good practice to update the UG together with your PR. but in this case there is other update for the UG as well. Actually, you can just commit the specific lines of code/documentation that is related to this particular PR, and commit the rest of the lines on another branch separately so that you can create pull request from separate branches.
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/63#discussion_r730882150" expanded>

You missed this line. Please search for "list" in all your command classes.

Also, as discussed before, since we are taking in Shelf the command method, there is no need ask for Shelf again in the execute method.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/85#discussion_r734945795" expanded>

isit possible we also let the user edit the name of the item, and name of the shelf
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/85#discussion_r734955457" expanded>

ok issue created #86 
Not highest priority, can do it later
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/147#discussion_r739768199" expanded>

Try to set the MAX_BUBBLE_WIDTH smaller than the terminal width so that the lefthand side of the bubble will not touch the left side of the terminal.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742534427" expanded>

https://se-education.org/guides/conventions/java/basic.html#layout

Indentation for wrapped lines should be 8 spaces (i.e. twice the normal indentation of 4 spaces) more than the parent line.
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742534774" expanded>

Can add back the input?
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742567428" expanded>

According to TA, this type of message should be handled by UI, maybe can add it to the predefined message class?
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742786572" expanded>

Delete accordingly
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/201#discussion_r742789758" expanded>

Overload this method. Do not overwrite the original method.
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/208#discussion_r743360138" expanded>

Maybe it's better to also display ID just like get command
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/233#discussion_r744060082" expanded>

Since this repeats so many times, can make this a static variable?
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/233#discussion_r744061326" expanded>

yea make sense.
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/275#discussion_r744612010" expanded>

dont leave white space here
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/25#discussion_r725793615" expanded>

Thanks i have changed the test methods accordingly
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/61#discussion_r730349331" expanded>

Ok so i read the textbook again and I feel that this is only a special case where the exception should not occur, so it should still be Exception, not RuntimeException.
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#discussion_r730383248" expanded>

By right all item container are in ContainerList. but true I should have assert !containers.contains(itemContainer) at the end of the program. Will change it.
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#discussion_r730383421" expanded>

Yes I am ok with renaming ItemContainer, but I have explained why I am not naming it as Shelf or Category in the comments above, please take a look.
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/89#discussion_r736115879" expanded>

Thanks, have fixed it in another PR
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/223#discussion_r744059230" expanded>

Thanks, forgot to finish the sentence haha
</panel>

<panel  header="**69 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/41#issuecomment-943238846" expanded>

the master branch has been updated, please resolve conflicts
</panel>

<panel  header="**70 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#issuecomment-944956338" expanded>

> **2 issues from me:**
> 
> 1. Should we be making ContainerList have a more intuitive naming? Since we are using them for the categories of the item, I thought making it something like CategoryList would be better.

I think it's up to the user to name the containers. The ContainerList will contain all possible storage options such as warehouse, shelves and cabinets. Suppose we rename it to category, if there are many shelves for novels, the user may just put everything under novel, then later when the user is trying to search where the item is, he will not know which shelf among the many shelves is storing the book

> 2. Should we be only allowing certain names of ContainerList/CategoryList be valid? Specifically: Books, stationaries, electronics etc (I guess that might be under Parser)

Based on my response for issue 1, I don't think we should.
</panel>

<panel  header="**71 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#issuecomment-945047104" expanded>

> Code looks okay, but I also understand Zhihuang's concern about the naming of the containers, as another developer who will be peer reviewing may not understand the purpose of "ItemContainer" in a Bookstore context as compared to using "CategoryList".

I am ok with changing the class name, but i do not feel that CategoryList is a better alternative to ContainerList. I'm fine with replacing Container with things like location and storage.

> Also, Just to clarify and confirm, so using this updated code, if the user wants to get the details of an item,
> 
> 1. user has to specify the itemName & container name (represented by category? or do we need to add a new input parameter - to be confirmed)

I think we may need to do some changes to the code. Since there will be many items with the same name on the same shelf, this method will only be able to update the 1st item in the shelf.
Maybe we can overload this method, by allowing the user to specify the item (maybe can use hashcode)

> 2. code has to check if container name exist before finding the item from the container

If the container does not exist, it will throw ItemContainerNotExistException. Thus no need to do another check.
</panel>

<panel  header="**72 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#issuecomment-945048608" expanded>

@AY2122S1-CS2113T-F11-4/developers please look through the code and check if I should make any changes. If yes then review-request for changes, otherwise please review-approve.
</panel>

<panel  header="**73 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/75#issuecomment-950109611" expanded>

Create a restockAlert class
</panel>

<panel  header="**74 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/82#issuecomment-951788480" expanded>

No longer required
</panel>

<panel  header="**75 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/108#issuecomment-952707206" expanded>

Please resolve conflict and I will merge after that
</panel>

<panel  header="**76 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/148#issuecomment-957453506" expanded>

Shelf name cannot contain "/", can include this in user guide.
</panel>

<panel  header="**77 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/128#issuecomment-962418914" expanded>

Was addressed in #233 
</panel>

</panel>


<panel type="info" header="### 6. PANG JUN WEN, ADRIC `@adricpjw` (45 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/10#discussion_r718649159" expanded>

Perhaps you could try calling a common fetchMod(String moduleCode) here instead since it seems this might be a frequently used function
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/10#discussion_r718650593" expanded>

Would this add to the timetable in the matter outlined by our original User Guide?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/13#discussion_r719111171" expanded>

Is there another fetchMod method we can use that fetches from the downloaded json files instead of the API?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/12#discussion_r719114195" expanded>

Might want to keep this case standardised. Also include saturday and maybe sunday as there are modules with lessons on those days as well
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/24#discussion_r722265588" expanded>

Would this work  with modules that have multiple lectures or multiple tutorials like CS2113T?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/24#discussion_r722274630" expanded>

Perhaps liaise with @xuanlc113 to work out timetable local save
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/26#discussion_r722906620" expanded>

I think @xuanlc113 already implemented a timetable saving method so im not sure this method is necessary
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/29#discussion_r723090537" expanded>

Could this benefit from refactoring for when more commands are added in the future?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/29#discussion_r723099192" expanded>

For table-like UI, string formatting like "%-8.10s" for example means left-justified, 8-10 characters width iirc
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/29#discussion_r723099425" expanded>

Might be time to change to switch case
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/49#discussion_r725412014" expanded>

remember to add javadocs in the future
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/49#discussion_r725412215" expanded>

nice tests. LGTM
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/51#discussion_r725412376" expanded>

remember to add javadocs atleast for public functions down the road
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/51#discussion_r725413176" expanded>

why did you make this static variables?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/51#discussion_r725413747" expanded>

perhaps this should not be a static function because there might be different timetable objects in the future

Also consider 
 - return out of for loop once identified module has been removed from the list and lessons
 - throw exception if for loop goes through without returning, so you dont have to track a hasModule bool
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/51#discussion_r725414012" expanded>

why not just call deleteFromSchedule on every schedule instead of doing a for loop
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/54#discussion_r725478558" expanded>

can be refactored directly back into line 38:
- instead of : 
command = parseClearCommand(timetable) ;
-->
command = new ClearCommand(timetable);
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/56#discussion_r726008405" expanded>

Correct me if im wrong but doesnt this just check if the two objects belong to the same class?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/56#discussion_r726009376" expanded>

wouldnt it be better to add 2 modules, then delete 1 and check if everything makes sense? This is to ensure that this method differs from clear()
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/67#discussion_r729689846" expanded>

Would it be better to retain equals since the comparison we require is only for content equivalence?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/67#discussion_r730419086" expanded>

nice refactoring into parent class
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/67#discussion_r730419286" expanded>

might want to remove this for testing purposes
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/74#discussion_r732021549" expanded>

if im not wrong showModOnline is not used anymore right?
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/74#discussion_r732024403" expanded>

consider using string formatter for spacing instead of typing out the space, since it offers better control over the spacing width
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/74#discussion_r732025185" expanded>

up to you, but there is a lessontype enum available for use
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/74#discussion_r732027022" expanded>

probably could be done neater with string formatter but thanks for updating
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735143203" expanded>

Perhaps change the flag to "-at" to keep it consistent with search flags that yi jie implemented
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735145034" expanded>

Could I ask why the use of concat over +=?
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735145084" expanded>

I like this reduction!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735145233" expanded>

This seems entirely hard-coded, but works for now.

Consider using flags to extract key terms like start time and end time instead of hard code an exact start and end point
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735145366" expanded>

Also might want to consider merging this with the add command (i.e using flags to identify if its an event/lesson/task/deadline) so that there is essentially only 1 command to add to the timetable instead of multiple
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735145433" expanded>

Can this be private?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735145705" expanded>

cant this be refactored together witih addLesson?
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/93#discussion_r735146282" expanded>

might be time to refactor out some parsing into sub parsers like UserItemParser so that CommandParser does not get overwhelmed
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/90#discussion_r735219064" expanded>

why not let update run in the background?
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/90#discussion_r735219150" expanded>

then if "abort" is entered then interrupt all threads or smth like that
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/90#discussion_r735219324" expanded>

makes sense to block here
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/90#discussion_r735219631" expanded>

Perhaps these can be refactored into different files to keep NusMods neat
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/95#discussion_r735224453" expanded>

why is there magic number here
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/95#discussion_r735225383" expanded>

this seems like it can be refactored. Also consider using String formatting instead of printing spaces
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/98#discussion_r735728169" expanded>

perhaps you can refactor the formats out into constants afterwards
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/99#discussion_r735732060" expanded>

prob could have done this in a more efficient and robust manner, but it works. If there future installations that had items that werent Lessons or Events this would not be scalable.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744212246" expanded>

Perhaps module should also be removed from moduleCodes?
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744212333" expanded>

probably should throw exception rather than return invalidcommand
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744212379" expanded>

Perhaps refactoring this code with a parent class of Graded and Ungraded module might make it neater?
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719322286" expanded>

Do we need a data transfer object?
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719324247" expanded>

I think its preferable to use fixed-size array where each index refers to the hour. i.e 23rd index is 2300, index 9 is 0900. This would make it easier to add timetable items to the array based on its starttime. 
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719325797" expanded>

This would also help make it easier during the add Module process when checking for collisions. Instead of using linear search to check for collisions can simply use the index to check if another module already occupies that time slot in O(1) time
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719326645" expanded>

 earliestHour and latestHour is across all days because the timetableUI resizes what to print based on the earliest class and the latest class
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719327657" expanded>

This semester refers to the sem 1 or sem 2 for the academic year, not the semester for the user (i.e sem 3,4... does not exist)
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719354641" expanded>

Hm the way I set it up was that the `TimetableLesson` is created first then added based on its `startTime` to `endTime` so I still have them as private properties that are accessed when adding to the timetable.
Ah I didn't consider the gson parsing, perhaps can initialize with some other starting value.
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719361927" expanded>

So actually nusmods default is 1000 -1700, but stretches if classes are added to timeslots beyond or before. In my case I am not exactly rescaling the output, but rather simply extending it (fixed-size width timeslots, but number of timeslots change)

Currently my implemented default is 0900-1200, but I could set it to 0900-1600 so theres not so it doesn't change that often
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/59#discussion_r726770883" expanded>

i thought it might help but it doesnt, still not sure why its not passing MacOS CI
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/4#issuecomment-929832648" expanded>

LGTM
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/10#issuecomment-930298620" expanded>

Might want to consider how to add to the timetable according to the lesson type and class number
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/28#issuecomment-935915587" expanded>

Help command well implemented
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/19#issuecomment-935917665" expanded>

Timetable displays the modules taken and number of MCs taken for that semester, which helps users to plan better around their intended workload
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/21#issuecomment-935920163" expanded>

Copy of #19 , closed
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/39#issuecomment-946876326" expanded>

Working on the UI side of displaying User Items
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/78#issuecomment-948593846" expanded>

Hi all make sure to ./gradlew check to ensure checkstyle is all met
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/77#issuecomment-948594068" expanded>

Hi all make sure to ./gradlew check to ensure checkstyle is all met
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/80#issuecomment-950187578" expanded>

Now on PR #87
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/87#issuecomment-950187679" expanded>

Merging first to quick fix urgent bug
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/95#issuecomment-950478507" expanded>

checkstyle errors
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/97#issuecomment-951054627" expanded>

Nice work!
</panel>

<panel  header="**66 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/36#issuecomment-951576432" expanded>

Not feasible given timeline
</panel>

</panel>


<panel type="info" header="### 7. Lam Junyu William `@williamlamjy` (44 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/20#discussion_r722916893" expanded>

Perhaps could shorten the name to getUserCurrentPrice/getCurrentPriceFromUser
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/20#discussion_r722917067" expanded>

try catch exception statement here for null?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/20#discussion_r722920428" expanded>

can rename to something along the lines of displayAddInstrumentFirstInstruction/displayedAddInstrumentInputInstruction
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/31#discussion_r725500720" expanded>

naming should be consistent to setParameters
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/31#discussion_r725500831" expanded>

also v similar naming to setParams in the command class maybe could change this name ?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/40#discussion_r726092999" expanded>

what about if there are no remarks? isnt it optional
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/53#discussion_r726777287" expanded>

should we set up a console handler as well?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/72#discussion_r730244132" expanded>

Download** 
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/72#discussion_r730254404" expanded>

For this part for formatting of the parameters maybe NAME and PRICE is not really relevant as it is like common sense? But date remarks and index would clarify w the user so those are good to keep. Also can mention sentiments here
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/79#discussion_r733333324" expanded>

can implement a getSize() method inside instrumentManager instead? Might be useful for the other functions too
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/79#discussion_r733333924" expanded>

naming can just be displayInstrumentDeleted
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/79#discussion_r733335170" expanded>

can refactor FAKE to like TEST
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#discussion_r737063899" expanded>

standardise naming to InvalidEmptyExpiryError, InvalidEmptySentimentError and InvalidEmptyPriceError
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#discussion_r737064164" expanded>

change to InvalidSentimentError?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#discussion_r737069496" expanded>

change to checkPriceIsEmpty
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#discussion_r737069607" expanded>

change to checkSentimentIsEmpty
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#discussion_r737069970" expanded>

change to checkDateIsEmpty
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#discussion_r737070590" expanded>

change to checkSentiment after InvalidSentimentGivenError is changed to InvalidSentimentError
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/147#discussion_r738281030" expanded>

could add the colour coding boxes within the grouping for aesthetic purposes
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739780095" expanded>

actually maybe could incorporate this error into validate?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/208#discussion_r740140278" expanded>

does this make for example my name input all lowercase? cause the name inputs might have to be uppercase
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/208#discussion_r740178871" expanded>

oh ok nice will merge
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/216#discussion_r742568145" expanded>

is this supposed to be InputParser or parser
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#discussion_r742627734" expanded>

not valid*
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#discussion_r742627932" expanded>

not valid*
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#discussion_r742628374" expanded>

saved in the wrong format*
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#discussion_r742628493" expanded>

saved in the wrong format*
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#discussion_r742628996" expanded>

make everything "is invalid"? 
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743749266" expanded>

change to "Queries and gets crypto remarks from the user"
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743749747" expanded>

same as above
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743751302" expanded>

Change to "Gets crypto specific parameters from the user when adding a new crypto instrument"
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743751751" expanded>

Same as above
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743751911" expanded>

Here too
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743752353" expanded>

Change as above
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/229#discussion_r743753509" expanded>

stores*
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/219#discussion_r743819408" expanded>

maybe just slightly bigger?
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744236203" expanded>

included*
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744236368" expanded>

4)* idk why got one random spacing might be this formatting
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744236694" expanded>

find*
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744236829" expanded>

add expected output for this?
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/246#discussion_r744234808" expanded>

"to exit an add or edit process."
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744242429" expanded>

Remove "Given that"
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744242544" expanded>

This information is readily and easily.....
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744242694" expanded>

remove "Cryptocurrencies are"
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/19#discussion_r722048078" expanded>

yeah just saw the mistake will delete
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r732403379" expanded>

because of the try and catch block for the MTracker constructor the variables may not be initialised so cant put final 
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/97#discussion_r732407617" expanded>

ur diagram would be between parser and command and mine would be passed from command right? Maybe can show a different functionality for this component like delete an instrument instead. But i think both would need a sequence diagram? Ill delete this part first then
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/76#discussion_r733513363" expanded>

added one custom exception for now can handle the rest in a separate pr
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734535614" expanded>

sry theodore im not too sure about this part and the beforeeach function im gnna push the current pr first without this implementation
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734594525" expanded>

oh shit i didnt realise those were author tags i thought it came from the merge conflicts

</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734620025" expanded>

vignesh has included brackets for getIcon method
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/98#discussion_r734620363" expanded>

so its not necessary unless u prefer if i remove the brackets and insert the method here
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736157702" expanded>

it doesnt call the validate class cause it doesnt make use of the input parser though
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/131#discussion_r736157836" expanded>

or am i interpreting this wrongly
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/198#discussion_r739944328" expanded>

adding break here leads to an error of unreachable statement for some reason
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/204#discussion_r740067986" expanded>

i think can merge theodore's pr on do while loop then ill merge this after or the other way arnd
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#discussion_r742575222" expanded>

ok the latest styles is pushed alrd right ?
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/72#issuecomment-945066842" expanded>

ok nice merging
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/79#issuecomment-948522949" expanded>

LGTM merging
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/143#issuecomment-951592882" expanded>

 The user guide lists the done section as "Marking a setup as acted upon" so i think mark will be a better short form here ill change it to Mark an instrument done
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/144#issuecomment-952512616" expanded>

LGTM
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/151#issuecomment-952625593" expanded>

can send ur link to ur dg pages
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/146#issuecomment-953742647" expanded>

can pull first then u can merge after
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/191#issuecomment-955648026" expanded>

i think just remove the ability to use the separator in the input
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/191#issuecomment-955648058" expanded>

would solve all these bugs regarding the use of separator in input
</panel>

<panel  header="**66 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/186#issuecomment-955648206" expanded>

yeah but hes got a point the exception thrown here should be invalid number not positive number
</panel>

<panel  header="**67 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/186#issuecomment-955648368" expanded>

regarding this we should throw two different errors and messages
</panel>

<panel  header="**68 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/163#issuecomment-955650460" expanded>

okay will resolve
</panel>

<panel  header="**69 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/171#issuecomment-955650997" expanded>

okay will resolve
</panel>

<panel  header="**70 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/196#issuecomment-955651117" expanded>

this is the same bug as someone else has mentioned will be addressing this. for ref vignesh is the one where they put like AAPL;3.2;positive;; as the name
</panel>

<panel  header="**71 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/189#issuecomment-955651392" expanded>

idk if we got time to implement this its not really a bug more for functionality
</panel>

<panel  header="**72 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/178#issuecomment-955652059" expanded>

okay will fix
</panel>

<panel  header="**73 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/177#issuecomment-955652279" expanded>

the price takes in any positive input so it is working as intended as it displays the very small number. might consider adding to ug
</panel>

<panel  header="**74 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/172#issuecomment-955652321" expanded>

any issues regarding file separator will be addressed tgt
</panel>

<panel  header="**75 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/170#issuecomment-955652494" expanded>

any issues with fileseparator is handled tgt
</panel>

<panel  header="**76 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/169#issuecomment-955652612" expanded>

will address this
</panel>

<panel  header="**77 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/173#issuecomment-955652730" expanded>

will address this bug
</panel>

<panel  header="**78 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/174#issuecomment-955652969" expanded>

will address if there is time, if not it will be in the UG
</panel>

<panel  header="**79 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/176#issuecomment-955653166" expanded>

sorry will not address this issue as it is written in the ug with how it works and is already optimal
</panel>

<panel  header="**80 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/175#issuecomment-955653289" expanded>

ok will address
</panel>

<panel  header="**81 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/179#issuecomment-955655924" expanded>

ok will resolve
</panel>

<panel  header="**82 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/181#issuecomment-955656264" expanded>

ok will resolve
</panel>

<panel  header="**83 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/182#issuecomment-955660843" expanded>

ok issue will be addressed
</panel>

<panel  header="**84 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/180#issuecomment-955662345" expanded>

it is addressed in the UG that any trailing extraneous arguments will be ignored
</panel>

<panel  header="**85 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/160#issuecomment-955663491" expanded>

addressing this issue
</panel>

<panel  header="**86 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/146#issuecomment-955913110" expanded>

LGTM merging
</panel>

<panel  header="**87 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/166#issuecomment-956083951" expanded>

LGTM can merge after pulling
</panel>

<panel  header="**88 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/200#issuecomment-957223429" expanded>

closed as this is resolved in filemanager junit testing
</panel>

<panel  header="**89 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/166#issuecomment-957271314" expanded>

LGTM
</panel>

<panel  header="**90 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#issuecomment-958691042" expanded>

i think can merge this in first i can continue the edits on the diagrams on my storage implementation pr
</panel>

<panel  header="**91 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/153#issuecomment-958724356" expanded>

many self invocations and calls to validations in validate and decode methods not too sure if should omit those details and leave the diagrams as such or create an additional ref diagram to show the rs between validations and storage
</panel>

<panel  header="**92 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/212#issuecomment-958750797" expanded>

if its updated i can merge
</panel>

<panel  header="**93 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/212#issuecomment-958902724" expanded>

LGTM nice work
</panel>

<panel  header="**94 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/216#issuecomment-960567152" expanded>

LGTM
</panel>

<panel  header="**95 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/168#issuecomment-960568703" expanded>

resolved
</panel>

<panel  header="**96 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/152#issuecomment-962013484" expanded>

not adding spacing between * as it takes up too much space
</panel>

<panel  header="**97 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/223#issuecomment-962045064" expanded>

LGTM can merge after pulling
</panel>

<panel  header="**98 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/227#issuecomment-962045916" expanded>

LGTM can merge
</panel>

<panel  header="**99 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#issuecomment-962378983" expanded>

LGTM can merge after updating
</panel>

<panel  header="**100 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/219#issuecomment-962379906" expanded>

LGTM
</panel>

<panel  header="**101 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#issuecomment-962380266" expanded>

LGTM
</panel>

<panel  header="**102 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/235#issuecomment-962381380" expanded>

LGTM
</panel>

<panel  header="**103 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/246#issuecomment-962572428" expanded>

ps can link the ug
</panel>

<panel  header="**104 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/247#issuecomment-962601832" expanded>

refactor all methods with remarks from remark to remarks especially in AddXYZCommand and AddXYZParser
</panel>

<panel  header="**105 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/247#issuecomment-962602056" expanded>

refactor all methods containing pastReturn to pastReturns as well in the Etf classes
</panel>

<panel  header="**106 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/247#issuecomment-962602574" expanded>

in the different sub instrument need to refactor remark to remarks too
</panel>

<panel  header="**107 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/247#issuecomment-962763407" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 8. Nigel Ng `@ngnigel99` (43 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/28#discussion_r722866065" expanded>

`year > 2025`
Any reason why 2025 is used as an upper limit? 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/28#discussion_r722879556" expanded>

I see, was wondering that 2025 applied for the target audience (nus students graduating by 2025) - maybe replace magic literals `2021`, `2025` as  constants in `constants` package instead?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723796448" expanded>

```suggestion
    public static final String COMMAND_MODULE_LIST = "module list";
```

may be more in line with other features of displaying items
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723797094" expanded>

you can create a `moduleList` class and inherit my `ListOfRecords` class in `calories` package to make it more OOP
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723797364" expanded>

I suggest creating a `Module` class which includes `detail` instead, may be more OOP
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723798125" expanded>

Don't use wildcard imports
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723799272" expanded>

don't really get what action is for, maybe separate functionality into classes? 

e.g `moduleList` , `moduleAdd` --> we parse in `Parser` and execute specific commands rather than within a custom class, maybe use `moduleListCommand` in `commands` instead
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723797769" expanded>

reference : `WhatIAteList` class to see overriding `&gt;T>` as `&gt;FoodRecord>`, you can do the same with `&gt;Module>`
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725433947" expanded>

Hmm, would it be better if the `taskList` is found within `storage` instead, reason being I was thinking of how to implement other listing features too - we need to add another parameter for every additional adding feature, may be a very long method call, wdyt?

For example, `whatIAteTodayList` is found in `storage` object
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725433955" expanded>

here 
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725434297" expanded>

can I clarify what this does? thx
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725434741" expanded>

This seems to be a general query for any list, can we reuse this and load method for any .txt file?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725488803" expanded>

Awesome  
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725489295" expanded>

sure
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/46#discussion_r725816153" expanded>

this should be a method call instead, since we have classes that extend `Command` and constants that we check for in `parser`
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/46#discussion_r725819595" expanded>

to be exact, this could be a method in `Ui` rather than a string, having added the commands and the descriptions, where a short description could be tagged with each command in the definition
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/57#discussion_r726896100" expanded>

Hmm, would these be better referenced from `Messages` in `constants`?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/57#discussion_r726899834" expanded>

Should this be a constant in `Messages` instead?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/57#discussion_r726900080" expanded>

Should this be a constant in `Messages` too?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/57#discussion_r726901394" expanded>

Nice way of partitioning data!
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727229362" expanded>

```suggestion
        ArrayList<Note> notes = storage.collectionOfNotes.getNotesArrayList();
```
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727230671" expanded>

```suggestion
            for (Entry entry : entries) {
```
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727230874" expanded>

```suggestion
                if (entry.getEntryNoteName().equals(note.getNoteName())) {
```
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727233564" expanded>

```suggestion
    public DuplicateEntryException() {
        System.out.println("Error ! The entry already exists");
    }
```
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727233877" expanded>

```suggestion
    public DuplicateNoteException() {
        System.out.println("Error ! The notebook already exists");
    }
```
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727234305" expanded>

```suggestion
    public EmptyEntryArgumentsException() {
        System.out.println("No arguments found for entry.");
    }
```
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727234631" expanded>

```suggestion
    public EmptyJournalArgumentException() {
        System.out.println("No arguments found for journal.");
    }
```
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727234987" expanded>

```suggestion
    public EmptyNoteArgumentsException() {
        System.out.println("No arguments found for notebook.");
    }
```
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727235334" expanded>

```suggestion
    public IncorrectJournalArgumentException() {
        System.out.println("Incorrect arguments found for journal.");
    }
```
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727235859" expanded>

```suggestion
    public NoNotebookFoundException() {
        System.out.println("The notebook has not been created");
        System.out.println("Please add one first!");
    }
```
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727238219" expanded>

Use  single class  imports pls, think this is a recurrent issue from the compiler
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727239064" expanded>

Exceeds character count per line, try spreading it across different lines
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727240009" expanded>

Would case statements make the code neater for this? Just a small suggestion
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727242689" expanded>

```suggestion
    public static ArrayList<String> notesToData(ArrayList<Note> notes) {
```
Names representing methods must be verbs and written in camelCase. (I think)
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727242970" expanded>

```suggestion
        ArrayList<String> data = notesToData(notes);
```
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727244369" expanded>

Hmm, don't  think the case statements should  be [indented](https://se-education.org/guides/conventions/java/basic.html#naming) that way, please revert this change
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/60#discussion_r727255189" expanded>

Fixed when solving merge conflicts, please confirm
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/67#discussion_r727700573" expanded>

nice
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144#discussion_r737042746" expanded>

Missing Command suffix
```suggestion
public class ListZoomLinksCommand extends Command {
```
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144#discussion_r737043069" expanded>

```suggestion
        syntax = "zoom open m/ [MODULE_CODE]";
```
maybe add a divider like m/ to suit the overall syntax of click?
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144#discussion_r737043710" expanded>

nice
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144#discussion_r737043990" expanded>

Maybe tell the user to check for `https://`
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144#discussion_r737045702" expanded>

tbh I looked through my own code, don't think a divider is needed for single parameters
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725594967" expanded>

I changed this from ui to just a scanner
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725595093" expanded>

@swatimahadevan I added these variables instead of using a constant, so your data would be organised into `tasksdata/` folder. feel free to change the name
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725595161" expanded>

@swatimahadevan the food data folder would be instantiated too, as i modified the `load` functionality
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725595312" expanded>

@swatimahadevan here, I checked `FileNotFoundException` on creating a new file for new users, and used a variable in `Storage` rather than `Messages`. Was wondering if you could shift some of your specific operations into `StorageTasks` instead.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725595422" expanded>

@swatimahadevan  modified this bit
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725595590" expanded>

for example, write and read task list because they are specific to a task list
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/39#discussion_r725645439" expanded>

#41 
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/229#discussion_r741605455" expanded>

Ah, nice catch, will do!

</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/234#discussion_r742532035" expanded>

Yes, it'll be toggled with `help rt`. I implemented this so it's easier to integrate the runtime help (for devs) into the help command (for users).

In other words, the current process for updating the help command would be:
1. Dev runs `help rt`
2. Dev runs `help` to get all command syntaxs at runtime (since intellij supports this, but doesn't work on a &gt;kbd>.Jar&gt;/kbd> file
3. Dev copies the updated help command (sorted alphabetically, with syntax extracted at runtime)
4. Dev pastes the updated help command string into command constants

This implementation removes the need for uncommenting/ commenting the `ClassPackageReader` implementation I'm doing now with help, although there's still a need to "hard-code" the help message string for the user's help command.
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/234#discussion_r742532127" expanded>

Thanks for the question, I think this is an important issue to be addressed in the developer guide too!
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/234#discussion_r742532995" expanded>

Nice catch, just realized I can  extract the method rather than adding a `//comment` to explain what I'm doing there haha
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/5#issuecomment-932094394" expanded>

Ignore this, just testing
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/9#issuecomment-933192214" expanded>

... so that I can view what food items I've eaten so far
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/25#issuecomment-934520248" expanded>

Fixes #11  

Need to implement storage, parser to fully work
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/25#issuecomment-934525755" expanded>

Fixes #13 
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/30#issuecomment-935765708" expanded>

Fixes #13 
Still have to integrate parser, storage to properly use command, TBD
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/34#issuecomment-937620130" expanded>

LGTM - really neat code and tests, but was wondering - should the expected grade for a mod be a character instead? Not too sure what the double represents
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/34#issuecomment-937652122" expanded>

LGTM! Go ahead and merge, not merging yet as I see the //to add enumeration comment on `expectedGrade`
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#issuecomment-939302191" expanded>

We can discuss  the `command` implementation on our next meeting
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#issuecomment-939302517" expanded>

Oops, closed on accident
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/46#issuecomment-939710918" expanded>

Seems like a reasonable implementation for now, but doesn't look very OOP with manually labelling the index etc.
A suggestion would be to use the commands strings we defined in constants
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/55#issuecomment-940579706" expanded>

Awaiting @swatimahadevan 's checks on a common calendar
</panel>

<panel  header="**66 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/69#issuecomment-942201521" expanded>

Closed with #68 
</panel>

<panel  header="**67 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/97#issuecomment-945162924" expanded>

Summary: 
read all class names by defined packages, filter out commands and sort by alphabetical order, run getSyntax methods using those filtered commands
[help_upgrade.pdf](https://github.com/AY2122S1-CS2113T-T09-4/tp/files/7360510/help_upgrade.pdf)



</panel>

<panel  header="**68 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/102#issuecomment-950789177" expanded>

Can't really include in release, ignore
</panel>

<panel  header="**69 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/146#issuecomment-952625653" expanded>

Just some printing changes, using Ui.printline instead of sout.
</panel>

<panel  header="**70 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/223#issuecomment-955656487" expanded>

spelling error, oops
</panel>

<panel  header="**71 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/221#issuecomment-955656777" expanded>

spelling error - calendar vs calender --> perhaps we should accept both words ?
</panel>

<panel  header="**72 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/226#issuecomment-957932171" expanded>

Fixes #181 
</panel>

<panel  header="**73 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/217#issuecomment-958660460" expanded>

Fixed with #229 
</panel>

<panel  header="**74 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/192#issuecomment-960472101" expanded>

Lmao tester should've added negative calorie bug for this too.
</panel>

<panel  header="**75 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/192#issuecomment-960503049" expanded>

Closed with #234 
</panel>

<panel  header="**76 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/204#issuecomment-960503246" expanded>

Fixed with #234 
</panel>

<panel  header="**77 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/266#issuecomment-962808543" expanded>

Purely DG edits, to check if image formatting is correct, and to move architecture to the correct component in due time
</panel>

<panel  header="**78 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/212#issuecomment-962812994" expanded>

updated extra line in ug for copy and pasting
</panel>

<panel  header="**79 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/202#issuecomment-962813103" expanded>

Updated extra line in UG for copy and pasting
</panel>

</panel>


<panel type="info" header="### 9. ELJER CHUA `@arcturusz` (38 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/27#discussion_r724025985" expanded>

I think should change this back to "Scene" instead of "scene"
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/52#discussion_r731713785" expanded>

Can change or remove the comments on top cause not returning boolean already
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736879723" expanded>

Unresolved merge conflict?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736879869" expanded>

Unresolved merge conflict?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736879981" expanded>

Unresolved merge conflict?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736881965" expanded>

Can remove unnecessary blank lines
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736882423" expanded>

Can remove unnecessary blank line
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736882656" expanded>

Can remove unnecessary blank lines
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736882997" expanded>

Can remove unnecessary blank line
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r736883840" expanded>

Author missing name?


</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739657399" expanded>

I think we can combine this 2 exceptions to a more general one InvalidNoteException
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739657753" expanded>

Just a suggestion can change to switch (userChoice) and use case statements might look neater?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739657853" expanded>

I think this is too deeply nested? Maybe can refactor to extract out methods
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739657622" expanded>

Maybe can add \n behind the first line instead of putting an empty System.out.println()? Similar for the other lines in UI for this PR.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739665344" expanded>

Would be good to standardize the string, "operation index" and "index" are referring to the same thing, so as "invalid" and "not valid". 
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739665571" expanded>

These 3 methods are essentially the same code. I think will be good to change to something like printNoteErrorMessage
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739668423" expanded>

Ok no problem, it's up to you :)
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/213#discussion_r739789553" expanded>

Can pull the upstream and do rebase or something cause I think some stuff are changed? Like now the exceptions regarding Note comamnd are combined to 1 in upstream.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/213#discussion_r739996868" expanded>

I think can standardize if want a space before the 'Please'
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/213#discussion_r739997520" expanded>

I think our comments follow the format like // Here the index..., with a space after // and start with a capital letter.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/216#discussion_r740409635" expanded>

I think dont need to break for default
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/216#discussion_r740411331" expanded>

I think dont need to break for default
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740506623" expanded>

Can change the Bulids to next line to follow the javadocs format
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740506826" expanded>

Spacing between the description and param
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740761233" expanded>

I think can standardize if want to put spacing to align the description. I think the params description need start with capital letter.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740761612" expanded>

I think should only put 1 space after the * before the 'Builds' and 'to'
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740761743" expanded>

Params description should end with punctuation if not will fail the checkstyle
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740762072" expanded>

I think should start the description of method with a capital letter for this.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/220#discussion_r741289055" expanded>

Don't need this extra space after params
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/220#discussion_r741292008" expanded>

Need to add an empty line between description and parameter section, same for all other javadocs in this file.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/220#discussion_r741293831" expanded>

Can remove the extra * at the last line of the javadocs
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/220#discussion_r741294050" expanded>

Need to add an empty line between description and parameter section, same for all other javadocs in this file.


</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/220#discussion_r741295233" expanded>

I think can write a single line like: 
/** We increase the scene number by 1. */

And maybe can consider starting the javadocs with a verb. Eg. Increases scene index by 1
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/221#discussion_r741947653" expanded>

I think can change to Creates and remove the line after params description
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/213#discussion_r739997175" expanded>

I think can do like isValid = !userInput.startsWith("search") && !userInput.startsWith("open") then in the if statement use if(isValid)
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/244#discussion_r744192072" expanded>

Spacing between description and params 
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/244#discussion_r744192118" expanded>

I think can change to Returns
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/244#discussion_r744192135" expanded>

Creates
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/106#issuecomment-952300359" expanded>

Is this PR still needed? if not can close 
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/204#issuecomment-959407770" expanded>

Change "Please enter the title for this note (if you do not need title, type a spacing instead):" to like "Please enter the title for this note (if you do not need title, enter a spacing or press enter key):"
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/220#issuecomment-959841843" expanded>

Hi I think some of the javadocs summary can change a bit, like the starting word. Cause the coding standard wrote: 

In method header comments, the first sentence should start in the form Returns ..., Sends ..., Adds ... (not Return or Returnning etc.)

</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/244#issuecomment-962481963" expanded>

You can take a look at the stuff i sent on telegram regarding javadocs or refer to module website on coding standard at https://se-education.org/guides/conventions/java/basic.html#comments to follow the format.
</panel>

</panel>


<panel type="info" header="### 10. Chai Zong Lun `@zonglun99` (38 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/45#discussion_r721089232" expanded>

Logo looks good
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721500361" expanded>

Can delete this part since its abstract.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721508394" expanded>

Just a minor thing, can delete these spaces
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722398640" expanded>

I think c can be named as command too
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/58#discussion_r722412339" expanded>

Can store these as constants.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/58#discussion_r722424423" expanded>

can remove this like extra line
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/58#discussion_r722424745" expanded>

maybe can just rename dummy to add
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723324445" expanded>

Can delete this
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723328108" expanded>

Actually can just put if(listOfIngredients.isEmpty())
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723329254" expanded>

Maybe can consider printing numbers before each ingredient too
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723330773" expanded>

can delete this space here
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725153492" expanded>

Is this supposed to be ingredient instead?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725153746" expanded>

I think can type out as ingredientExpiry
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725155259" expanded>

Would be better to spell out description
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725155714" expanded>

This one also can spell out
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725438290" expanded>

I think can change this printing statement to maybe this:
Listing ingredients in alphabetical order.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725438720" expanded>

Can remove this comment also, I think there is no exception to throw because default is to list based on how recent the ingredient is added right?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725461673" expanded>

oh I see
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/78#discussion_r725487192" expanded>

can remove this extra space
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/78#discussion_r725487249" expanded>

this space can remove also
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/78#discussion_r725487348" expanded>

Got error here, space between Command and  {
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/99#discussion_r725663792" expanded>

If im not wrong, if u have multiple qty, then they will prompt how many to remove
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/100#discussion_r725758434" expanded>

Should be YYYY right
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/104#discussion_r725856659" expanded>

Not sure if you want to put in another directory but this should be fine too. Maybe can rename as testSavedList/Log
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/128#discussion_r732431231" expanded>

I think theres space before and after the | for this part
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/148#discussion_r735449149" expanded>

I think this is the cause of checkstyle error
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/148#discussion_r735450187" expanded>

for the '|' maybe can include the spaces before and after ' | '
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/148#discussion_r735454203" expanded>

do you mean intOutput instead
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736503333" expanded>

For this can throw exception if they never give a valid number
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736514777" expanded>

oh if you already took care then its fine
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741026819" expanded>

can change name to ItemNameComparator
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741026932" expanded>

same for this
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741030930" expanded>

why here got extra \n? (just checking)
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741291016" expanded>

Oh I see
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/225#discussion_r744098457" expanded>

change to exit
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/235#discussion_r744249711" expanded>

can put a white space after description

</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/235#discussion_r744249747" expanded>

Same for here
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/235#discussion_r744251405" expanded>

this is missing a full stop might be the cause of checkstyle error
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/43#discussion_r721004725" expanded>

okay we can update that later 
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/63#discussion_r723191027" expanded>

Done!
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/122#discussion_r726812012" expanded>

Okay
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/122#discussion_r726812705" expanded>

No problem!
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/131#discussion_r733281276" expanded>

will have some error tho
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/131#discussion_r733282624" expanded>

okay nvm updated
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/222#discussion_r743057806" expanded>

amen

</panel>

</panel>


<panel type="info" header="### 11. Alvin Ben Abraham `@alvynben` (35 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/44#discussion_r721013494" expanded>

Looks good :)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/44#discussion_r721013554" expanded>

Thanks for separating this into UI!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/55#discussion_r722248561" expanded>

Great function! Thanks for implementing it 👍 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/55#discussion_r722248941" expanded>

Thanks for editing the UI tests!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/55#discussion_r722250022" expanded>

Great change!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/55#discussion_r722250385" expanded>

Thanks for solving this issue!
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722391223" expanded>

Can we rename this to something clearer? Something like `while(!c.exitStatus())` or `while(c.exitNotRequired())`?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722391535" expanded>

Good catch!
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722392424" expanded>

Can you rename this variable to something more descriptive? Maybe `introMessage`?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722392920" expanded>

Same issue with the variable name. Maybe `reactionMessage`?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722393242" expanded>

Saw it in printExitMessage too.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722394687" expanded>

Should the string version of the ingredient have an endline? Other strings don't normally have an endline unless `System.out.println` attaches it to them.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/104#discussion_r725869270" expanded>

You may want to remove one of the lines, since it seems like repeated output.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/113#discussion_r726150792" expanded>

This wording is a bit confusing. Can we change it to "List sorted by most recently added:"?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/112#discussion_r726159566" expanded>

You could extract this print method and put it in ingredient class.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/122#discussion_r726809841" expanded>

Can we reword this to:
* The `KEYWORD` should be the same as the name of the item you are looking for. 
* The `KEYWORD` can also be a part of the name of the item.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/122#discussion_r726810705" expanded>

Thanks
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736625893" expanded>

Do we need this function? I think it's easier if you just say shoppingList.removeIngredient() cos it's more self-explanatory. Update shopping list can mean a lot of things.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736631248" expanded>

This method could be improved? Does this get shopping list quantity? or update shopping list quantity?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736635898" expanded>

If qty is less than 0, than means that the user removed items from the shopping list right? Would you not want to add those items to the shopping list?

Or is it because you only add items to the shopping list once it reaches 0?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/212#discussion_r739923096" expanded>

Why do string concatenation here?
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/212#discussion_r739923479" expanded>

Shouldn't we catch for all numbers greater than or equal to Integer.MAX_VALUE or less than or equal to Integer.MIN_VALUE? 
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/212#discussion_r739923640" expanded>

Actually shouldn't the check be if `quantity + qty >= Integer.MAX_VALUE ? 0 : qty`
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741292726" expanded>

Can we keep the original naming convention for nameOfItemToBeRemoved? Because it's clearer the variable is storing the name rather than an item?
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741295438" expanded>

Lol, nice catch.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/219#discussion_r742541800" expanded>

I think I'll create a warning but still allow the user to add the thing in my PR.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/222#discussion_r743046133" expanded>

Nice, thanks for this.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/222#discussion_r743046747" expanded>

Wah fast game, awesome
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/222#discussion_r743049517" expanded>

Can I say an amen!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/222#discussion_r743050037" expanded>

Nice thinking.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/228#discussion_r744124082" expanded>

Thanks for doing this/
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744259801" expanded>

Could this be changed to "If there is only one item with a similar spelling (different capitalization / has more letters)"?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744259919" expanded>

Typo. Should be to "update**d** is **z**ero"
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744259978" expanded>

Could this be changed to "If there are multiple items of the same name?"
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/256#discussion_r744635309" expanded>

Why do you need line 3? Line 3 says "false", Line 4 says "not true"... isn't it the same thing?
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721536314" expanded>

Done!
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721536409" expanded>

Done!
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721538353" expanded>

Done!
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721539445" expanded>

Done!
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721539512" expanded>

Done!
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723415751" expanded>

Good catch!
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723416349" expanded>

Very readable. Thanks for that.
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723427226" expanded>

Edited the function to allow both index and no index, so it is reusable.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/64#discussion_r723434442" expanded>

Done.
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/78#discussion_r725493925" expanded>

Have changed the function, so not applicable.
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/78#discussion_r725493970" expanded>

Done.
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/78#discussion_r725493999" expanded>

Resolved.

</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/99#discussion_r725672783" expanded>

True, but I think I'll let Bryan create the documentation for that section.
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/100#discussion_r725672822" expanded>

Thanks, I will just say that typo was there before! Just saying. Good catch.
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/100#discussion_r725846374" expanded>

Thanks, corrected it.
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/128#discussion_r732861729" expanded>

Done, good catch.
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/235#discussion_r744250430" expanded>

Good catch.
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/235#discussion_r744250444" expanded>

Good catch.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/235#discussion_r744251621" expanded>

Thanks for noticing, wasn't the cause of the error, but I almost forgot to put the period in.
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/51#issuecomment-933681922" expanded>

Add any bugs you find below:
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/127#issuecomment-945729609" expanded>

UI getItemToBeRemoved java doc does not have full stop at end.

'''java
   /**

     * Returns the item the user wants to remove from Fridget.

     *

     * @param matchingItems The list of items which match the user's search term.

     * @return The item that the user wants to remove.

     * @throws FridgetException if the user types a wrong value (non-integer or outside of index of matchingItems)

     */

    public Ingredient getItemToBeRemoved(ArrayList&gt;Ingredient> matchingItems) throws FridgetException {'''
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/127#issuecomment-945731244" expanded>

No space between description and thrown error in javadoc for execute in RemoveCommand. And also all other commands don't have space.

```java
    public RemoveCommand() {

    }

 

    /**

     * Executes the command.

     * @throws FridgetException if user types an incorrect value when prompted.

     */

    @Override

    public void execute(Ui ui, Parser parser, IngredientList ingredientList) throws FridgetException {
```
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/141#issuecomment-950110287" expanded>

sorry
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/151#issuecomment-960527754" expanded>

We can do this in the future.
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/190#issuecomment-962586083" expanded>

We do want to allow the users the freedom to type in numbers, if they wish to do so. There is no reason to block it.
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/186#issuecomment-962586253" expanded>

While this command could be optimized for fast typists, most keyboard users would most likely prefer the approach used here as it is more forgiving and you don't need to remember the exact details of the item you want to delete from the start. Regardless, we may do this is future milestones.
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/195#issuecomment-962829053" expanded>

For future work.
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/197#issuecomment-962829533" expanded>

No reason to restrict the user unnecessarily. And the remove command can for the item can be initiated by simply typing a part of the name.
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/205#issuecomment-962830317" expanded>

Rejected to keep shopping list separate from all other functions related to the Fridget. Thanks for the suggestion!
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/207#issuecomment-962830934" expanded>

The purpose of the shopping list is for users to add in or remove whatever items Fridget deems necessary to be added. What is more useful is the file stored in fridgetData. We've updated the UG to reflect this. Thanks!
</panel>

</panel>


<panel type="info" header="### 12. Marcus Ong Yih `@marcusbory` (33 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/19#discussion_r723413597" expanded>

Since this is implementation of abstract method, may not require `@Override`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/21#discussion_r723422152" expanded>

Default case does not require `break`
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/21#discussion_r723423488" expanded>

Good catch that this can be used in both ContactParsers
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723856887" expanded>

Hi @ng-andre , would like to check, will this be an IndexOutOfBoundsException? I am thinking from the perspective of the following input: `edit 1 -n -g ng-andre`

Following our discussion last night, would it be better to perhaps check for this by using the following code?
```
if (destructuredInputs.length < 2) {
    throw new MissingDetailException();
}
```
Do let me know!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723859609" expanded>

Hi @ng-andre , I understand what you are trying to do here. However, the `MissingDetailException` here appears to be for flags with nothing specified, ie `add -n -g github`. As such, the given FailedCommand would result in a not-so-suitable message being displayed. To improve this, I would suggest making a new exception, followed by a suitable error message in TextUi.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723860497" expanded>

Hi @ng-andre , in the previous `parseAddContact()` function, the `details` array was used for the result of using `contactParser.parseContactDetails()`. I believe what you are trying to do here is not necessarily that, as I can see a `userDetails` array later on for that purpose. I would suggest to keep the naming of variables consistent to avoid confusion.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723862301" expanded>

Hi @ng-andre , I believe your intention is to check for user inputs like `edit 1` without any specified edits. In that case, as per @lezongmun 's suggestion, a `MissingArgException` would be more suitable here.
FYI: `MissingArgException` is for commands that do not have any specified arguments, while `MissingDetailException` is for commands that specify a flag, but do not specify any argument **for that flag**.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723862636" expanded>

Do kindly update this as well, per the comments on lines 94-96. Thanks!
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r724189442" expanded>

Good use of SLAP here!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/33#discussion_r725094479" expanded>

Thanks for clarifying on this that the `NullPointerException` is unnecessary.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/33#discussion_r725096457" expanded>

Good catch that `contactList.getListSize() - 1` will display `-1` on `TextUi`. 

cc: @ashrafjfr as this is also pertaining to your implementation.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#discussion_r725843946" expanded>

Hi @ng-andre , the change should be done to `NUMBER_OF_DETAILS`. This is because `NUMBER_OF_DETAILS` is shared across different classes to ensure that when we scale, the app scales as well. 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#discussion_r725844251" expanded>

Similar to comment above.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#discussion_r725858608" expanded>

Noted, thanks for the clarification.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/71#discussion_r730356667" expanded>

@lezongmun I think this method can be used for any confirmation, should this be changed to just `getUserConfirmation`?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/71#discussion_r730356729" expanded>

Great use of OOP concepts to abstract user input specific TextUi!
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/71#discussion_r730356833" expanded>

Noted that `welcomeBackMessage()` is for subsequent start up runs while `welcomeMessage()` and `greetingMessage()` are for first run (without a `me.txt` file).
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/71#discussion_r730356841" expanded>

Good catch @lezongmun !
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/71#discussion_r730357571" expanded>

Hi @lezongmun , I think a `PersonalContactParser` would be better as it can make use of the regex checkers. This can extend for other fields as well.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/91#discussion_r733262066" expanded>

This function is over 30 lines. Please find a way to refactor it.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/91#discussion_r733264226" expanded>

Same issue as before. Also, there seems to be repeated code being used between this and `AddContactCommand`. It would appear that all the checks are just:
1. Getting the two fields
2. Checking if they are `null` objects
3. Comparing them if they are not.

These repetitive actions can be abstracted out and SLAP can be performed. For instance, load postEditContact details into one String array of size 6 `String[6]` and currentContact into another `String[6]`. A simple iteration over 6 Strings while calling `duplicateField` can be called.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/91#discussion_r733264603" expanded>

```suggestion
    public boolean hasDuplicateField(String input, String saved) {
```
Sounds like a noun rather than a question.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/91#discussion_r733266731" expanded>

It would appear that these two methods are largely similar, except for one line asking for confirmation w.r.t. `add` or `edit`. My suggestion is to:
- Combine into a single method `confirmDuplicateMessage`
- Include one more parameter `String type` which allows you to decipher if the operation was `add` or `edit`
- Use an `if-else` block to decide what to print, for instance:
```java
if (type.equals("add") {
    System.out.println("Do you still want to add the contact?");
} else {
    System.out.println("Do you still want to edit the contact?");
}
```
- When calling this method in `AddContactCommand` or `EditContactCommand`, include your specified `type`, for example:
```java
TextUi.confirmDuplicateMessage(duplicatedIndex, contactList, "add"); // for add
TextUi.confirmDuplicateMessage(duplicatedIndex, contactList, "edit"); // for edit
```
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/98#discussion_r734193438" expanded>

Good use of abstraction to make the flow more inclusive for `PersonalContact`
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/98#discussion_r734195281" expanded>

This feels like it was copied from @ng-andre 's `ContactList.editContact()`. I think we can have a discussion to shift this to `Contact` class and just pass in the `String[] contactDetails` array.

For @ng-andre , possible to do `ContactList.editContactAtIndex` and parse in the index to perform `.editContact()` for.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/99#discussion_r734204691" expanded>

Minor edit, apologies for being anal:
```suggestion
    private boolean[] hasEditedFields(String[] contactDetails) {
```
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/99#discussion_r734205917" expanded>

Hi @ashrafjfr , I believe you should be able to use `boolean` as a primitive Java data type. Capitalised `Boolean` is an object (similar to `int` vs `Integer`). Generally, in the case of using `Boolean`, class methods are used. However, in your implementation, I think that `boolean` primitive data type should suffice. In addition, a primitive data type uses a lot less memory than an object.

tl;dr - In your use case, use `boolean` instead of `Boolean`.
```suggestion
        boolean[] hasEditedFields = hasEditedFieldChecker(contactDetails);
```
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/99#discussion_r734205997" expanded>

Good, simple implementation!
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/99#discussion_r734252850" expanded>

Hi @ashrafjfr , there is an Arrow Head coding standard violation. You could possibly extract this loop out into another method, as well as combine the if checks into a single if, using `&&`.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/119#discussion_r736870820" expanded>

Good use of `ref`s to abstract your diagrams!
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/185#discussion_r744148250" expanded>

Good job with the precise detailing of the execution of command
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/190#discussion_r744262428" expanded>

Good job on catching the double `\n` issue
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/190#discussion_r744262665" expanded>

Good job on catching this
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/14#issuecomment-935338287" expanded>

Hi @lezongmun , appreciate your help and guidance in reviewing my PR. I have made changes to the IO redirection tests, and similarly added the gitignore files as follows so that, going forward, all future tests will start from a fresh build and fresh local storage. Do go through my updated PR and let me know if merging is possible. I will be more than willing to explain any uncertain parts you may have.

In addition, I have also made sure that my code was compliant with the CheckStyle.
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/9#issuecomment-935450523" expanded>

Fixed by #14 
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/18#issuecomment-936519808" expanded>

Hi @ashrafjfr , code looks good. Happy flow is achieved for #10 but there are conflicting files with @lezongmun's PR. Do kindly look into the conflicts and hopefully bring everything together.

Do take note of the following:
- Could possible use Le Zong's `FailedCommandType`s to implement some exception handling.
- Update the IO Redirection Text UI test to include both yours and his tests.
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/23#issuecomment-939332735" expanded>

As per discussion with team, `null` will be default empty value when user does not specify optional fields like GitHub, and future optional inputs.
cc: @lezongmun @ng-andre @mayankp291 @ashrafjfr 
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/40#issuecomment-939498676" expanded>

GitHub/LinkedIn Regex (tentative, haven't tested): `^[a-z0-9_-]{3,15}$`
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/40#issuecomment-939499774" expanded>

@mayankp291 
Test the regexes:
- Name (??)
- GitHub
- LinkedIn
- Telegram
- Twitter
- Email (simple one will do)
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#issuecomment-939756920" expanded>

@ng-andre according to CI checks:
```
EditContactParserTest > parseContactDetails() FAILED
    org.opentest4j.AssertionFailedError: array lengths differ, expected: <2> but was: <6>
        at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)
        at org.junit.jupiter.api.AssertArrayEquals.assertArraysHaveSameLength(AssertArrayEquals.java:423)
        at org.junit.jupiter.api.AssertArrayEquals.assertArrayEquals(AssertArrayEquals.java:338)
        at org.junit.jupiter.api.AssertArrayEquals.assertArrayEquals(AssertArrayEquals.java:162)
        at org.junit.jupiter.api.AssertArrayEquals.assertArrayEquals(AssertArrayEquals.java:158)
```
In addition, I believe no JUnit tests have been written yet for our CI relating to storage.
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/63#issuecomment-945046148" expanded>

Setting priority to medium, will update once V2.0 is almost complete.
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/13#issuecomment-945046385" expanded>

Changing this to high priority since we are now in V2.0. Also updating type to Story instead of Enhancement, since this corresponds to our digital name card.
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/69#issuecomment-945049464" expanded>

We will probably not be allowing users to sort manually.
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/77#issuecomment-948450465" expanded>

Include INVALID FIELDS as well. cc: @lezongmun 
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/95#issuecomment-948514056" expanded>

![image](https://user-images.githubusercontent.com/58963565/138267432-9a675f7e-14b1-4c8a-8931-343ce00b38de.png)
![image](https://user-images.githubusercontent.com/58963565/138267444-adcca5cf-5b4c-492b-b4fe-0b05bc4c5e73.png)

For reference.
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/74#issuecomment-953039449" expanded>

Will be closing this issue because `data/me.txt` achieves the same effect.
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/152#issuecomment-955732092" expanded>

![image](https://user-images.githubusercontent.com/58963565/139591505-500985a2-1e31-4a79-bfcb-b2a5e55e11b1.png)

</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/175#issuecomment-961957938" expanded>

Oversight, done already.
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/181#issuecomment-962147500" expanded>

Fixes #173 , Fixes #174 
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/174#issuecomment-962148357" expanded>

Fixed by #181 
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/173#issuecomment-962148462" expanded>

Fixed by #181 
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/180#issuecomment-962437222" expanded>

Fixed with #182 
</panel>

</panel>


<panel type="info" header="### 13. Ng Andre `@ng-andre` (30 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/15#discussion_r723046804" expanded>

I think this might be an erroneous formatting, could you please clarify?


</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/15#discussion_r723057215" expanded>

Great use of OOP, this level of abstraction helps to make the classes neater
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/15#discussion_r723058835" expanded>

Minor nitpick, but maybe this.parser could be changed to this.mainparser for consistency?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/14#discussion_r723169846" expanded>

@marcusbory this constant should be ADD_CONTACT_COMD
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/45#discussion_r726239199" expanded>

All details will be added as `null` here if not specified. 

@ashrafjfr please take note of this and handle accordingly for view contact
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726952968" expanded>

Are these two extra lines necessary or just for formatting? If it is not needed maybe it could be removed for standardisation
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726963535" expanded>

Can consider changing the variable name to `destructuredInputs` for consistency with the rest of the code
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726966166" expanded>

Would it be better if the if block was changed to `comdIndexSplit.length &gt;= COMD_WORD_LENGTH)` to catch length 0? Not entirely sure if the length might ever be zero but if so it probably wouldn't hurt to cover that case.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726967178" expanded>

This could be combined into `return Integer.parseInt(indexSplit[SIGNIFICANT_INDEX_POSITION].trim());`
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/78#discussion_r730408536" expanded>

Maybe this can be refactored or abstracted as the `AddPersonalContactParser` class is quite long.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/78#discussion_r730408909" expanded>

Same for the other set[Detail]IfValid methods
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/78#discussion_r730409492" expanded>

Could this be SLAP-ed into another function with return type bool within the while loop?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/109#discussion_r736056169" expanded>

Good catch on the testui bug!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/124#discussion_r737593108" expanded>

Good catch on this abstraction!
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/124#discussion_r737595072" expanded>

Good catch on this mistake, thanks!
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/125#discussion_r738885765" expanded>

Should we standardise `flag + detail` as a new 'object'? Point for consideration but not a major issue.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/125#discussion_r738886545" expanded>

Can add that `me` can be specified as an index for personal contact
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/159#discussion_r739771032" expanded>

Fix for GitHub case sensitive name
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/159#discussion_r739771201" expanded>

Fix to allow negative numbers
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/159#discussion_r739771435" expanded>

Fix for .edu emails
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/162#discussion_r741575112" expanded>

User input of index is not in valid regex therefore NumberFormatException. No issue here.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/162#discussion_r741575296" expanded>

Probably an unused import that was added when using print statements for testing the array, can consider removing if not required.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/162#discussion_r741575530" expanded>

Can consider updating text with curly braces `{ }` for consistency with the UG.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/162#discussion_r741576201" expanded>

Should InvalidFlagException still be caught here for safe measure? Considering most methods handle flags which throw InvalidFlagException, but if they are handled accordingly then there is no issue.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/166#discussion_r742665646" expanded>

Do we need to mention which parts of the UG/DG we wrote specifically?
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/184#discussion_r744117444" expanded>

Minor changes to naming
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/186#discussion_r744195129" expanded>

Good catch on the phrasing!
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/187#discussion_r744228961" expanded>

Good catch on this!
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/187#discussion_r744229237" expanded>

I think the phrasing is slightly off, maybe it would be better as two separate lines?
 `Only one @ character allowed`
 `Email cannot start or end with @ character`
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/190#discussion_r744262903" expanded>

Good catch on the null bug!
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723874202" expanded>

@marcusbory I have tested with the input `edit 2` (without spacing after 2) with the code you suggested, which would not enter the if block for some reason, which I suspect is due to the split function specifying 3. Not sure why this is the case, but it would usually not catch such an error, therefore I have changed it to this if block instead, which catches exceptions for both `edit 2` and `edit 2 ` (with extra space after 2). No IndexOutOfBoundsException was thrown during my testing to the best of my knowledge.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#discussion_r723875471" expanded>

Will update this in my next commit, thanks!
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#discussion_r725850808" expanded>

@marcusbory `NUMBER_OF_DETAILS` refers to the number of details for each field i.e. `g github-username`, so the number of details should be fixed at 2 since there is only the flag and the name. However, the number of fields is now 6 since we have up to 6 usernames, hence introducing a new constant is needed. Please correct me if I have understood this wrongly, thanks.



</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/49#discussion_r726797480" expanded>

Catches and handles illegal input `edit 0 0` which was missed out previously
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/100#discussion_r734282189" expanded>

@lezongmun changes to your method if block are here, please specify if it does not work
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/114#discussion_r736646907" expanded>

Abstracted this into a new method, as recommended by @marcusbory 
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/13#issuecomment-935391374" expanded>

@AY2122S1-CS2113T-T09-1/developers change the format from /g [github] to -g [github]
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/6#issuecomment-935392592" expanded>

@AY2122S1-CS2113T-T09-1/developers change the format from /g [github] to -g [github]
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/7#issuecomment-935392806" expanded>

change the format from /g [github] to -g [github]
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/7#issuecomment-936033257" expanded>

need to refactor parseContactDetails into contactParser
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/7#issuecomment-936304504" expanded>

need to add exception handling for missing index and out of bounds
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/24#issuecomment-937725123" expanded>

@marcusbory updated the Pull Request according to your feedback
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/40#issuecomment-939497434" expanded>

Add LinkedIn, Telegram, Twitter, Email
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/41#issuecomment-939497453" expanded>

Add LinkedIn, Telegram, Twitter, Email
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#issuecomment-939755289" expanded>

@marcusbory I believe checks failed as the app is unable to save the edited contact without updating the storage class, will have to check again after it is implemented.
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/44#issuecomment-939763634" expanded>


> @ng-andre according to CI checks:
> 
> ```
> EditContactParserTest > parseContactDetails() FAILED
>     org.opentest4j.AssertionFailedError: array lengths differ, expected: <2> but was: <6>
>         at org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:39)
>         at org.junit.jupiter.api.AssertArrayEquals.assertArraysHaveSameLength(AssertArrayEquals.java:423)
>         at org.junit.jupiter.api.AssertArrayEquals.assertArrayEquals(AssertArrayEquals.java:338)
>         at org.junit.jupiter.api.AssertArrayEquals.assertArrayEquals(AssertArrayEquals.java:162)
>         at org.junit.jupiter.api.AssertArrayEquals.assertArrayEquals(AssertArrayEquals.java:158)
> ```
> 
> In addition, I believe no JUnit tests have been written yet for our CI relating to storage.

Updated the array size in JUnit to 6 since there are now 6 fields instead of 2

</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/56#issuecomment-941166393" expanded>

The switch case in FailedCommand is quite long, we might have to refactor it in a future revision. Otherwise, code is straightforward and easy to understand. LGTM!
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/85#issuecomment-946870759" expanded>

Known issue: 
`search` is unable to account for double spaces between parameters unlike edit and add
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/127#issuecomment-954409721" expanded>

LGTM!

</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/131#issuecomment-955641458" expanded>

Probably due to IndexParser throwing error, need to update IndexParser to handle instead of at command level
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/156#issuecomment-955710621" expanded>

Irrelevant issue, input is effectively `\ls` which is invalid
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/138#issuecomment-955717749" expanded>

Having this feature would not save significant time, and could potentially cause unintended behaviour due to erroneous input.


</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/136#issuecomment-955718115" expanded>

Can add `/` and `-` characters to list of allowed characters
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/130#issuecomment-955721838" expanded>

This is a one time process and introducing a one line command could cause more errors for the user, especially considering he is using this application for the first time. If the user wants to skip the process, he can manually create a me.txt file in the data directory instead.
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/152#issuecomment-955731775" expanded>

Limitation has been addressed in UG. We are unable to implement an efficient solution by v2.1, and will do so in future revisions. 

Possible implementations
- import all with/without duplicates (use flag to specify)
- manually check every single duplicate (inefficient)
- allow Windows-style duplicate handling (Ignore, Ignore all, Cancel)
- summarise every single duplicate and give user a one time confirmation to add/discard (no granularity) 
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/129#issuecomment-961123790" expanded>

Will handle this when publishing release
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/190#issuecomment-962616181" expanded>

LGTM overall, no issues with the documentation. Will leave the approval to @marcusbory as a second check for the bug fix, but otherwise I don't see any issues with it. 
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/178#issuecomment-962618855" expanded>

Closed with #185
</panel>

</panel>


<panel type="info" header="### 14. Tan Rui Yang `@tryyang2001` (29 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r724686624" expanded>

I think can delete unused codes :)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r724686744" expanded>

nice design!
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r724704149" expanded>

was thinking if we need to store the name of the user in the future, but looks good for now
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r725459769" expanded>

Yes I agree with what leyi said, you can consider creating a printMessage method that can be used throughout the app and can even consider making this printMessage method to print the message in a consistent format/design (maybe drawing frame (haha I really like frames ... xD) according to the length of the message).
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r725460101" expanded>

The design and logo are very cool for current version already! Perhaps in the future you can consider using '\t' to indent all the messages and diagram displayed :) 
Since our application is CLI-based, so instead of focusing on how cool the output, we can focus more on how neat and easily-visible for the messages we want to show. 
Keep up the good work, good job Yi Zhi! :D
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725564397" expanded>

Maybe we can discuss and standardize the method name, whether to call it `add` or `addExercise` so that the add method in foodlist can follow the same style.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725564404" expanded>

same as my above comment :)
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725564541" expanded>

We can discuss and standardize this method name, whether to just call it `size()` or `getSize()` (in the food list class it is called `size()`.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725567963" expanded>

Hi, may I know why there is a `+ 2` here :)
If this is a magic literal then probably need to extract it out too
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725568609" expanded>

I was thinking that we can allow user to delete all foods and exercises using just one command, maybe call `delete f/all` or `delete e/all` in the future, so that user no need to delete one by one, so perhaps you can consider allow user to pass `all` string, we can discuss this further in the meeting :)
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725618829" expanded>

I see your rationale! Thanks for clarifying :)
Ya I think `split` can perform the same task without that magic literal haha, can consider change to split, thank you :)
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725632189" expanded>

Okay! The reason why I use naming like `size()`, `get()` and `add()` in food list is because I want to follow the naming in array list, but ya it is better to follow the coding standards :)
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726698309" expanded>

I think you can standardize exerciseList and FoodList constructor, whether to put `new XXXList&gt;>()` in the constructor or put it outside :)
Since both methods work, so I think you can just choose one! :D
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726701886" expanded>

Yup, I agree with what leyi has said, so for each of the `getXXXFromData()` method you can consider adding try catch statement, the exception to catch will be `IndexOutOfBoundException` if some records do not appear in the storage file, or `NumberFormatException` if the data is not valid data type. 
Although the user does not need to save the data manually, we still need to deal with the case when malicious user modified or deleted data directly from the text file :(
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726741508" expanded>

Can consider adding message/exception to tell the user not use this delimiter when inserting any data :)
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/43#discussion_r727697839" expanded>

I think there is a typo here? Should it be 'BMI cannot be non-positive" (C with lowercase) ?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/43#discussion_r727698189" expanded>

good approach of extracting the magic literals out! :D
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r730282541" expanded>

I think instead of asking user to type command to create a profile, we can directly help him create a profile, then we ask the user to fill in his name, weight, height and calorie goal, maybe like:
```
You haven't created a profile, a new profile will be created to save personal data:
Name: (wait for user input)
Weight: (wait for user input)
Height: (wait for user input)
Calorie goal: (wait for user input)
```
In the same time can tell the user if have no idea can just press enter, then you handle when "" is detected, initialized to default value :)

</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r730603899" expanded>

can consider extract this out as static constant
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r730604150" expanded>

same as above :)
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r730604644" expanded>

I notice that there is some weird symbol here :(
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/86#discussion_r731736127" expanded>

looks good for now, but i think u will need to change the name of `exerciselist` to `itemlist` later since I am going to remove `exerciselist` attribute in ExerciseList class and move to ItemList class :(
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/119#discussion_r735073616" expanded>

Ya I agree with weida, we can handle any exception inside this function :)
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/176#discussion_r739630389" expanded>

thanks for adding interface for checking storage text validity!
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/215#discussion_r741576441" expanded>

Just curious where is the implementation of the method `extractGeneralDate`, since I cannot find it :(
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/216#discussion_r741603546" expanded>

Try not to use `\n` and replace with `LS` which is a constant we defined manually, so that the code is standardized :)
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/216#discussion_r741604014" expanded>

Think if we detect `bye`, we only need to confirm with them whether they want to exit, if yes then exit, if not then we ask them continuously type a new name, so that we don't need to ask if they want to set their name as bye, which is a bit funny haha.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/216#discussion_r741604322" expanded>

because even the user can change their name to `bye` by using `profile n/bye`, I think it is not considered as a bug?
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/215#discussion_r741629288" expanded>

Thank you! It looks good!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r724749507" expanded>

The reason why I overload this add method is because I do not know which one you prefer to implement, will delete the redundant one once we merge
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r724774106" expanded>

Okay! :D 
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725581068" expanded>

OK! I think I will just follow your naming for FOOD_ADDED, FOOD_DELETED and the message for EMPTY_FOOD_LIST :D
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725631834" expanded>

Sure, I will try to do so!
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725731677" expanded>

Yes! I will implement it! Thanks for your suggestion :)
By the way, I think for my food class, I will need to store the information for FOOD_TYPE (maybe with symbol `F`) because in the future I might want to create multiple subclasses to separate between snacks, drinks, desserts and food
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40#discussion_r727077290" expanded>

As what I discuss with xingjie, there are food with 0 calories, water and vitamins are one of the examples xD So I think I will accept food with 0 calories?
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/8#issuecomment-931965068" expanded>

xingjie pls help :)
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/3#issuecomment-931975668" expanded>

hahaha nice edit xD
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/3#issuecomment-931976043" expanded>

This pull request would no longer be used
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#issuecomment-939329310" expanded>

Hello, I think you need to delete additional line in your main method to pass the check
Make sure that your EXPECTED.txt is same as ACTUAL.txt to pass the ./runtest.bat
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#issuecomment-939398664" expanded>

I was trying to think of any possible bugs that might not yet be handled but I couldn't find any! Thanks for putting so many effort in error handling and checking command validity, good job leyi!!
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/43#issuecomment-941919716" expanded>

looks good to merge!
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/45#issuecomment-941950675" expanded>

nice! It is good to standardize the naming throughout the whole code, thanks for the effort made! 
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/49#issuecomment-943281716" expanded>

Thanks for checking bugs and minor output errors! 
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#issuecomment-945318974" expanded>

Remember to solve the merge conflict! I have just checked the file, the conflict arises from the import statement of `foodlist` and `exerciselist`, because in my working I have created a package called `item` which is the superclass of `food` and `exercise` and also `itemlist` which is the superclass of `foodlist` and `exerciselist` and I have moved the exercise package and food package inside the item package, therefore I think you just need to change those import statements :)
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/102#issuecomment-948200986" expanded>

btw i see u have unresolved merge conflict which i cannot have a look because github says it is too complex :O
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/106#issuecomment-948536409" expanded>

this is not the final version.. 
will continue working at ard 10 pm :(
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/173#issuecomment-955176701" expanded>

Thanks for your feedbacks for our team! I will try to change this part :)
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/203#issuecomment-955941858" expanded>

Sorry there is a problem in my FoodListTest, I will merge my pr later and the problem will be solved.
</panel>

</panel>


<panel type="info" header="### 15. Kumaravel Vignesh `@KVignesh122` (28 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/83#discussion_r731008985" expanded>

Use "The main **parent** class" ?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/83#discussion_r731010739" expanded>

Change MTracker to mTracker.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/83#discussion_r731017454" expanded>

Use paratheses behind all method names. eg. getCommandComponents()
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/83#discussion_r731017911" expanded>

Same as above. Use brackets for method.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/91#discussion_r731561297" expanded>

Capitalise final attribute name. 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/91#discussion_r731564284" expanded>

'if (!givenDate.equals(LocalDate.now()) & !givenDate.isAfter(LocalDate.now())) {
throw new InvalidDateError();
}'
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/95#discussion_r732431077" expanded>

Change to COLOR_MODEL
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/95#discussion_r732431652" expanded>

Change all instrument occurrences to model
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/128#discussion_r735204630" expanded>

Add one newline at end of file.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/128#discussion_r735206858" expanded>

Move these lines to after line 61. So lines 44-61 and this portion will go together under design. This is because the alternatives being considered are part of design considerations instead of actual implementation.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/128#discussion_r735208935" expanded>

These lines should be shifted to implementation as it includes a sequence diagram and gives a rundown on how user can actually add an instrument like stock. After this sentence: "the parameters collected from the user and the command type returned." add a few more sentences on which other methods will be called instead for collecting specific parameters for the different instruments. (Eg. instead of getStockSpecificParameters(), getCryptoSpecificParameters() will be called for Crypto, etc.)
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/123#discussion_r735210078" expanded>

Good job. These content go right below Theodore's implementation content on what happens when adding a stock.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/142#discussion_r736140611" expanded>

Don't know what's happening but think it should work haha.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/142#discussion_r736140748" expanded>

"There were no instruments found for keyword, " + keyword
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/143#discussion_r736189595" expanded>

Include Header numbers like 1.0, 2.1.1, 3.0, etc in hyperlink's text display.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/143#discussion_r736190565" expanded>

Add this hyperlink to the relevant cell in command summary table, in place of &gt;>.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/143#discussion_r736191537" expanded>

View is not subsection of list. List is 2.2.0 and view is 2.3.0 - diff sections.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/143#discussion_r736191913" expanded>

Add this edit section hyperlink to the relevant cell in command summary table, in place of &gt;>.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/167#discussion_r739764537" expanded>

mTracker instead of MTracker
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/204#discussion_r740064071" expanded>

Change to do-while loop.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/204#discussion_r740065143" expanded>

Good thinking!
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/200#discussion_r740075262" expanded>

These lines can be abstracted out into InstrumentDecoder class as a new method like addDecodedInstrument(Instrument instrument).
This method should take in the new Instrument object (eg. new Stock(...) of line 21, new Etf(...), etc.)
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/204#discussion_r740076049" expanded>

Ok yours can go first then.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#discussion_r741539780" expanded>

Correct me if I'm wrong, but I don't think markdown offers a 4th-level of headers. What does 4 #'s achieve? Might wanna consider having this header as bolded and italicised instead.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#discussion_r741539976" expanded>

Same, is there a 4th-level header? If not, just use bold+italicise to distinguish.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#discussion_r741540270" expanded>

Good job!
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/210#discussion_r741942850" expanded>

Rename message to NO_SEARCH_STRING_GIVEN_ERROR.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/234#discussion_r744245304" expanded>

Digital currencies that are secured by cryptography methods.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725570157" expanded>

Yes I will be putting it in while loop when I fix issue # 29.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725570373" expanded>

Ok, setData will be coded in for issue # 29
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725570469" expanded>

ok
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725571345" expanded>

Yea I will create a separate issue for this and update in new PR.
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725571364" expanded>

ok
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/32#discussion_r725571467" expanded>

Nah, I think these should be compulsory.
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725572325" expanded>

If I do this, there will be no need for a separate InvalidCommand class. Will that be alright?
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725572627" expanded>

@theodorekwok If I take this dummy constructor away, what to assign for command in "case ExitCommand.COMMAND_WORD" inside InputParser.filterByCommandType()? I suggest we leave this as the coding logic is still correct.
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725572899" expanded>

Assigning a new InvalidCommand in the catch block will be done after putting everything inside while loop when fixing issue #29 .
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725573920" expanded>

But we need to initialise the InvalidCommand when assigning to command in the mTracker class, like in the exception catch block and stuff, so I thought we would need this dummy constructor. But then again if we choose to have this constructor for InvalidCommand, then for the default case in InputParser.filterByCommandType, we can still return a InvalidCommand object without directly throwing the InvalidCommandError. Both ways would work so would need your advise on this.

But I tried running the code as it is now, logic is fine, InvalidCommandError is caught so why bother removing this constructor? What do you think? :)
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725577480" expanded>

Done
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725579271" expanded>

ok understood
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725579288" expanded>

Ok understood
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/33#discussion_r725579297" expanded>

Done
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725622495" expanded>

OK that is smart.
</panel>

<panel  header="**44 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725622547" expanded>

Ok removed.
</panel>

<panel  header="**45 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725622911" expanded>

Done
</panel>

<panel  header="**46 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/35#discussion_r725623011" expanded>

Nope no reason. I saw that instruments is not in uppercase so thought it should not be final. Will change it to final.
</panel>

<panel  header="**47 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726206578" expanded>

I think we can still keep this because for other instruments, yes, the length of the name may vary. Even then the user can still type in gibberish. But in the case of forex, since all valid forex names definitely only will have 6 letters, we can include this check. But then again, if the user types user types in gibberish for any of the instruments, then its the user's fault but for forex, we have checked the name length for 6 at least.

Sure I will include this in my exceptions PR then.
</panel>

<panel  header="**48 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726207094" expanded>

Ok
</panel>

<panel  header="**49 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/45#discussion_r726207836" expanded>

Ok so I will remove the 2nd .isBlank() condition then.
</panel>

<panel  header="**50 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/45#discussion_r726208122" expanded>

Learnt the art from you legend. HAHA
</panel>

<panel  header="**51 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726237265" expanded>

Done
</panel>

<panel  header="**52 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726250403" expanded>

I have simply added in invalid tries for entry price and exit price prompts in USER_INPUT_TRY_INVALID_PRICE to handle this.
</panel>

<panel  header="**53 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/41#discussion_r726729773" expanded>

Nah man forex names are not &gt;smthin> to &gt;smthin>. Its always like USDSGD, AUDUSD, EURJPY, etc. so I want to keep this length check.
</panel>

<panel  header="**54 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734376601" expanded>

I indicated your names so that yall can rmbr to update urslf.
</panel>

<panel  header="**55 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734377614" expanded>

Ok first name you suggested is alright. For view, I will have it as displaySpecificInstrumentView
</panel>

<panel  header="**56 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734378150" expanded>

done
</panel>

<panel  header="**57 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734378497" expanded>

done
</panel>

<panel  header="**58 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/114#discussion_r734385056" expanded>

I have removed that line. Instead, the whole general view of instrument will be printed out when deleting.
</panel>

<panel  header="**59 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734494684" expanded>

Omg ok.
</panel>

<panel  header="**60 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734925891" expanded>

I removed that method. It's unecessary to create a method and call it when there's a simpler solution.
</panel>

<panel  header="**61 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734925899" expanded>

Nah, I think we can keep it this way.
</panel>

<panel  header="**62 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/120#discussion_r734926775" expanded>

Done
</panel>

<panel  header="**63 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/132#discussion_r735197982" expanded>

Oh okay sure np
</panel>

<panel  header="**64 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/127#discussion_r735200293" expanded>

There is no technical reason. Just felt that it was more asthetically pleasing, that all. But will change this then.
</panel>

<panel  header="**65 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/127#discussion_r735200850" expanded>

Done
</panel>

<panel  header="**66 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/127#discussion_r735200921" expanded>

Sorry that was a mistake. Will revert it back.
</panel>

<panel  header="**67 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736131892" expanded>

Yeah its for hyperlink to the relevant section. Idk how to do the hyperlink to a section so need William's help. William will rectify this in his pr.
</panel>

<panel  header="**68 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736133523" expanded>

Ok changed to XLF
</panel>

<panel  header="**69 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/140#discussion_r736133715" expanded>

Ok
</panel>

<panel  header="**70 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739760974" expanded>

The ide shows an "unhandled exception" error if I don't handle the exception thrown by markAsDone method. That's why:

<img width="827" alt="Screenshot 2021-10-31 at 2 03 14 PM" src="https://user-images.githubusercontent.com/55841532/139570283-f2cb91db-2110-4dea-95b3-07427c6eff13.png">

</panel>

<panel  header="**71 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739761764" expanded>

Yes it works. getInstrumentAtIndex() method in IndexedCommand class gets the instrument at the index inside InstrumentManager's instruments. Then we are just updating the done status of that instrument at that index of instruments arraylist.
</panel>

<panel  header="**72 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739762826" expanded>

I don't think that's bad design at all. The handling of exceptions is related to the methods we are invoking, rather than the class in which this method is used.

I understand what you mean because in this case, this error will never occur due to the file setting the instrument as done, rather than an user. But, it is still acceptable to handle the error by virtue of the method being invoked.

On the contrary, I would say having a redundant doneInstrumentMethod() method inside InstrumentManager to achieve something which can easily be done through Instrument class itself is bad design. We are coupling both InsrtumentDecoder and DoneCommand classes to InstrumentManager unnecessarily.


</panel>

<panel  header="**73 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739797022" expanded>

> The instrumentManager is suppose to manage the instruments which means perform the actions on the instruments.

But done status is an attribute inside the instrument object though. So setting the done value should be done by a method inside instrument itself, no need another facade method from another class to just call only on this method once again. That is bad design tbh.

But I understand where you're coming from. The exception handling is unnecessary but we can't do without it since we are calling that method. But I do not think having this extra exception handling goes against any coding guidelines. 


</panel>

<panel  header="**74 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#discussion_r739813411" expanded>

Thanks @williamlamjy for your suggestion. We implemented it.
</panel>

<panel  header="**75 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/203#discussion_r739965756" expanded>

oops, I forgot.
</panel>

<panel  header="**76 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740203230" expanded>

Renamed to InvalidEmptySearchStringError
</panel>

<panel  header="**77 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740203595" expanded>

We're not trimming. Just searching the whole string. :)
</panel>

<panel  header="**78 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/205#discussion_r740203960" expanded>

Removed.
</panel>

<panel  header="**79 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740218480" expanded>

Yea, forex pairs are always 6 letters like USDJPY, AUDUSD, etc. and there are no numbers. !name.matches("[a-zA-Z]+") makes sure that there are no numbers input in place of 6 letters.

I think I would include these examples in the error message for clarity then. :)
</panel>

<panel  header="**80 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740222781" expanded>

Ok then should we change the max length to 7 then. So the user can input either USD/SGD or USDSGD. But cannot  be more than 7 characters and also no numbers allowed in name?
</panel>

<panel  header="**81 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/207#discussion_r740227273" expanded>

Sorry I wanted to put "2021.01.01" actually. PAST_DATE is used in USER_INPUT_TRY_PAST_EXPIRY below.
</panel>

<panel  header="**82 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/206#discussion_r740238854" expanded>

Hi so this will be the new regex condition
<img width="684" alt="Screenshot 2021-11-01 at 10 06 57 PM" src="https://user-images.githubusercontent.com/55841532/139684683-69d5af55-7e90-4002-90b9-caae26acc046.png">

This makes sure that forex name contains either just 6 letters or 6 letter with a slash in the middle. All other non-alphabetic characters will be ignored.
</panel>

<panel  header="**83 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742560313" expanded>

Oh I was planning to add more user stories when I'm free but seems like William already contributed a sufficient amount. Will remove this then.
</panel>

<panel  header="**84 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742560765" expanded>

Ok
</panel>

<panel  header="**85 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#discussion_r742560864" expanded>

Ok thanks
</panel>

<panel  header="**86 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744099525" expanded>

I do not think this is a standard uml convention. Can you show me a class diagram on the website which uses such a convention of having the arguments' types in parantheses?
</panel>

<panel  header="**87 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/238#discussion_r744100097" expanded>

ok
</panel>

<panel  header="**88 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r744179073" expanded>

Ok have included your github user name in author tag.
</panel>

<panel  header="**89 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r744179281" expanded>

ok
</panel>

<panel  header="**90 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/220#discussion_r744190613" expanded>

Oops so sorry. Don't know why it got deleted. Have added back in.
</panel>

<panel  header="**91 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/36#issuecomment-939471151" expanded>

Another unrelated PR by Theodore has fixed this issue.
</panel>

<panel  header="**92 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/45#issuecomment-940121659" expanded>

I will also add in the check for forex pair names to contain 6 letters to this PR.
</panel>

<panel  header="**93 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/115#issuecomment-949331181" expanded>

Will send in new PR.
</panel>

<panel  header="**94 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/44#issuecomment-955138240" expanded>

Idea discarded
</panel>

<panel  header="**95 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/109#issuecomment-955138403" expanded>

Not needed
</panel>

<panel  header="**96 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/70#issuecomment-955138512" expanded>

Not necessary
</panel>

<panel  header="**97 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/27#issuecomment-955139930" expanded>

Not necessary
</panel>

<panel  header="**98 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/158#issuecomment-955642937" expanded>

Hi I have updated this branch with the latest master. Please merge this PR. The program is working fine for Done command.
</panel>

<panel  header="**99 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/197#issuecomment-955645796" expanded>

Bug does not exist. Ø and O are treated differently by program. A screenshot to explain where this bug occurs would have helped.
</panel>

<panel  header="**100 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/196#issuecomment-955645932" expanded>

Description of bug not clear.
</panel>

<panel  header="**101 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/195#issuecomment-955646104" expanded>

This is not a bug. The large number has just been rounded off to 1.0x10^26.
</panel>

<panel  header="**102 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/194#issuecomment-955646272" expanded>

PR #158 will fix this bug.
</panel>

<panel  header="**103 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/191#issuecomment-955646786" expanded>

Smart catch. @williamlamjy I think because the separator we are currently using for reading and writing to file is ';', if user input this character in any of the instrument's params, the program will be fooled to think that ';' inside the description of a param is in fact a separator.
</panel>

<panel  header="**104 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/189#issuecomment-955647049" expanded>

Any ideas on how to implement an abort command guys?
</panel>

<panel  header="**105 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/188#issuecomment-955647145" expanded>

Limitation already addressed in UG.
</panel>

<panel  header="**106 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/187#issuecomment-955647224" expanded>

Edit command is sufficient.
</panel>

<panel  header="**107 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/186#issuecomment-955647287" expanded>

There is a space in the input, which means its a string rather than an integer dumbass.
</panel>

<panel  header="**108 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/185#issuecomment-955647397" expanded>

find command is case-sensitive. This has been mentuoned in UG.
</panel>

<panel  header="**109 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/183#issuecomment-955647648" expanded>

Issue is fixed by PR #164 
</panel>

<panel  header="**110 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/174#issuecomment-955952851" expanded>

I have fixed this. Users will now be able to search for longer strings with more than one word(s).
</panel>

<panel  header="**111 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/173#issuecomment-955975706" expanded>

Rectified for forex. For crypto, neither the length or the content of the crypto name matters; user can input as they like.
</panel>

<panel  header="**112 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/190#issuecomment-957051224" expanded>

Error messages are more specified now PR #206 
</panel>

<panel  header="**113 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/173#issuecomment-957052239" expanded>

Fixed by PR #206 
</panel>

<panel  header="**114 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#issuecomment-958490142" expanded>

As suggested by Rafael:
![image](https://user-images.githubusercontent.com/55841532/139968540-d8566c22-a754-463d-9ac4-f67a4f57ba96.png)

These arrows pointing to abstract instrument should be solid lines to denote inheritance rather than dependency.
</panel>

<panel  header="**115 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/211#issuecomment-958491832" expanded>

![image](https://user-images.githubusercontent.com/55841532/139968613-2244ad5c-fe59-4d9a-881d-592de07535bf.png)

The constructor gap glitch is still present in this diagram, under DoneCommand.
</panel>

<panel  header="**116 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/189#issuecomment-958591470" expanded>

I have time to implement this. Not much change actually, just need to insert some extra if-statements to check if user input is "abort".
</panel>

<panel  header="**117 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/214#issuecomment-960484899" expanded>

Will take into account most of @theodorekwok 's suggestions, but will still try to have the PPP within 1pg.
</panel>

<panel  header="**118 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/249#issuecomment-962597901" expanded>

Ok @kum-wh I will edit. Pls wait before merging.
</panel>

<panel  header="**119 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/101#issuecomment-962767827" expanded>

All PPPs are in.
</panel>

<panel  header="**120 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/issues/154#issuecomment-962768022" expanded>

All diagrams rectified according to TA suggestions.
</panel>

</panel>


<panel type="info" header="### 16. Alvin Pang Zi Xiong `@crabnuggets` (26 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724740069" expanded>

Perhaps `command` can be renamed to a more intuitive name that more accurately reflects the nature of the variable such as `itemDescription` or `itemIndex`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724741414" expanded>

In a future PR, perhaps I can add a UI method such as `getSuccessfulDeletionMessage` to replace this what is being passed into `CommandResult`. 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724742993" expanded>

`return "Please tell me which task number to delete";`

instead of 

`return ("Please tell me which task number to delete");`

can be considered to help keep the code aligned with the general coding standard.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724749466" expanded>

Nice use of streams.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/27#discussion_r725601989" expanded>

To further avoid nested parentheses and improve code quality, perhaps the alternative can be considered: 

```
currDate = list.get(i).getDateValue(); 
nextDate = list.get(1 + i).getDateValue();
if (nextDate.isBefore(currDate)) {
    ... 
}
```
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/37#discussion_r726857946" expanded>

Variable could be renamed to `task` instead to avoid ambiguity. Similar occurrences of such are in lines 91, 102, 108, 113. 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/37#discussion_r726859449" expanded>

Method name should be a verb. 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/61#discussion_r733850976" expanded>

Nested `if` blocks can be merged into one expression.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/61#discussion_r733854776" expanded>

Should this be `String taskTitle = eventCatalog.get(eventIndex).taskList.get(index).getTitle()` instead? It seems that this line retrieves the title of the current event instead of the desired task. 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/61#discussion_r733872015" expanded>

Since an exception is thrown anyways for the incorrect format, is this variable still required? 
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/63#discussion_r734286367" expanded>

Could be better to throw an exception `if (!itemType.equalsIgnoreCase(TASK_FLAG)` instead so the code within this block no longer needs to be nested. 
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/85#discussion_r735804111" expanded>

Might want to move the subtraction of `1` in `addTaskToEvent` over here instead since the `eventIndex` variable here is not actually the 'index' of the event. 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740996546" expanded>

To clarify, would the `+` in this regex phrase mean that one or more consecutive `>` characters in `userInput` will be matched? If so, what is the intended goal behind this?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740996755" expanded>

Other methods that can throw such exceptions such as `changeMember()`, `addMember()` and `removeMember()` that use `Interger.parseInt()` can throw this exception and the incorrect error message would be printed out. 
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740996893" expanded>

A variable named `dateTimeToUpdate` or something along the same line would aid in code clarity.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740996976" expanded>

Similar to the regex phrase in Line 41, unsure of what the idea behind the `+` in this regex is achieving. 
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740997265" expanded>

On inspection, the current method of identifying flags might lead to inaccurate parsing of user input. For instance, a user might input `adsftitle/asdf` and the conditional check in line 68 will still pass since it looks at the entire string of user input and does a simple check for whether it contains that flag (i.e. position of flag relative to the entire string is not important in the check). Perhaps someone can help verify this as well.

A possible solution would be to use `update.startsWith(XYZ_FLAG)` instead. However, this might require additional methods like `trim()` to be performed on each `update` string first.

It would also be to use the `retrieveItemAttribute()` method from the inherited `Parser` class. This would further unify and standardize the parsing logic for the program in retrieving attributes and also standardize the flags used. That being said, the `retrieveItemAttribute()` method has to also be updated as the current implementation of it has the same issue as well.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740997446" expanded>

Should the other flag checks be checked using an `else if` block (similar to the `parseUpdateTask` method)? Otherwise, it seems like a user input that contains multiple flags that are not separated by `>` can cause some unexpected behavior with the command.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740997564" expanded>

Same comments as the long one regarding lines 68 to 71.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740997739" expanded>

It looks like this regex phrase replaces all whitespace/consecutive whitespaces from the attribute (containing the index of the member) with an empty string. Is there any difference between this and performing a `trim()` operation on the string? 
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740997887" expanded>

Another check might need to be performed to consider the case if the member is already assigned to the task. 
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r740998034" expanded>

Instead of throwing a `DukeException` here for an `IndexOutOfBoundsExcepton`, catch the `IndexOutOfBoundsException` in the methods (`changeMember()` and `addMember()`) that call it instead? 
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741204508" expanded>

Yea I think that should hopefully fix it.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/187#discussion_r743662509" expanded>

Might want to replace line 43 with this instead to reduce duplicate code since they involve the same method of splitting the response from the user.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/187#discussion_r743690021" expanded>

Maybe it might be better to swap the line breaks and the printing of the member roster to make the format of the messages more consistent with the first prompt for event index from the user (same for the rest of the exceptions as well)?  
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/190#discussion_r744164495" expanded>

I feel like the filtering of events could be refactored into the FindCommand class itself since here is where the process of 'finding' is carried out and no parsing happens here.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/29#discussion_r725682898" expanded>

The backslash is to help escape the apostrophe so what the user actually sees is: 

![image](https://user-images.githubusercontent.com/65809523/136709677-a112d6de-fa51-4075-8636-efb53fb7955c.png)

</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/129#issuecomment-956301545" expanded>

Duplicate of #128 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/159#issuecomment-956334537" expanded>

A possible solution would be to extract the third segment of the user input (the segment where the index of the task/event should be indicated) and use the `Integer.parseInt(thirdSegment)` method instead. 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/154#issuecomment-956334697" expanded>

A possible solution would be to extract the third segment of the user input (the segment where the index of the task/event should be indicated) and use the `Integer.parseInt(thirdSegment)` method instead. 
</panel>

</panel>


<panel type="info" header="### 17. Eugene Chong Zhi Liang `@theeugenechong` (26 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/15#discussion_r721123953" expanded>

Is the size fixed at 10 for now? 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/15#discussion_r721124284" expanded>

Noice 😙
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/29#discussion_r721538410" expanded>

Do you think it is possible to create a method in `Ui` to print out the `ArrayList` of names according to a certain format? (cause `meetings.get(key)` returns an `ArrayList` right?). 
If i'm not wrong, printing it now will just call the `toString()` method for `ArrayList`s.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/35#discussion_r723428478" expanded>

Nice! 🤩
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/40#discussion_r724728962" expanded>

Add a space between operand and '+' operator
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/81#discussion_r734295801" expanded>

😂
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/81#discussion_r734293746" expanded>

Do you think it would be better to introduce a class like `Expense` which contains `Integer` and  `String` attributes so that you just need one `ArrayList&gt;Expense>`? Same goes for the `CashFlow` class too.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/86#discussion_r735064771" expanded>

What do you think of creating `cooperFinanceManager` and all the other managers inside the `ResourcesManager` constructor, so here we just need to call `cooperResourcesManager = new ResourcesManager()` ?

So the inside of the `ResourcesManager` constructor will look something like this:

```
public ResourcesManager() {
    this.cooperFinanceManager = new FinanceManager();
    // other similar statements 
}
```
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/86#discussion_r735065252" expanded>

Yes I think we can change storage to take in `ResourcesManager` then internally we can use getters to access each individual manager
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/93#discussion_r735788355" expanded>

Could MeetingsUi inherit from Ui so you can just call `show()`?
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/130#discussion_r739091692" expanded>

Maybe we can check this in the parser? Not very nice to suddenly put an 'if' here 🤣
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/130#discussion_r739093153" expanded>

Also i think it's fine to just let the error message be printed so that the user knows that the empty input is being 'processed' (hahah idk how to say) 🤣
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/130#discussion_r739198848" expanded>

Ok can!!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/130#discussion_r739245146" expanded>

Oh wait i was thinking could we add a `.trim()` also so if any whitespace is entered, it'll still be considered as empty. What do you think?

</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/139#discussion_r739644558" expanded>

Remember to remove the lines you used for debugging 🤣
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/139#discussion_r739645412" expanded>

Oh no, why are there conflicts now? 😨
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/217#discussion_r744070029" expanded>

Here too!
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/217#discussion_r744070021" expanded>

Typo in JavaDocs here! adapted*
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/219#discussion_r744079092" expanded>

need the line break here or there will be formatting issues 
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/219#discussion_r744082675" expanded>

Hey I'll merge it first, and see how the website looks like
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/220#discussion_r744082863" expanded>

Nice thanks! I didn't realize it was 'Example' LOL 🤣
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/220#discussion_r744082896" expanded>

Did you mean to write 'might' here? 
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/239#discussion_r744229372" expanded>

Rmb to add the line break thing before **Expected output** (i cant add it here cause it wont show) Its the character which looks like &gt; br > without the spaces. Can refer to line 866
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/239#discussion_r744229517" expanded>

This one :D 
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/242#discussion_r744292289" expanded>

HAHAHA you committed your PPP too
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/242#discussion_r744292327" expanded>

I'll just merge it yea?

</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/7#issuecomment-932723602" expanded>

so that I can be onboarded to the system and functions of the interface relevant to me, smoothly.
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/8#issuecomment-932724768" expanded>

may need the help of a `Verifier` class for this
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/18#issuecomment-933440945" expanded>

Yes, I thought about this also. It is like this for now because I coded it out based on how I logically planned it in my notebook. 😂 I think I could add an abstract method (something similar to `execute()` in the `Command` class) which performs the necessary action . So the `hasCorrectRole()` method can be private to `Login`. Thanks for the suggestion! 😊
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/26#issuecomment-933569525" expanded>

Improve OOP design/overall design of verify method
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/36#issuecomment-937412141" expanded>

HAHA, its probably a problem on my PC then 😂
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/50#issuecomment-940633680" expanded>

So we are including it for V1.0?


</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/50#issuecomment-940691479" expanded>

Sure! Sounds good! 💯
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/69#issuecomment-943276543" expanded>

Thanks for changing it! 💯
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/106#issuecomment-952230764" expanded>

Whoa.. whats up with the checks? HAHAHA
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/109#issuecomment-952449167" expanded>

Alright I'll make the changes now! Thanks!
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/109#issuecomment-952471338" expanded>

> Alright I'll make the changes now! Thanks!

**Don't merge yet ah** 😂
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/107#issuecomment-952518261" expanded>

Fixed by #111 
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/108#issuecomment-953734678" expanded>

More things to change:
- Make cOOPer print a message if the year entered is negative
- `MAX_INT` value is shown if FCF is 0, i think can try print a message here too
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/119#issuecomment-953739400" expanded>

Noice! Will merge later when everyone is done! 🥳
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/133#issuecomment-955148655" expanded>

Yep! 👍
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/140#issuecomment-955199481" expanded>

Closed by #132 
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/184#issuecomment-955640605" expanded>

Change the message to ask user to sign in first, create new exception
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/182#issuecomment-955641283" expanded>

Add to UG 
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/181#issuecomment-955641760" expanded>

- State in UG that the numbers (factor) are in the thousands e.g. 10 is 10000
- Give a limit to the max number you can enter
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/181#issuecomment-955641952" expanded>

look for convention to follow, use java library for big nos if needed

</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/179#issuecomment-955642246" expanded>

Change command separators to include a /
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/178#issuecomment-955642384" expanded>

similar to #181 
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/177#issuecomment-955642459" expanded>

similar to #181 
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/176#issuecomment-955642680" expanded>

Update UG (future versions?)
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/175#issuecomment-955642836" expanded>

Throw Negative (for assets) exception
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/173#issuecomment-955643191" expanded>

Similar to #179 
</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/172#issuecomment-955644112" expanded>

- STate in UG that all meetings scheduled will involve yourself
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/171#issuecomment-955644221" expanded>

- Throw exception for negative number added
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/170#issuecomment-955644313" expanded>

Add hyperlink between schedule and meetings section
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/169#issuecomment-955644414" expanded>

Check that the time entered is only in hours
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/168#issuecomment-955644448" expanded>

similar to #179 
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/167#issuecomment-955644507" expanded>

Throw exception if years is &gt;= 0
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/166#issuecomment-955644552" expanded>

Fixed
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/165#issuecomment-955644794" expanded>

https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/164#issuecomment-955644951" expanded>

Maybe state in future version
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/163#issuecomment-955645115" expanded>

Similar to #181 
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/162#issuecomment-955645208" expanded>

Better error message
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/161#issuecomment-955645266" expanded>

Similar to #178 
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/160#issuecomment-955645500" expanded>

Update UG in general
</panel>

<panel  header="**66 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/159#issuecomment-955645533" expanded>

Similar to #171 
</panel>

<panel  header="**67 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/158#issuecomment-955645611" expanded>

Similar to #169
</panel>

<panel  header="**68 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/157#issuecomment-955645864" expanded>

Update the exception thrown at parser
</panel>

<panel  header="**69 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/155#issuecomment-955646673" expanded>

Add the tip to UG 
</panel>

<panel  header="**70 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/149#issuecomment-955647366" expanded>

Add this feature to UG 
</panel>

<panel  header="**71 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/149#issuecomment-955647388" expanded>

Fix the punctuation
</panel>

<panel  header="**72 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/147#issuecomment-955647436" expanded>

Similar to #154 
</panel>

<panel  header="**73 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/145#issuecomment-955647517" expanded>

Similar to #154 
</panel>

<panel  header="**74 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/142#issuecomment-955647657" expanded>

Same as #154 
</panel>

<panel  header="**75 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/141#issuecomment-955647713" expanded>

Similar to #154 
</panel>

<panel  header="**76 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/185#issuecomment-955652900" expanded>

Okay! I'll just update it to print something like "You are at at the sign-in section" +  the bottom two lines
</panel>

<panel  header="**77 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/195#issuecomment-957247987" expanded>

xD

</panel>

<panel  header="**78 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/200#issuecomment-959001825" expanded>

HAHAHA go to file changes then its under review changes i think
</panel>

<panel  header="**79 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/212#issuecomment-961073309" expanded>

Ok ready to merge now!
</panel>

<panel  header="**80 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/215#issuecomment-961780519" expanded>

plus some refactoring and javadocs
</panel>

<panel  header="**81 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/222#issuecomment-962415752" expanded>

Can close the prev one or just merge that one? #221 
</panel>

<panel  header="**82 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/222#issuecomment-962415992" expanded>

Okay, I'll merge #218, #220  then this one!
</panel>

<panel  header="**83 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/237#issuecomment-962565410" expanded>

Is this ready to merge yet? Or will you still be adding on for #205 
</panel>

<panel  header="**84 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/237#issuecomment-962574524" expanded>

Okie! Noice
</panel>

<panel  header="**85 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/244#issuecomment-962784076" expanded>

Ignore the above comment, I'll make a new PR for this
</panel>

</panel>


<panel type="info" header="### 18. Tan Li Xin `@t-l-xin` (26 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/25#discussion_r725745797" expanded>

Edit the following test names to follow the test method format such as methodBeingTested_inputGiven_expectedOutcome()
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r725747202" expanded>

Test methods may follow the naming format e.g. methodBeingTested_inputGiven_expectedOutcome().
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/41#discussion_r728813976" expanded>

i assume it is a typo line 52 throwsItemNotExitException and line 54 ItemNotExistException
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/61#discussion_r730344210" expanded>

I think i get why you want to catch RunTimeException in this case, since the sold itemContainer name is always fixed and that an exception would only occur if there is any other exception, other that illegal argument exception  in creating the itemcontainer, but then i am not sure if it would comply with the coding practices.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/61#discussion_r730350256" expanded>

Yep, i think Exception would be better
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/104#discussion_r737019090" expanded>

Is it possible to return the message containing the details of the items instead? or the string info?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/104#discussion_r737019318" expanded>

Is it possible to return the entire list string instead of the complete message?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/242#discussion_r744117000" expanded>

maybe change the function exception name to the same one that is thrown
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/242#discussion_r744117072" expanded>

complete the throw exception in test function naming
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/242#discussion_r744117232" expanded>

rename the function name exception thrown to the same one that is thrown when tested
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/244#discussion_r744192989" expanded>

Add back the generate markup price link
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/245#discussion_r744193102" expanded>

function name exception thrown can match the actual exception thrown name
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/245#discussion_r744193227" expanded>

exception name in the function can follow throwsItemNotExistCommandException()
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/242#discussion_r744193290" expanded>

change the test function exception thrown name
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/262#discussion_r744279717" expanded>

not SearchCommand?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410140" expanded>

rename to CliverShelf
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410581" expanded>

rename CliverShelf
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410675" expanded>

rename CliverShelf
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410712" expanded>

rename CliverShelf


</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410753" expanded>

rename CliverShelf


</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410857" expanded>

rename CliverShelf


</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410896" expanded>

rename CliverShelf


</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744410997" expanded>

rename CliverShelf


</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/273#discussion_r744411182" expanded>

rename CliverShelf


</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/269#discussion_r744411776" expanded>

rename CliverShelf


</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/269#discussion_r744411852" expanded>

rename CliverShelf


</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/22#discussion_r725036014" expanded>

Noted, will add more detail.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/43#discussion_r728886521" expanded>

Noted, will discuss more in the later parts.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/43#discussion_r728889935" expanded>

Noted
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/43#discussion_r728890002" expanded>

Noted
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/101#discussion_r736281543" expanded>

yep placeholder
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/101#discussion_r736282814" expanded>

placeholder also as the DeleteCommand still takes in itemname
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/101#discussion_r736285909" expanded>

Noted
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/112#discussion_r738120144" expanded>

but if put in the UI hard to know which Command it came from
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/112#discussion_r738169035" expanded>

I moved the Patterns back to Parser since i following AB-2 Parser
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/112#discussion_r738170906" expanded>

The exception not used after i went to check again, previously added it as some CommandTest did not pass, after i resolved the issues i didnt remove, so i have removed it as of the most recent commit.
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742547765" expanded>

okai
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742547948" expanded>

noted
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742616406" expanded>

Can
</panel>

<panel  header="**40 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/197#discussion_r742791178" expanded>

Thanks for pointing this out, missed this cos wasn't returning any error
</panel>

<panel  header="**41 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/233#discussion_r744061034" expanded>

it will look like this which could be more confusing
![refactor_shelfname regex](https://user-images.githubusercontent.com/79501457/140596014-07f12ecd-7a70-4f8f-98e0-8788acc3a634.JPG)

I don't think is suitable to make it a static constant variable
</panel>

<panel  header="**42 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/265#discussion_r744279514" expanded>

oops, changed it
</panel>

<panel  header="**43 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/275#discussion_r744614456" expanded>

noted
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#issuecomment-939322569" expanded>

Agreed, the Javadocs need more description
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#issuecomment-939478475" expanded>

Looks good to merge
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/146#issuecomment-958688622" expanded>

Checked that the command works, could be because of the chinese unicode character, will include in the User Guide & warnings during program run.
<img width="474" alt="no issues" src="https://user-images.githubusercontent.com/79501457/140018812-bad57e5c-38f6-4410-b34a-9bd1242afb9e.PNG">

</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/162#issuecomment-958700088" expanded>

The person type the command wrong.

person type `report t/items ym/2021-9 ym/2021-10`

`ym/2021-9` should be typed as `ym/2021-09` to be valid

YEAR-MONTH format as follows:

YYYY-MM

This information was already mentioned in the user guide.
<img width="765" alt="report format" src="https://user-images.githubusercontent.com/79501457/140021074-e32f0e1f-031a-4e03-8b89-17fad5541d67.PNG">


</panel>

</panel>


<panel type="info" header="### 19. Lee An Sheng `@AnShengLee` (26 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/14#discussion_r723861682" expanded>

Should actually be `incomeIndex`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724215788" expanded>

Should actually have an offsetIndexForArray() function for readability.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725072947" expanded>

I believe this is done to increase readability. I suggested this earlier. Maybe can call it offsetIndexForArray().
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/45#discussion_r727013461" expanded>

Maybe can have a separate function that does expenseIndex - 1 ie offsetIndexForArray() to increase readability.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/45#discussion_r727107741" expanded>

That is actually a good idea @kyun99 we should do that.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727998471" expanded>

I believe this line should be kept. Else we cannot call expenses.isEmpty(). This is one reason why the checks are not passed.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r728000354" expanded>

The result of this issue: https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49/files#r727998471 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/56#discussion_r730261637" expanded>

@kyun99 do take note of this. Can change later in the future.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737044078" expanded>

Feel like changing it to isBaseYear would be better in terms of readability.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737044815" expanded>

The format should be set_curr c/CURRENCY
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737048332" expanded>

I believe you need a space between the 2 parameters.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737048626" expanded>

It is weird to expect a from parameter.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737215314" expanded>

The name of this function seems weird.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737250617" expanded>

Does FinancialTracker need this variable?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740451155" expanded>

```suggestion
     * Adds an Expense object into the expenses ArrayList of FinancialTracker.
```
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740452529" expanded>

```suggestion
     * Adds an Income object into the income ArrayList of FinancialTracker.
```
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453098" expanded>

Nice refactoring!
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453223" expanded>

```suggestion
     * Removes an expense entry based on its index.
```
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453388" expanded>

```suggestion
     * Removes an income entry based on its index.
```
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453517" expanded>

```suggestion
     * Returns an ArrayList called expenses from FinancialTracker.
```
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453653" expanded>

```suggestion
     * @return Returns ArrayList with only expense entries inside.
```
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453766" expanded>

```suggestion
     * Returns an ArrayList called incomes from FinancialTracker.
```
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740453884" expanded>

```suggestion
     * @return Returns ArrayList with only income entries inside.
```
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740797723" expanded>

Nice add
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740797830" expanded>

Nice add
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740799198" expanded>

Might want to change this later
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/32#discussion_r726092091" expanded>

I believe it would be nice to separate them as we still have to check if the given index is in the expense list index range or in the income list index range.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/64#discussion_r730371259" expanded>

I feel that it is fine currently. I am also not too sure how to implement your method, maybe you can try first?
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/64#discussion_r730371285" expanded>

I feel that it is fine currently. I am also not too sure how to implement your method, maybe you can try first?
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/211#discussion_r741151620" expanded>

Alright we shall look into that soon.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/230#discussion_r743710900" expanded>

Will take note in the later commits
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/23#issuecomment-937459205" expanded>

Thanks for changing amounts to type `double` in Parser class. Looks good to merge. 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/25#issuecomment-937553610" expanded>

Good JUnit tests. Overall, looks good to merge.
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#issuecomment-938699295" expanded>

I believe you should work on this functionality on a different branch and not on Nirmaleshwar-AboutUs. This is so that your work space will be less confusing.
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/32#issuecomment-939727786" expanded>

InvalidCommand and Ui class were edited so that warning messages can be printed out to user. @jonathanlkw and @KZQ1999 can take a look to see if it is alright.
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/35#issuecomment-940042141" expanded>

Skeleton for our user guide v1.0
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/56#issuecomment-944913211" expanded>

@kyun99 I have resolved the merge conflict but currently Parser class is calling the Expense and Income constructor which is different now. I will fix it.
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/63#issuecomment-945050427" expanded>

Looks good thanks for fixing the merge conflicts!
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/64#issuecomment-945053049" expanded>

@kyun99 and @KZQ1999 Do remember to add some JUnit tests for the new functions you have created recently.
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/67#issuecomment-945928039" expanded>

Seems ok. We will implement a new Command class and update Parser so that it can integrate nicely and we can test.
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/76#issuecomment-946388217" expanded>

The description of StonksXD is not the latest version.
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/90#issuecomment-947815794" expanded>

Simple assertions maybe not necessary in the subsequent versions. 
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/92#issuecomment-948620943" expanded>

The naming of the test functions should follow what was taught.
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/94#issuecomment-950141122" expanded>

Yup I believe is suppose to be budget settings.
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#issuecomment-952691660" expanded>

Going to merge first any small issues we can fix by v2.1
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/196#issuecomment-955676067" expanded>

Now, income, expense and budget should not be able to accept NaN and Infinity as inputs for amount.
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/167#issuecomment-955677642" expanded>

Fixing along with #155 
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/192#issuecomment-955691831" expanded>

Same as #149. I have fixed it.
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/169#issuecomment-955750972" expanded>

`It is better to ask the user to backup the file or make a copy` I will take note of this. However, I have no idea what exactly you did to cause everything to be wiped out. I believe the program only does not load corrupted entries. Valid entries are still loaded.
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/170#issuecomment-955765469" expanded>

Good catch will fix.
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/173#issuecomment-955765509" expanded>

Good catch will fix.
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/152#issuecomment-955954415" expanded>

I will finish up the fix for this.
</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/186#issuecomment-955958001" expanded>

Thank you for your feedback we will look into it.
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/157#issuecomment-956288053" expanded>

Acknowledged will fix it thanks.
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/188#issuecomment-956395455" expanded>

Duplicate of #159 
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/182#issuecomment-956396077" expanded>

Duplicate of #175 
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/176#issuecomment-956396940" expanded>

Duplicate of #165 
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/193#issuecomment-956397172" expanded>

Duplicate of #165
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/191#issuecomment-956398127" expanded>

Duplicate of #187
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/251#issuecomment-962569006" expanded>

Mistake in making PR
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/119#issuecomment-962922158" expanded>

Got it thank you!
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/147#issuecomment-962991563" expanded>

Thanks for the feedback TA. Will take note.
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/293#issuecomment-963164777" expanded>

Nice choice of pictures!
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/294#issuecomment-963203868" expanded>

Fix bug where long budget amount cannot be loaded.
</panel>

</panel>


<panel type="info" header="### 20. NEO KEN HONG, KELVIN `@kelvneo` (25 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/53#discussion_r720838722" expanded>

Magic literals
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/53#discussion_r720838880" expanded>

Can this be a static final variable?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/53#discussion_r720839025" expanded>

Redundant variable?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722991832" expanded>

I think we can remove the `abstract` component of `Command` class if there is not a need for arguments in future refactoring.

Todo #52 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/60#discussion_r723243725" expanded>

Maybe you can move this to the respective Command classes instead?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723515885" expanded>

Whoops, I meant to remove the abstract from only the `parseArguments` method. Not the whole file.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724072222" expanded>

Why isn't this throwing errors instead?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/71#discussion_r724721737" expanded>

Don't use `{N}`, but instead use a number
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/71#discussion_r724721806" expanded>

Likewise for here
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/71#discussion_r724722155" expanded>

Follow the program output
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/78#discussion_r726703590" expanded>

You might want to either separate them or put a new line
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/78#discussion_r726703705" expanded>

Colon after the itemNumber
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/78#discussion_r726703821" expanded>

Colon after itemNumber
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/81#discussion_r726861894" expanded>

If assertions are disabled, this will still log info.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/99#discussion_r732443287" expanded>

Add anchor brackets after `ViewCommand` and `DeleteCommand` to fix minor syntax issue.
Like `ViewCommand&gt;>(Link.class)`.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/99#discussion_r732443403" expanded>

Similar for this
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/112#discussion_r734250484" expanded>

Singlish used here, perhaps rephrase the sentence?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114#discussion_r734490294" expanded>

i think it should be a paragraph.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114#discussion_r734490386" expanded>

same here
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/114#discussion_r734492291" expanded>

Instead of argument, try changing it to "The value is optional, and including it may provide different results" and "The value is required for the command to work properly."
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/113#discussion_r734495275" expanded>

Try researching on `filter()` function, then running `forEach()`.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/113#discussion_r734496723" expanded>

No star importing
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/115#discussion_r734933540" expanded>

why is this a checkbox
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/143#discussion_r739816016" expanded>

Typo
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/143#discussion_r739816109" expanded>

Is it possible to expose these methods as public static methods? It might be useful to prevent repeating code.
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/14#issuecomment-932716639" expanded>

Done at commit: 61953e0a7471b89ae3ff0cf2df33bf81821a19a3

</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/65#issuecomment-937693915" expanded>

See #64
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/74#issuecomment-939854933" expanded>

The language in the Javadocs are not consistent with the language currently present in the project. I think we may have to discuss how we can resolve this as this may impede with the idea of "one person typing" ideology. 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/65#issuecomment-940615087" expanded>

See #79 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/52#issuecomment-940988118" expanded>

See #75 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/65#issuecomment-941008698" expanded>

All done!
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/30#issuecomment-947766616" expanded>

Duplicate issue #23 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/54#issuecomment-955237851" expanded>

Linked Issue: #137 
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/165#issuecomment-955540537" expanded>

Duplicate of #162 
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/167#issuecomment-955570097" expanded>

Fixed with #144 
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/147#issuecomment-955661963" expanded>

Wrong team
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/145#issuecomment-955661986" expanded>

Wrong team
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/139#issuecomment-955708085" expanded>

Thanks! 
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/166#issuecomment-955708843" expanded>

We have taken note of the feedback, but we will not be implementing the feature for upcoming release.
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/173#issuecomment-955708877" expanded>

We have taken note of the feedback, but we will not be implementing the feature for upcoming release.
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/178#issuecomment-955708992" expanded>

We have taken note of the feedback, but we will not be implementing the feature for upcoming release.
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/176#issuecomment-955709079" expanded>

We have taken note of the feedback, but we will not be implementing the feature for upcoming release.
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/182#issuecomment-955709326" expanded>

Related: #54 
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/181#issuecomment-955709341" expanded>

Related: #54 
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/171#issuecomment-955974398" expanded>

Related: #54
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/159#issuecomment-955974458" expanded>

Related: #54
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/148#issuecomment-955974609" expanded>

Related: #54
</panel>

</panel>


<panel type="info" header="### 21. Sim Tian Boon `@Kair0s3` (23 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/34#discussion_r722164894" expanded>

Maybe we could have a spacing before the comment on line 10?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/37#discussion_r722181904" expanded>

I think the whitespace here for line 17 of constructor isn't necessary since it doesn't affect readability here?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r722892322" expanded>

Similarly, I feel that the isExit() here is unnecessary. And if isExit() would to be used, it would seem more appropriate to be done just on the child class (ExitCommand.java).
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r722897811" expanded>

I feel that the suggestion above would make the flow more clear cut, checking the `instanceof` to see if can break the loop (that way won't have another round of looping to check isExit at line 35 again).
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/39#discussion_r722899105" expanded>

Alternatively, you could also try implementing the exit logic in the "run" of ExitCommand?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r723843398" expanded>

Should there be a spacing in front of the '1'?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/63#discussion_r724790081" expanded>

Maybe we could add in a dummy string [] arguments, that way others can simply continue from this state?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/119#discussion_r727173810" expanded>

Maybe an indent here would would fix the display structure for "Exit" to appear under "Features"?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/148#discussion_r730277610" expanded>

Maybe this line could be broken down into smaller steps? (similarly with the other method)
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/156#discussion_r731160765" expanded>

Maybe can add the word "the" infront of the module so that it is more standardized for the javadocs.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r731840377" expanded>

Maybe the checking if the parameters is empty and the returning null, should be in this guard clause instead?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732747807" expanded>

Maybe "list of available modules" would be less ambiguous?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/166#discussion_r732752843" expanded>

Maybe "selects" over "select" to standardize for our action words in the beginning of the javadoc sentence.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734414670" expanded>

Maybe "The list of..." for the param would be sufficient?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/183#discussion_r734414942" expanded>

Similarly with this part, just a minor suggestion
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/190#discussion_r734701561" expanded>

Looks good to me, just a minor suggestion to add "The" in front, so that it becomes "The name..."
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/196#discussion_r734702686" expanded>

Similarly, same suggestion as the previous PR.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/192#discussion_r734703607" expanded>

Similarly, the same suggestion as the other 2 prs
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/194#discussion_r734704166" expanded>

Same minor suggestions as previous 3 PRs
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/239#discussion_r737088492" expanded>

Other than this line that checkStyle flagged out, the rest looks good to me
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/240#discussion_r737092416" expanded>

Maybe "... the list of message for the recipe files..." instead of "list of messages of ...".
And for the @param, maybe "The list of messages for the failed recipe files." would seem better? Or just copying down the above portion (The list...that failed to load) is fine too.

*Sorry, for this 2 suggested change, I was probably half deded at that time*
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/275#discussion_r740165698" expanded>

Looks good overall, just a minor suggestion. Perhaps, this line can be broken down?
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/281#discussion_r742092614" expanded>

Good use of abstraction to reduce arrow head code in the `run()` method
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724051970" expanded>

I will be making some changes to this, for 2 cases,
1. When space is entered -&gt; tokens.length is 0
2. When blank (enter immediately) -&gt; tokens.length is 1 (just that the tokens[0] is "" )
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/53#discussion_r724065094" expanded>

I was thinking of leaving it there first, I added a "special" message for those intending to "bug-test" with space haha.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734988577" expanded>

I think previously @rizemon was saying we only instantiate the folders only before they write/read? If not I can revert and leave it as public.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/158#discussion_r734991495" expanded>

Ouhh yea that make sense, then in that case I could just change it to public in this case.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r736042060" expanded>

For arrays, there is no isEmpty() function
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r736046374" expanded>

I am now doing a try catch to actually continue with the reading of other recipe files, but that would mean that the exceptions will not be thrown back into the decodex side. Currently, I don't see a way to continue the loop and throw the exception back to the front, since (continue; then throw exception, results in exception not being reachable vs throw exception back to decodex; then continue results in continue being a "dead"/unreachable code)
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#discussion_r736050213" expanded>

Alternatively, if I were to want to print the error and continue, I could use ui to print out the error on Storage side before continuing to iterate to next file.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/274#discussion_r740106060" expanded>

That is literally `too many of too many`, but yes, will make changes to a more general exception.
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/280#discussion_r742125873" expanded>

The following commits itself is a spoiler 😂 

*IMPT- If you see this, please take precautions before viewing the following commits, they are literally spoilers for the future of `Decodex`*
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744470522" expanded>

Fixed but an additional bullet point is added as, in between the code blocks if only one tabbed indent is used, it appears as code block (the indented line)
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/63#issuecomment-938480234" expanded>

LGTM
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/14#issuecomment-939289432" expanded>

This one is done on the Parser side instead to call crafting the select command.
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/102#issuecomment-939864499" expanded>

LG
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/105#issuecomment-940508259" expanded>

LG
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/117#issuecomment-941034196" expanded>

The conflicts can just resolve and remove my old one
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/115#issuecomment-941044138" expanded>

This has been fixed as additional changes in PR #113 
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/178#issuecomment-948226534" expanded>

LGTM
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/208#issuecomment-951073253" expanded>

NOTE - Im going sleep now, legit want toh alr, will respond to the reviews tmr morning
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/141#issuecomment-951510163" expanded>

Resolved as of #158
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/288#issuecomment-961174457" expanded>

> LGTM!

@SeenFang can also do the additional throws in JavaDocs as suggest by #214 
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/299#issuecomment-961683910" expanded>

Broken PR - IGNORE
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/314#issuecomment-962436360" expanded>

> LGTM

LG-ed
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/319#issuecomment-962586068" expanded>

Will fix this later after DG finish up
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/319#issuecomment-962612154" expanded>

Update - I have no idea why is the test not working, locally it is working fine
![image](https://user-images.githubusercontent.com/50107219/140647146-8a9d1d1f-0064-4200-9e1f-c5e9c8a2581c.png)

*Note that the error message appearing is normal since, my current recipe directory has some existing invalid files alr - but it should not affect the JUnit since the target file in the JUnit test is `testfile1.txt`. What is more weird from my point of view is the null pointer exception at `line:123` suggesting that maybe gradle test is unable list the files (on `line:120`) hence, that line where it is retrieving all files in the `recipe` directory fails and returns null instead.

Below is an image for reference

![image](https://user-images.githubusercontent.com/50107219/140647391-1887f995-01e3-4922-a93e-e6008accd3a1.png)

EDIT - FIXED
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/186#issuecomment-962624086" expanded>

That's a wrap for v2.1 issues 
🚀 
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/319#issuecomment-962648406" expanded>

Fix for the previous issue, was that if the recipe directory yet to exist, then the list file method results in null and hence, null pointer. So the fix is to have a BeforeAll, AfterAll to check if it exist in the first place, then restore the original state (eg. if no recipe directory initially, then remove the created recipe directory after all test)
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/issues/333#issuecomment-962681126" expanded>

Only printSuccess and printError are missing parameters
</panel>

</panel>


<panel type="info" header="### 22. TAN JUEN WOO `@Woolicious98` (21 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722989814" expanded>

Perhaps can remove the return here. 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722992041" expanded>

Perhaps the COMAND_SCHEDULE could be renamed as COMMAND_LINK or the LinkCommand to ScheduleCommand. I think the ScheduleCommand suits better as the command itself is `schedules`.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722993314" expanded>

Maybe the totalArg could be a constant instead.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722994430" expanded>

Maybe the error messages can be added to the common Messages class. I think there is already a message regarding this error.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722995918" expanded>

Yup, the findArguments, isValidArguments and isArrayEmpty could be added to common CommonFormat class.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722996704" expanded>

This one depends on the consistency, to use schedules or schedule, as of now i also not sure cause i changed notes to note.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722999316" expanded>

Maybe this could be consistent with ScheduleCommand.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723000400" expanded>

Perhaps this could be called link instead.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724097565" expanded>

Maybe this no need to but the contentNumber &gt;= 0 as it is already check in isValidNumber.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724102874" expanded>

This I not very sure at where we would want to detect a invalid number. At first I was thinking of handling it in the ContentManager, but handling here would do as well.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726758121" expanded>

Maybe AddNoteCommand no need exception such as InvalidLink, InvalidDay, etc? Probably can check from parseArguments() method instead.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726946086" expanded>

The assert here is not needed I think. There is still a case of size 0 when no arguments with the 2 double quotes is found. The checking was done at the bottom.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726946809" expanded>

Same with the AddNoteCommand
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/84#discussion_r727112076" expanded>

Maybe it is missing a full stop at the end of endings.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/84#discussion_r727112545" expanded>

Maybe it should be initializes?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/84#discussion_r727112871" expanded>

I like how you do the exception message, it is more meaningful.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/87#discussion_r727127084" expanded>

May need to change all to writes
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/101#discussion_r732878955" expanded>

I think its missing the full stop "." at the end for the comments.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102#discussion_r733249780" expanded>

Perhaps this should be private constructor if QuestionCommandParser is a singleton class
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/105#discussion_r733696340" expanded>

I am not so sure about the limitations of puml, but the activation bar for the finish entity should be a lifeline instead?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/105#discussion_r733738912" expanded>

yeah i think, this should start with the TimetableCommand.execute then it tries to get the stringbuilder, timetable, alternate path then stringbuilder.append then ui print, then return commandresult
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/81#discussion_r726902941" expanded>

ohh okay i know what to do
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/95#discussion_r732877858" expanded>

done
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/143#discussion_r739812520" expanded>

okay done!
</panel>

</panel>


<panel type="info" header="### 23. Roycius Lim Yuanwei `@Roycius` (21 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/28#discussion_r724884609" expanded>

Just to clarify, what is the reason that this commented out code is kept instead of straight up removing it?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725460490" expanded>

Missing newline at end of file.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725460516" expanded>

Same as the above
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725460579" expanded>

Same as the above
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/64#discussion_r730515280" expanded>

Just for the sake of consistency, I suggest that "time" as a better word than "clock" for the method and variable naming, since the class is called "TimeUtil".
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/74#discussion_r732329657" expanded>

After UI returns here, command and newTask should be scheduled to be destroyed. I suggest that "crosses" be added to show the end of their lifelines.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/80#discussion_r736090376" expanded>

These errors seem to already be handled before calling this method. The assert statement here is to define assumptions made when calling this method.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/85#discussion_r736350361" expanded>

Missing space between "-" and "help"
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/95#discussion_r738239356" expanded>

"input" instead of "inputted" may fit here better.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/95#discussion_r738246250" expanded>

Suggested: Launch the app once on the new computer and exit. Afterwards, replace the `data` folder in the Duke home folder of your new computer with that of your previous computer.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/95#discussion_r738247437" expanded>

"displays the grade" instead of "displays grade"
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/166#discussion_r740298799" expanded>

Perhaps instead of putting this here, you could put it in the `AddCommandParser` class? Since it only really affects the adding of items for now.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/170#discussion_r742553422" expanded>

Isn't this the overview of your contributions rather than that of the project?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/170#discussion_r742643292" expanded>

Right. Sorry for the confusion.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/178#discussion_r744233213" expanded>

Maybe you could add these shortcuts to the table of contents too?
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/178#discussion_r744233329" expanded>

Remember to remove this from the table of contents too.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/178#discussion_r744234017" expanded>

Perhaps you could add this message to the `Message` class and call it here as `throw new ParseException(Message.INVALID_XXX)` for consistency?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/184#discussion_r744373082" expanded>

Just for clarification. May I know why this is a normal class rather than an ENUM?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/184#discussion_r744372697" expanded>

Since we are not using these we perhaps should remove them from here to avoid confusion for other developers.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/184#discussion_r744377580" expanded>

Here is a link to a post regarding how to do it. [Link](https://stackoverflow.com/questions/11445173/java-how-to-add-special-character-in-enum/11445245). But for readability and simplicity sake it is probably better to leave it as how you have done.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/195#discussion_r744800157" expanded>

yes it is
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721455298" expanded>

Thank you for all the suggestions! I have made the necessary adjustments to all the issues.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/24#discussion_r721470385" expanded>

Thank you for the suggestion once again, I have made the changes as per your suggestion.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725432778" expanded>

When the `-i` flag is not used, the condition `params.length > 2` will not be satisfied, so the exception will not be thrown.
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725433136" expanded>

Yes, this is because text-ui-test does not create any file yet. So there will always be no file to retrieve any data from.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725434624" expanded>

I realized that there is no need for this extra constructor since we could just pass information as an empty string when it is not given.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725436294" expanded>

Yes, I did the testing manually through Intellij.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725436661" expanded>

Good point. I will change it to `params.length == 3`.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/61#discussion_r730243300" expanded>

Good point! I will try to make them public constants in `Storage.java`.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/78#discussion_r734954676" expanded>

Thanks, I missed out on them. Fixed.
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/42#issuecomment-950132710" expanded>

Help command has been implemented but does not include functions not yet added as of now. Issue to be closed when it has the instructions of all v2.0 features.
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/98#issuecomment-954485178" expanded>

Fixed
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/115#issuecomment-955617563" expanded>

Sorry, it seems like I may have misinterpret the issue. Will revert that commit.
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/164#issuecomment-955950099" expanded>

Hmm makes sense for simplicity sake. Go ahead and merge then.
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/177#issuecomment-962445664" expanded>

![image](https://user-images.githubusercontent.com/70126260/140609954-6868fb58-999d-4bd3-8d8e-8b05cf8b7ef2.png)

Yep, but i received this email.
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/185#issuecomment-962864204" expanded>

I have fixed this while updating my profile picture in PR #187 
</panel>

</panel>


<panel type="info" header="### 24. Louis `@LouisLouis19` (21 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/50#discussion_r720647035" expanded>

might consider using a constant? 
Just to ensure consistency with the opening message
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/50#discussion_r720647357" expanded>

might consider removing whitespace? 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/50#discussion_r720647533" expanded>

please add an empty line to ensure consistency with the other classes
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/50#discussion_r720647919" expanded>

shall we convert all messages to constants to ensure consistency with the Ui class?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/63#discussion_r723974416" expanded>

ok, get to differentiate now!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/63#discussion_r723974879" expanded>

well done!
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730776898" expanded>

Could consider refactoring the invalid argument format message to Messages.java
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730780392" expanded>

Could consider refactoring this to Messages.java
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730781387" expanded>

You didn't make these changes, but we could consider using constants for these messages :)
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730782452" expanded>

I guess we could consider moving this to CommonFormat.java
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730784284" expanded>

Could consider using a constant for this and refactor it to CommonFormat.java
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730786936" expanded>

Could consider using a constant and refactor this to Messages.java
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730787619" expanded>

I guess we could consider moving this to CommonFormat.java
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730787799" expanded>

Could consider using a constant and move it to Messages.java
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730788151" expanded>

Could consider using a constant and refactor this to CommonFormat.java
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730788776" expanded>

Could consider using a constant and refactor this to CommonFormat.java
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r730789014" expanded>

Could consider using a constant and refactor this to Messages.java
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r731435543" expanded>

okay, that's also fine!
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r731435889" expanded>

good use of assertion!
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/125#discussion_r735141736" expanded>

Good Updates
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/184#discussion_r739971377" expanded>

Well done! Looks good!
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723314996" expanded>

agree, addressed this naming issue!
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723317933" expanded>

okay, addressed this issue!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723320552" expanded>

to make it consistent with your "note", I changed schedules to schedule
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723333534" expanded>

changed this naming convention!
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723344223" expanded>

okay, fixed this issue!
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723354268" expanded>

okay, removed!
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723437673" expanded>

okay, fixed this!
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r723531367" expanded>

okay, got it fixed!
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724084153" expanded>

fixed this bug!
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724084243" expanded>

also fixed this issue for notes!
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726724375" expanded>

Thanks for the comment! I think I can try use the logger instead of creating all these new exceptions, what do you think?
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726859440" expanded>

Fixed this Issue!
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726859605" expanded>

fixed this issue!
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726956329" expanded>

okay addressed this!
</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726957958" expanded>

okay, fixed both!

</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/101#discussion_r732920184" expanded>

okay removed!

</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/119#discussion_r734995538" expanded>

okay! Fixed this

</panel>

</panel>


<panel type="info" header="### 25. TAY ZHENG YAO, SCHUYLER `@3m0W33D` (20 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/7#discussion_r719028372" expanded>

Could you help me to update my Name to `Schuyler`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/53#discussion_r720839054" expanded>

Regarding the format how should we choose to format this?
For mandatory arguments - `&gt;args>`
For optional - `{args}`
?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/53#discussion_r720839389" expanded>

Would need to update modifier for standards,
`public static final` 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722385590" expanded>

Might want to consider localDateTime. 
Given the specific format it will be able to parse the string into a date time format
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/59#discussion_r722388700" expanded>

These are similar to @Woolicious98 function may want to considering abstracting it to prevent double coding the same function.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724117006" expanded>

U dont have to initialize the nusModule and Ui its not used here
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/64#discussion_r724118257" expanded>

This is a design choice but I think it would be better remain consistent with what woo coded. So parsing error should be handled under the `parseArguments`. Data validation should be handled in execute.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726713157" expanded>

Need to rethink the design of these exceptions because there would not be a purpose in having so many exceptions if they did the same thing
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/80#discussion_r726913196" expanded>

A specific exception should be caught here while a general exception works it is not recommended by coding standards
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102#discussion_r732812849" expanded>

Consider changing the Tweaker to Modifier
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102#discussion_r732813801" expanded>

????? Are we tracking the duration they take to answer each question?
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102#discussion_r732814832" expanded>

Consider regex
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102#discussion_r732817157" expanded>

Consider extracting the out the Arguments to the function call, this could make it clearer
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/102#discussion_r732818187" expanded>

Consider creating a factory to generate a new GameEnvironment
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/95#discussion_r732822555" expanded>

Please check my initialization of a singleton
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/101#discussion_r732810401" expanded>

Might want to consider changing the static function to non static, as there is no reason to keep then static
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/101#discussion_r732808350" expanded>

The index should be private, also is static needed here?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/101#discussion_r732900027" expanded>

Please remove the static methods
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/119#discussion_r734985844" expanded>

Maybe a change for consistency, because I think me and kelvin put our diagram before the explaination
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/143#discussion_r739809474" expanded>

Maybe replace this is a filter? and a after foreach? Since the try catch is localized?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/93#discussion_r731089555" expanded>

As these are logging message I think we can keep them as it is because the rest of our logging messages are generally in left as strings
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/pull/56#issuecomment-933560881" expanded>

LGTM
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/163#issuecomment-955541557" expanded>

This bug is rejected because it is not within the scope of the project and we do not intend to sanitize according to nusMods.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/160#issuecomment-955545569" expanded>

This is not a bug but rather requested feature, which we do not intend to implement.
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/162#issuecomment-955547295" expanded>

Update user guide regarding the specification of only managing via hours
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/168#issuecomment-955573269" expanded>

Update in UG to specify the type of links accept.
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/149#issuecomment-956019603" expanded>

Fix in #144 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-2/tp/issues/151#issuecomment-962607169" expanded>

Issue was because of the edits done to json file were not validated.
</panel>

</panel>


<panel type="info" header="### 26. Tan Le Yi `@tlyi` (20 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r724728675" expanded>

Would it be better to name this method differently from the other add method below? Since they would be parsed differently as well, I think it might be better to name them differently as there is no need to overload this method, and it is a bit confusing currently.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r724754503" expanded>

Ohh that makes sense! I think I will be keeping this one, but yea we can keep both and remove the redundant one once we merge! Thanks for clarifying 👍  
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r724765112" expanded>

I think that we could use a `double` type for `height` and `weight` instead to allow for more precise numbers! 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r724766178" expanded>

Remember to add JavaDoc for this class! 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r724772617" expanded>

Oops forgot to mention previously, remember to add JavaDoc for classes! 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r724767510" expanded>

Very cute design for logo!! Thanks 👍 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r724769133" expanded>

Woah the progress bar is very cool! But perhaps the methods can be named better, e.g. `getPercentage()` -&gt; `getPercentageForCalorieProgress()`, as it is hard to tell now from the names what they are meant to do. 
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r724772996" expanded>

Remember to add JavaDoc for classes!
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r724778339" expanded>

Perhaps it would be good to have a method that takes in variable number of String arguments and prints each of them on a new line, i.e.`printMessages(String... lines)`, since we can reuse this method many times throughout the app. This block of code can then be easily condensed into a single line.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725628228" expanded>

Agreed, except that instead of passing it to UI as an ArrayList, we could format the list of exercises into a String here, and pass the String out. 
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725628603" expanded>

Is it possible to format the list into a String to be returned from this method? This would help to separate UI (printing) from the data classes. 
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725628960" expanded>

Think it might be more compliant with coding standards to name this as `getSize()`! Likewise on food list side :-) 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/38#discussion_r726302118" expanded>

Could consider extracting this out as a constant too! 
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726480392" expanded>

What happens if the line of data is invalid? e.g `FILE_TEXT_DELIMITER` does not exist so `exerciseDetails[1]` will throw `IndexOutOfBoundsException` exception, or `exerciseDetails[2]` is not a number, so `Integer.parseInt` will throw `NumberFormatException`. I see that you do catch exceptions generally in the `Main` class, but you might want to consider explicitly catching and throwing exceptions here to customise the error message and control the execution flow of the code. Similar comment for the other data decoder methods :-) 
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40#discussion_r726979361" expanded>

The message "cannot be less than 0" might be quite misleading as the code doesn't accept 0 too right? 😛 
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40#discussion_r726980103" expanded>

Agreed! Nice! Though we should standardise it and use it in `DeleteExerciseCommand` as well 👍 
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40#discussion_r727116754" expanded>

Oh oops I just realised I read the code wrongly and 0 is allowed!! Thanks :D 
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/97#discussion_r732516384" expanded>

Would be good if you could verify that all the days provided are within 1-7! 
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/97#discussion_r732517032" expanded>

Unintended print line? 😝 
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/142#discussion_r737305127" expanded>

Good catch for this bug! 
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725617165" expanded>

It's so that the substring starts from the first letter after the delimiter! Like in `h/23`, the substring returned will be `23`. But yea, I was very bothered by this `+ 2` too,  I think I will just use `split` instead! Thanks!  
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725617228" expanded>

Good idea, could add this as another user story! 👍  
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r727325937" expanded>

Okie!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/102#discussion_r733360558" expanded>

Oh O_O HAHA oops! 
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/215#discussion_r741624141" expanded>

It starts from line 85 of `ParserUtils`! :) 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/46#issuecomment-942351216" expanded>

Looks good! Thanks for adding the logger messages for Parser! Will add the remaining ones 👍 
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/53#issuecomment-943489223" expanded>

Looks good for v1.0! Yay 👍 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/86#issuecomment-946717203" expanded>

Looks good to merge! Will add parser support for these now. 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/101#issuecomment-947930457" expanded>

LGTM! 👍 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/118#issuecomment-950129632" expanded>

Nice use of OOP! Looks good 👍 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/120#issuecomment-950190679" expanded>

LGTM! Thx for doing it up so quickly 👍 
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/130#issuecomment-954501062" expanded>

Hi @hughjazzman, in regards to the comment "The relationships between the classes could perhaps be clearer on whether they should be associations or dependencies?", may I know how do I represent static method/constant calls in another class? For e.g, `ParserManager` does not contain any object from `ParserMessages`, it only refers to a constant variable there. `XYZCommandParser` also does not contain any object from `ParserUtils`, and only calls static methods like `ParserUtils.extractXXXX()`. Are these supposed to be represented as associations or dependencies? 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/206#issuecomment-956057617" expanded>

We did not choose to prevent duplication of exercises as users may want to do the same exercise more than once in the same day. However, we agree that we could have clarified this better in our UG. Thanks! 
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/200#issuecomment-956109849" expanded>

To be addressed under FAQ in UG. 
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/213#issuecomment-957963247" expanded>

The instructions for date range is much clearer in UG now!
Deleting multiple indexes at once will be a very useful feature. Thanks for implementing it! Will add it to the parsing.
LGTM 👍 
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/214#issuecomment-957964576" expanded>

Looks good! Thanks for preventing invalid date input. 👍 
</panel>

</panel>


<panel type="info" header="### 27. Teo Phing Huei, Aeron `@a-tph` (20 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/66#discussion_r725509735" expanded>

Perhaps can remove setStockCount and corresponding setStockId. Don't think it's logical or safe to include this.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/66#discussion_r725510215" expanded>

Perhaps can remove setDispenseCount and setDispenseId methods
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/67#discussion_r725576383" expanded>

Perhaps can remove unused imports
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/79#discussion_r726155645" expanded>

Perhaps filteredMedicines == null, meaning it is not instantiated
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/90#discussion_r726487992" expanded>

Perhaps can use assertThrows? Not sure if fail() is the correct approach
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/119#discussion_r729532829" expanded>

Perhaps can "throw new Exception()" here, similar to line 26
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/119#discussion_r729533001" expanded>

Should be order id instead?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/154#discussion_r731234843" expanded>

Perhaps can avoid use of magic literals
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/171#discussion_r732175951" expanded>

Perhaps can collapse into 1 line
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/171#discussion_r732176213" expanded>

Perhaps can collapse into 1 line
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/171#discussion_r732176557" expanded>

Perhaps can use DateParser.dateToString to print date
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/191#discussion_r733739541" expanded>

Perhaps remove additional 's'?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/212#discussion_r735869174" expanded>

Perhaps can make a new line from ":" onwards?
should be "exist" too
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/212#discussion_r735874376" expanded>

Perhaps change "requiredPara" variable name to "requiredParameters"
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/212#discussion_r735875222" expanded>

Perhaps can add new line to end of file
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/283#discussion_r739839293" expanded>

Perhaps can add a space after the comma for ui
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/288#discussion_r740172336" expanded>

Should be `COLUMN_NAME` for rsort instead?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/288#discussion_r740172606" expanded>

Should be `COLUMN_NAME` for rsort instead?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/295#discussion_r740443855" expanded>

Perhaps can put this method in `PrescriptionManager` class instead since it is not exactly a validator.

</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/295#discussion_r740446548" expanded>

Is this part necessary? should be caught in `containsInvalidParameters()` in line 81?
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/296#discussion_r740804724" expanded>

Noted, will change accordingly 
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/261#issuecomment-956414790" expanded>

Will change the description in UG to remove confusion. Thanks.
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/259#issuecomment-956417014" expanded>

![image](https://user-images.githubusercontent.com/25005251/139711291-e7565d2a-93c8-4f91-b640-60e0da205657.png)

Stated in UG under `Updating Stocks`.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/260#issuecomment-956463568" expanded>

Thanks for the bug report, will fix it asap.
</panel>

</panel>


<panel type="info" header="### 28. Tan Kai Hao Andrew `@andrewtkh1` (19 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/34#discussion_r724230586" expanded>

Separate the getting of sub-string & parsing so code is more readable.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/34#discussion_r724244206" expanded>

Throws error if any issues with creating add command.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/34#discussion_r724246461" expanded>

Regex here
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/34#discussion_r724248114" expanded>

Same here, split up the getting of stub-string etc...
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/34#discussion_r724250269" expanded>

Set limit to food quantity.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/34#discussion_r724252249" expanded>

Catch if name is empty.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/37#discussion_r724609044" expanded>

IIRC, substring throws an `IndexOutOfBounds` error if the slash does not exists? If so, I think this class should indicate `.... throws IndexOutOfBounds`?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/41#discussion_r725097245" expanded>

Can we get this data from Menu class instead?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/41#discussion_r725097372" expanded>

Same for this.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/42#discussion_r725410437" expanded>

I believe the printing of header & the body should be in a `execute()` function.
The other comment below shows what I mean, or you can refer to the link below to see the deleteCommand class.

E.g) https://github.com/AY2122S1-CS2113-T13-2/tp/blob/master/src/main/java/seedu/duke/DeleteCommand.java
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/42#discussion_r725410784" expanded>

```suggestion
@Override
public void execute() {
    Ui.printMenuHeader();
    for (int i = 0; i < foodList.size(); i++) {
            Ui.printMenu(i + 1, foodList.get(i), priceList.get(i));
    }
}
```
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/42#discussion_r725410922" expanded>

Perhaps can consider changing this to private static final?
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/42#discussion_r725411436" expanded>

Would it be better to not deeply nest the code? Might help to make it more readable.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/81#discussion_r729690950" expanded>

Naming convention
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/81#discussion_r729691054" expanded>

Naming convention end here.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/101#discussion_r730271809" expanded>

IIRC, the max number of quantity per food is 999?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/101#discussion_r730271942" expanded>

You can remove the `throws IllegalArgumentException` since you already caught it below?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/101#discussion_r730272048" expanded>

Is the "(wrong input test)" suppose to be in the error message?
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/101#discussion_r730272227" expanded>

Would it be better to instead also put the `if (!checkUserInput(input))` statement into the try catch block below too?

Since both are going to throw a LotsException anyways.
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/35#issuecomment-937913731" expanded>

To be implemented in another issue.

PrintMenu() - Prints the food menu.
PrintOrders() - Prints current orders stored.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/48#issuecomment-943167589" expanded>

When adding someone with the same name, if the order already exists, it will add on the extra number of orders spcified in the new order.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/65#issuecomment-944856994" expanded>

Fixed by using delete 1/1

Changed order list from a -&gt; 1
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/114#issuecomment-945389183" expanded>

Need to merge with Implement Find command PR to resolve CI.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/115#issuecomment-946360025" expanded>

UI
Logic - Commands/ Command Classes, Parser
   * To explain how commands are being run.
Manger- People/ Orders
   * To Explain how the manager operates for each command.
Commons- Menu/Exceptions
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/210#issuecomment-955662841" expanded>

Solutions:
Specific error message - To tell users to check values & format in UG.
No Target Audiance, Purpose? - YZ doing
*CONVERT ALL NAME TO UPPER CASE


</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/230#issuecomment-957036091" expanded>

Fixed #204 
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/171#issuecomment-961646727" expanded>

Duplicate of #180 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/166#issuecomment-961646816" expanded>

duplicate of #180 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/179#issuecomment-961647022" expanded>

duplicate of #186 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/187#issuecomment-961647368" expanded>

Duplicate of #192 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/167#issuecomment-961647858" expanded>

Duplicate of #195
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/183#issuecomment-961647932" expanded>

Duplicate of #195 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/191#issuecomment-961647966" expanded>

Duplicate of #195 
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/194#issuecomment-961648017" expanded>

Duplicate of #195
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/178#issuecomment-961648237" expanded>

Duplicate of #197
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/184#issuecomment-961648420" expanded>

Duplicate of #199 
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/196#issuecomment-961648491" expanded>

Duplicate of #199 
</panel>

</panel>


<panel type="info" header="### 29. Lim Kay Yun `@kyun99` (19 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r723906299" expanded>

You might want to refactor this method into the FinancialTracker.java
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r723906712" expanded>

You might want to refactor this method into FinancialTracker.java 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/32#discussion_r726077938" expanded>

Would it be better to just have one parseEntryIndex rather than 2 separate methods 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/48#discussion_r727796179" expanded>

You might want to extract code like line 113 and 114 into a separate method like for eg printEmptyIncomeList() for better readability 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727849300" expanded>

I don't think you need this the number of expenses is already handled by the ArrayList
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727849686" expanded>

https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49/files#r727849300 Same for this segment as well
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727850010" expanded>

https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49/files#r727849300 Same for this segment as well
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727850085" expanded>

https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49/files#r727849300 Same for this segment as well
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/48#discussion_r727852262" expanded>

Perhaps you might want to refactor line 139 and 140 into a single method for method readability as well
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r728001873" expanded>

This method name might cause some error when the code compiles
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/64#discussion_r730360746" expanded>

Would it be better to throw exceptions that contain error messages from this method? This might reduce the number of try catch blocks making the code more readable  
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/64#discussion_r730360420" expanded>

Would it be better to put this line inside the constructor instead? Then can have the try catch block in the constructor as well, to catch all the error messages 

</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/84#discussion_r732740037" expanded>

might want to refactor this condition to make it more readable 
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/127#discussion_r736725427" expanded>

You might want to refactor these conditionals to make the code more readable
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/212#discussion_r741153855" expanded>

might want to refactor this part by replacing the conditionals with a method to make the code more readable 
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/212#discussion_r741155697" expanded>

same comment for this part as well. Would it be better to use a descriptive name to understand what the max comparison does?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741168474" expanded>

You might want to refactor this part by doing 
'int i = 1;
for (CurrencyType currencyType : currencyTypes) {
    System.out.println(i + ". " + currencyType);
    i++;
}'
instead?
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/230#discussion_r743363523" expanded>

Perhaps it is better for loading to come before saving since the program does loading before saving as well? 
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/249#discussion_r744236922" expanded>

Does this mean the original currency of all the input entries are SGD?
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/45#discussion_r727101860" expanded>

actually do you think its better if we include the expenseIndex - 1 in parser as well?

</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/123#discussion_r736418566" expanded>

I think the final jar then uncomment ba

</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/202#discussion_r739997289" expanded>

Not sure if need a junit test for this 
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/76#issuecomment-947256104" expanded>

Looks good to merge
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/81#issuecomment-947256460" expanded>

looks good to merge
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/83#issuecomment-947641228" expanded>

looks good to merge
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/110#issuecomment-950967436" expanded>

Looks good to merge
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/111#issuecomment-950970496" expanded>

Looks good to merge

</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/113#issuecomment-951064039" expanded>

Looks good to merge
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/127#issuecomment-952137680" expanded>

looks good to merge
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/139#issuecomment-952949834" expanded>

Looks good to merge

</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/142#issuecomment-952993469" expanded>

Looks good to merge
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/160#issuecomment-955650633" expanded>

Looks good to merge
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/199#issuecomment-955888911" expanded>

Looks good to merge
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/203#issuecomment-956286081" expanded>

Looks good to merge
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/279#issuecomment-962972084" expanded>

![image](https://user-images.githubusercontent.com/57246641/140718521-ee7d7d28-bc3c-4379-84c3-2cb300746337.png)

</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/279#issuecomment-962983576" expanded>

![image](https://user-images.githubusercontent.com/57246641/140721019-8c82273f-e416-45af-a01d-56e43473b57c.png)

</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/279#issuecomment-962993307" expanded>

![image](https://user-images.githubusercontent.com/57246641/140722868-72899588-5bab-409b-b01c-0e4540c84094.png)

</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/279#issuecomment-962996468" expanded>

![image](https://user-images.githubusercontent.com/57246641/140723331-a0b7c6f6-127f-43c5-82e7-d4ca64281dd4.png)
supposed to have 7 categories

</panel>

</panel>


<panel type="info" header="### 30. Mun Le Zong `@lezongmun` (17 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/14#discussion_r722862754" expanded>

Great use of switch statements to make the code neater!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/14#discussion_r722867861" expanded>

I like the use of ContactsDecoder and ContactsEncoder to abstract the code, makes it a lot more readable.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/14#discussion_r722870188" expanded>

Great use of examples and comments to show how the code is expected to work.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/21#discussion_r723439437" expanded>

Great use of exceptions. I think that it would be possible to use some of the existing FailedCommandTypes after you merge the code with the rest.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/26#discussion_r724421903" expanded>

Extensive use of tests to check for errors. All are in correct format as well! 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/36#discussion_r725520486" expanded>

Great job in testing for cases that can cause bugs.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/36#discussion_r725520605" expanded>

Great call in removing the commas from the user input since they can cause bugs in the Storage File.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/51#discussion_r727090408" expanded>

Good use of abstraction. Makes it easier to read and understand.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/56#discussion_r727285060" expanded>

nice formatting, makes everything readable and understandable.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/56#discussion_r727288545" expanded>

If I am not wrong, there should be a space before the curly brace, `Exception {`
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/62#discussion_r730284634" expanded>

Great way to refactor the code to avoid long methods!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/97#discussion_r733617860" expanded>

Great way to abstract the code so that its not as lengthy! 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/97#discussion_r733620566" expanded>

Good thinking putting the line number to specify where the error is.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/100#discussion_r734253590" expanded>

@ng-andre I was thinking maybe it would be better to use constants to represent some of these magic literals and numbers. Same for the ones below.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/183#discussion_r744121461" expanded>

Great use of reference frames to abstract the UML sequence diagram. Looks more readable and less complicated!
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/183#discussion_r744121636" expanded>

Good call putting it in future features!
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/183#discussion_r744123531" expanded>

Good work listing out the potential ideas for implementing the duplicate protection, but I was thinking would it be better to leave this out and place it in Developer Guide, since it sounds a little more technical and more suitable for Developer Guide. It might not be something users are looking out for. 
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726983248" expanded>

Thank you, boss man, will do.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726983364" expanded>

Thank you, boss man, will do.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726983452" expanded>

Thank you, boss man, will do.
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/50#discussion_r726984424" expanded>

Thank you, boss man, will do.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/14#issuecomment-935441074" expanded>

> Hi @lezongmun , appreciate your help and guidance in reviewing my PR. I have made changes to the IO redirection tests, and similarly added the gitignore files as follows so that, going forward, all future tests will start from a fresh build and fresh local storage. Do go through my updated PR and let me know if merging is possible. I will be more than willing to explain any uncertain parts you may have.
> 
> In addition, I have also made sure that my code was compliant with the CheckStyle.

Hello @marcusbory, I have looked through the updated code, everything looks great now. I have also noted the changes to the IO redirections tests and gitignore files as well as the rationale behind them. Thanks Marcus! 
</panel>

</panel>


<panel type="info" header="### 31. Anderson Leong Ke Sheng `@uosjapuelks` (17 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/43#discussion_r721001874" expanded>

I think we don't have to specify the (100) but I think can just merge first and it should be:

ingredientsList = new ArrayList&gt;Ingredient>();

</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/63#discussion_r723179245" expanded>

I think it'd be better if "enter help..." part is in the next line, so maybe you could put "\n" before "Enter"?
But if you think this is better I think it's g too

"No command found! \nEnter help if you need the list of available command.\n"
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/71#discussion_r724886682" expanded>

Can change printing values to be kinda same style to have some structure like the other methods?
printLine()
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/71#discussion_r724887053" expanded>

Here too, can refer to latest style for printing.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/74#discussion_r725038695" expanded>

format should use "'" too I feel.

Format: 'help'
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/100#discussion_r725667901" expanded>

Check the &gt;> brackets
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/122#discussion_r726819290" expanded>

Good to be past tense but I think this works too.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/131#discussion_r733274023" expanded>

We can add the ":" to front of class by typing ":Class".
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/216#discussion_r741002507" expanded>

could you shift `printSeparatorLine()` down to be above this line?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/216#discussion_r741003325" expanded>

could you initialize errorMessage as a String first, assign it inside the if else calls?
Also, I think it should be message now since inputting "n" message should not be an error.

```
if (!confirm,equalsIgnoreCase("n") {
    msg= [msg]
}
msg += Shutting down...
    
printSep();
printLine(msg);
return false;
```
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193531" expanded>

When closing you authorship claim, use `//@@author` without your github username after. Also, if you're going to claim all the way to the bottom, you don't have to end with `//@@author`.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193562" expanded>

Same here.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193587" expanded>

And Here.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193603" expanded>

here too.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193619" expanded>

This too.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193697" expanded>

What's going on here?
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/229#discussion_r744193701" expanded>

This too.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/57#discussion_r722448504" expanded>

then I think I put the end line infornt of the seperator line then, otherwise the seperator line always ends right beind the msgs cut now we're not spamming `System.out.println` anymore
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/73#discussion_r724898041" expanded>

Thanks, corrected it.
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/76#discussion_r725460113" expanded>

this exception captures things like when user inputs unrecognisable sort type. Like `list --` or `list -p` then we have to catch and ask them input in correct format
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/148#discussion_r735518544" expanded>

Good catch.
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/148#discussion_r735518645" expanded>

fixeds.
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/148#discussion_r735518728" expanded>

done.
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/212#discussion_r739940845" expanded>

Good point
</panel>

<panel  header="**25 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/212#discussion_r739941024" expanded>

you can't be greater than MAX if it overflows.
</panel>

<panel  header="**26 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/212#discussion_r739942615" expanded>

I could change it to `(quantity + qty &gt; 0) ? 0:qty` but this makes catching the exception difficult. because we don't throw exceptions in command classes.
</panel>

<panel  header="**27 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741094086" expanded>

i figured after using the .jar file, the logo too near the command line that launched the file not a pretty sight.
</panel>

<panel  header="**28 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741132684" expanded>

Done.
</panel>

<panel  header="**29 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741132711" expanded>

Done.
</panel>

<panel  header="**30 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741140290" expanded>

The space is actually part of the style because you get it when you hit:
`ctrl + alt + l`

We should be doing this shortcut for every java file for maximum correctness.
</panel>

<panel  header="**31 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741206222" expanded>

fixed
</panel>

<panel  header="**32 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741206609" expanded>

done
</panel>

<panel  header="**33 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741305809" expanded>

ok
</panel>

<panel  header="**34 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/225#discussion_r744098696" expanded>

Thanks!
</panel>

<panel  header="**35 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744261709" expanded>

done

</panel>

<panel  header="**36 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744261717" expanded>

done
</panel>

<panel  header="**37 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744261726" expanded>

deon
</panel>

<panel  header="**38 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744261755" expanded>

fixed
</panel>

<panel  header="**39 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/256#discussion_r744636513" expanded>

Exit Command sort of sets it to false first because the rest are by default true
</panel>

</panel>


<panel type="info" header="### 32. Chong Xuan Liang `@xuanlc113` (16 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719242219" expanded>

no need for this since no sort is being used
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719243336" expanded>

we're not using a data transfer object for this?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719244594" expanded>

can leave it in case need in future tho
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719250121" expanded>

since we're using semester, i think should add each sem timetable object to a map (sem -&gt; timetable)
if not at the start we'll have to init 4 sems for 3-4 years worth of timetable objs
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719250788" expanded>

for conversion between json to java obj
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719246151" expanded>

based on gson, will save earliestHour and latestHour in the json file. Might have some confusion since the I'm guessing this is for each day, but the timetable contains mon-fri
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719243752" expanded>

preferably use Arraylist for convenience methods, no need to track index. Also using a map to store would be neater i think. trade off is the conversion for json storage need to convert back to array
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719332187" expanded>

ohhh, i thought the 24 was for like max 24 items lol.
so now each timetable item does not store time anymore, since its tracked by array?
need to check if how gson handles null values in json array
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719333781" expanded>

hmm couldn't we just make the timetable UI standard size, ie show from 0600-1700 like nusmods?
or isit cuz in the future might add timeslots way past those times
might be a bit jarring if timetable scale keeps changing
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719334725" expanded>

i think sem should be tracked in another class then, cuz the add module function will be based on which sem is currently selected
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719338936" expanded>

not necessary since we're using the 24 array thing now. I just wanted to put the schedule in a map
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/14#discussion_r719410192" expanded>

looks like gson can handle null values (so something like [1,2, null, null, 3])
lets just go with ur implementation
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/191#discussion_r737092161" expanded>

It is easy to see the structure of the classes, but should the class diagram show more information, like main functions, association, etc?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/191#discussion_r737093094" expanded>

Perhaps a sequence diagram will be more appropriate here?
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/191#discussion_r737094194" expanded>

Could adding the functions of each class help in enhancing the explanation of the api
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/191#discussion_r737096218" expanded>

Can the explanation here can be combined with the step-by-step explanation below? 
</panel>

</panel>


<panel type="info" header="### 33. Nguyen Van Binh `@nvbinh15` (16 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723703328" expanded>

You should import each variable separately
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723704040" expanded>

Quite strange to hardcode the module list.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/32#discussion_r723704649" expanded>

Try to make a pattern that works for every module instead of hardcoding each module.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/66#discussion_r727702730" expanded>

Nice exception handling and `try-catch-finally` block
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/143#discussion_r737043704" expanded>

You may want to specify the access modifier here (should it be `private`?).
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/143#discussion_r737043748" expanded>

Should have a new line at the end of file.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/143#discussion_r737043848" expanded>

Solid!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/143#discussion_r737044311" expanded>

Should use `ui.printMessage()` instead of `System.out.println()`
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/144#discussion_r737044952" expanded>

You may want to use `Exception` here to check the user's input instead of `assertion` 
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/229#discussion_r741293860" expanded>

You should refactor constants for the messages instead of using magic strings.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/229#discussion_r741295164" expanded>

Nice!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/234#discussion_r742515104" expanded>

You may want to extract the constants
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/234#discussion_r742515504" expanded>

So different constructors will be called depending on the runtime mode?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/234#discussion_r742516007" expanded>

You can extract a method to sort the callories. Btw good use of streams!
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/237#discussion_r743754009" expanded>

Can extract the constant instead of using magic String.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/237#discussion_r743755824" expanded>

You can extract a method here since `execute` is quite long.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/163#discussion_r738169968" expanded>

Got it
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/20#issuecomment-933624296" expanded>

LGTM
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/34#issuecomment-937628750" expanded>

> LGTM - really neat code and tests, but was wondering - should the expected grade for a mod be a character instead? Not too sure what the double represents

Good point! Let me update
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/136#issuecomment-951033863" expanded>

You should merge from upstream or resolve the conflict first
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/163#issuecomment-953544399" expanded>

Open PR for review. Do not merge yet
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/184#issuecomment-955673524" expanded>

Mentioned in the UG that parameters cannot be reordered.

> Parameters cannot be reordered. Example: If the command specifies module add c/MODULE_CODE n/MODULE_NAME, keying in module add n/MODULE_NAME c/MODULE_CODE will result in an invalid command.
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/225#issuecomment-957597423" expanded>

No specific scenario is provided by the tester. The command seems to work fine under normal conditions.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/188#issuecomment-960466502" expanded>

`task` is not relevant to `module`. Put a note in the UG for this issue.
</panel>

</panel>


<panel type="info" header="### 34. LAM KAI WEN JONATHAN `@jonathanlkw` (15 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725070085" expanded>

maybe expenseNumber (for user input starting from 1) and expenseIndex (for array index) would be clearer
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725071286" expanded>

What is the purpose of adjustItemIndex?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/83#discussion_r732729107" expanded>

Should the test case provide a real example instead?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r736354884" expanded>

For consistency sake, shouldn't it be set_curr c/CURRENCY?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r736358310" expanded>

Something seems to be wrong here, if currency is changed from USD to SGD, shouldn't the value increase since USD is worth more?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r736359490" expanded>

A check should be added to discern which currency it is currently on I think. If not I can repeatedly call currency change and the values will decrease/increase to infinity.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r736359914" expanded>

I think there needs to be a convertBudget too. The budget values must change along with the currency change.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/201#discussion_r739996799" expanded>

"set/adjust" I think
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741091649" expanded>

`from` cannot be SGD by default right? How do you change back?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741094323" expanded>

Might be missing a space there.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741099476" expanded>

Should only set currency after the end of the whole conversion? Rather than once in convertEntries and once in convertBudget
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741105209" expanded>

Did you alter value from the input directly? I think its better practice to initialise a new value.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741107913" expanded>

The conversion process seems alittle odd to me. Not sure if I'm understanding it correctly.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741109992" expanded>

This base currency comparison doesn't change when the base currency changes.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/211#discussion_r741149239" expanded>

I'm worried that it isn't clear enough from this message that he has exceeded our max limit for entries.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/176#issuecomment-960634918" expanded>

If I'm not wrong, this is not a duplicate of #165. This is regarding budget values. While the resolution method is similar, its 2 separate implementations.
</panel>

</panel>


<panel type="info" header="### 35. Teo Chin Kai Remus `@RemusTeo` (14 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724236246" expanded>

I think we should follow order of CRUD? We can standardize this order of the subsequent commands too.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724246022" expanded>

Is this indentation correct? I think indentation for wrapped lines should only be 8 spaces more than parent line.
https://se-education.org/guides/conventions/java/basic.html 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724248187" expanded>

Is this indentation correct? I think indentation for wrapped lines should only be 8 spaces more than parent line.
https://se-education.org/guides/conventions/java/basic.html 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724248308" expanded>

Is this indentation correct? I think indentation for wrapped lines should only be 8 spaces more than parent line.
https://se-education.org/guides/conventions/java/basic.html 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724293367" expanded>

Ok I guess that works as well.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/89#discussion_r726242876" expanded>

Is this necessary?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/99#discussion_r727167002" expanded>

User parameters should be in in caps. Eg, i/STOCK_ID
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/99#discussion_r727169806" expanded>

Add another example and expected output that is just `list` without parameters. Put that as example 1. You can refer to Deon's add medication
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/204#discussion_r735450914" expanded>

Got extra spacing? The | not align
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/211#discussion_r735818453" expanded>

Follow ordering of table content. Should be list then stock commands
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/280#discussion_r739819249" expanded>

I dont think this is necessary because this is the main logic and nothing is referencing it.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/316#discussion_r743108619" expanded>

I think this one can use the Data.clearTestData()
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/316#discussion_r743108723" expanded>

I think this one can use Data.clearTestData()
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/316#discussion_r743108958" expanded>

I think this one can use Data.clearTestData()
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/90#discussion_r726511785" expanded>

Okay, changed to use assertThrows
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/154#discussion_r731239779" expanded>

Changed to NUMBER_OF_STOCK_DATA_FIELDS
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/237#issuecomment-953724533" expanded>

Thanks for the review TA. 
I think for the FileParser.java one may not be possible because I need to response back specific error messages for to indicate error in specific files and specific fields.
I agree with the changes recommended in Storage.java. Will do thanks.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/269#issuecomment-955647447" expanded>

Thanks for the review. 
There actually already is automatic saving of data to text file implemented as every operation that modifies the data will dynamically be updated in data storage files. Archiving is just another side feature to transfer entries from current records to another different static file for archiving purposes.
I do agree with you on the point mentioned to throw error message when no entries are found. May consider implementing that if time permits. Thanks!
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/241#issuecomment-956227989" expanded>

Hi, we did this because we referenced and follow AB3 UG. style You may refer to the features section.
![image](https://user-images.githubusercontent.com/28041798/139678028-d57e5c89-ff87-4778-b5a0-01a7d4a384db.png)

https://se-education.org/addressbook-level3/UserGuide.html
</panel>

</panel>


<panel type="info" header="### 36. Kwong Zhi Qian `@KZQ1999` (14 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/11#discussion_r720861430" expanded>

I read through already, I think its ok no problem wait for the rest then maybe can merge as a base first. 💯 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r723494603" expanded>

Ok so I should add an ui.printInvalid also if you want can help make the dummy function so you can put the method call here. Before merging it .
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r723508816" expanded>

nice ty :D
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724196634" expanded>

I think you should do the same assert as ansheng to test that your command is of a certain class? instead of constructing it and ending there ?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724197734" expanded>

Uncomment this ?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724200462" expanded>

incomeIndex - 1
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724201838" expanded>

Why this one this.incomeIndex = incomeIndex - 1 ;
 but the one on top this.expenseIndex = expenseIndex;
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725100015" expanded>

nice :)
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725103006" expanded>

Nice but i dont know if you following a different convention 
test name should be mtd_stateundertest_outcome 
just a headsup
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727864317" expanded>

No Biggie but state under test probably should be indexOutOfBound
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/56#discussion_r729769522" expanded>

can 'o' meh and need plural? perhaps Expense expense : accumulatedExpenses? :)
and name count as totalExpense. Below also then I think nothing much already 👯‍♂️ 
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/123#discussion_r736411603" expanded>

while(isExit == false).......
            if exit command, ​IsExit = true
Cause i think dont need the setTerminating and idk if u can name boolean as flag
If u want can refractor isExit==false 
with boolean isNotExit()
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/123#discussion_r736412159" expanded>

this one how?
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/208#discussion_r740754908" expanded>

I agree!
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/4#issuecomment-931847117" expanded>

We both renamed the same file, you didnt pull it first so theres conflict right now.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/94#issuecomment-949385522" expanded>

no need to save balance i think
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/115#issuecomment-951086266" expanded>

Upper casing problem for Overall and double separator
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/161#issuecomment-955669670" expanded>

Fixed- in my current PR
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/158#issuecomment-955683532" expanded>

done
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/174#issuecomment-955683910" expanded>

done
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/171#issuecomment-955684470" expanded>

Added under UG search by value, example "find 5" given example too
Done
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/194#issuecomment-955691022" expanded>

![image](https://user-images.githubusercontent.com/69465661/139583017-f91b2703-0ccc-4a93-abb5-e949470e7b67.png)

Idea is to
1) Get the current year's monthly breakdown by filtering through the exp/inc list for dates of this year
2)Based on what x coordinates plot each month's bar

So "Because as of now all your year are stored together if im not wrong which is a problem especially in your show_graph since all the years will be placed together" should not be a problem
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/154#issuecomment-955695655" expanded>

done
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/178#issuecomment-955710385" expanded>

nice one brother, done!
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/152#issuecomment-955918142" expanded>

![image](https://user-images.githubusercontent.com/69465661/139621461-f864cfec-2b87-44cc-8352-a2731d0d169b.png)

</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/152#issuecomment-955928885" expanded>

![image](https://user-images.githubusercontent.com/69465661/139623121-49631fa5-dd97-48ad-a18c-5f5673bb44ac.png)

![image](https://user-images.githubusercontent.com/69465661/139623138-1508af07-fff0-4b94-9e59-9aee1e1c8264.png)

Idea is if its a multiple part command and the argument is empty throw a missing parameter exception
Is this okay guys?
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/152#issuecomment-955949756" expanded>

partially fixed , not fixed for commands that require more than 1 parameter
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/159#issuecomment-956002548" expanded>

Duplicate
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/154#issuecomment-956004221" expanded>

Duplicate #174
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/187#issuecomment-956044886" expanded>

I think this is solve by Kyun together with the income one already.
Duplicate
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/162#issuecomment-956046037" expanded>

Seems done! Good job
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/141#issuecomment-956080530" expanded>

although added before Pe-dry 
Its a Duplicate
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/182#issuecomment-956428501" expanded>

Take a look at the new UG, leave some comments here @jonathanlkw  @Nirmaleshwar  @kyun99 
if not this should be okay :D
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/184#issuecomment-962595384" expanded>

Adding of new feature is not recommended in V2.1
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/175#issuecomment-962596976" expanded>

This might not be duplicate now that i think about it
what this guy is saying is that we should tell them to set a budget at the start before they add an expense/income .
</panel>

</panel>


<panel type="info" header="### 37. ZHANG HAOYU `@haoyusimon` (13 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#discussion_r725632697" expanded>

This class can be used for later versions
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#discussion_r725632819" expanded>

Very clear JavaDoc and easy to understand
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726816985" expanded>

Isn't this GetCommand instead of adding command
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726986954" expanded>

This is because we divided work when changing parser. Zhihuang only changed methods that involves GetCommand and ListCommand. Once his merged with mine should be ok alr
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726987463" expanded>

execute() is the function that executes the list command and list items
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/44#discussion_r728842865" expanded>

Should there be space between "," and "selectedItem"? Same goes to the following arguments
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/43#discussion_r728850565" expanded>

Not sure if it is enough to just check that the Command returned by the parseCommand is of the same Command type with the expected Command. I was thinking if can add an equals() method in command to compare the commands in a more accurate way. But maybe can improve on the testing in a later version.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#discussion_r730377309" expanded>

Why use assert here instead of an Exception (SelectedItemContainerNotFound, etc)
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/79#discussion_r734945469" expanded>

not sure if it is ok to use "df" here as a variable name. Maybe using the complete form "decimalFormat" is more clear?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/89#discussion_r736111976" expanded>

4 is a magic number
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/95#discussion_r736112790" expanded>

maybe can write as l/LOCATION(SHELF_NAME). Or the user may be not sure where comes the l/
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/112#discussion_r738109189" expanded>

In this case probably need to create a abstract class in package model.exception called ModelException, just like the CommandException.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/112#discussion_r738111986" expanded>

I thought the TA said need to put these UI related codes into a UI.java (or something similar) instead of spreading them into the respective commands? Coz it is a bit weird to see Strings used for parsing in the Command class. Command classes just deal with the parsed input bah
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r725927269" expanded>

Ok I will rename it. Thanks!

</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726725676" expanded>

I will add more tests later on. Currently wish to implement all functions first
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726725729" expanded>

will add more later
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#discussion_r726727886" expanded>

Oh because there is such updateItem() method in the ItemContainer class i think it is more convenient
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727714815" expanded>

oh ya I have corrected it and update in PR
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727902375" expanded>

deleted
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727902606" expanded>

deleted
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727903982" expanded>

it is only used in parser. I'll delete it elsewhere
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727907318" expanded>

yes a lot of different exceptions are thrown because here also uses addItem, so item exceptions also are thrown
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/41#discussion_r728853352" expanded>

Ok corrected. Thanks!
</panel>

<panel  header="**24 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/85#discussion_r734946140" expanded>

I think there is no need to edit the name, coz the user can directly add a new item with totally new name, cost and price. We can probably let the user edit the name of the shelf.
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/22#issuecomment-939259549" expanded>

Looks good. Comprehensive parsers for different commands. 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#issuecomment-939304193" expanded>

Nice work with clear structure. However, could you add JavaDoc or leave some comments to explain what different classes such as ItemContainer/Item/ContainerList mean? 
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#issuecomment-942110911" expanded>

done #35 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/41#issuecomment-943266492" expanded>

Conflicts resolved.
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/100#issuecomment-951919707" expanded>

Now can review and merge
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/100#issuecomment-951921295" expanded>

Closes #81
Closes #73 
Closes #62
Closes #58
Closes #54
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/191#issuecomment-958760738" expanded>

Temporarily removed the input.txt for text-ui-testing in order to pass the checks.
</panel>

</panel>


<panel type="info" header="### 38. Muhammad Ashraf B Mohamad J `@ashrafjfr` (11 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/43#discussion_r725749471" expanded>

No issues with the getter and setter functions for each new field. LGTM!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/49#discussion_r726805586" expanded>

Good use of assertion and exception here to catch if default case is ever reached.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/49#discussion_r726806247" expanded>

Good catch on this bug. No other issues. LGTM!
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/58#discussion_r727740846" expanded>

Good use of assertions to check the flow of your code. No issues, LGTM!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/114#discussion_r736583729" expanded>

@ng-andre I think you need to change the boolean array to be named according to boolean naming convention, eg. hasDeletedDetail or hasDeletedField where the field is true or false depending on whether it is to be deleted or not.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/114#discussion_r736588400" expanded>

@ng-andre I think this should be named according to the naming convention, eg. isDetailDeleted. The convention is to ask a question in the name.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/114#discussion_r736594328" expanded>

Method has 40 lines but I'm not too sure how we can shorten this since it uses a switch case. @marcusbory can this be an exception to exceed 30 lines?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/114#discussion_r736647537" expanded>

Good job shortening the method! Looks concise now.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/170#discussion_r742923789" expanded>

Good job on your PPP! No issues, LGTM!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/182#discussion_r744097710" expanded>

No newline at end of file but minor issue, no need to edit.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/182#discussion_r744097740" expanded>

No newline at end of file but minor issue, no need to edit.
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/156#issuecomment-955710932" expanded>

When this scenario occurs while the slash seemingly appears on the previous command, it is actually registered as part of the next command. As such input is actually `\ls` rather than `ls`. This problem is pretty hard to duplicate as it would require the user to hit the backslash in the process of loading.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/154#issuecomment-955712746" expanded>

We don't think this is necessary for our programme. While it may not be complicated to implement, the semantics of our personal contact is separate from our Contact List. Even if regular contact management applications, such as the one in your phone, the personal details and the contact book is separate. Thank you for your opinion! :)
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/149#issuecomment-955715434" expanded>

Close with #158 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/147#issuecomment-955716590" expanded>

As you have said, this is a nice to have feature. In general, even for search engines, if you search for something, you will get what you search for. Normally when you search for something, you will type in a string that is included in the actual search result that you are looking for. However, we appreciate your input. Thanks, Bane! 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/146#issuecomment-955716740" expanded>

Same issue as #152 , mark as duplicate.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/144#issuecomment-955716896" expanded>

Same issue as #152 , mark as duplicate.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/136#issuecomment-955718403" expanded>

Potentially add / - ' . into the regex.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/130#issuecomment-955721890" expanded>

This is not appropriate as the user will be a first time user. How would you expect him/her to know what to input on the first startup. 
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/183#issuecomment-962475568" expanded>

Ok good job on the Coming Soon section for the DG, LGTM!
</panel>

</panel>


<panel type="info" header="### 39. Bryan Elmer Mulijono `@BryanElmer` (11 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721509385" expanded>

Maybe you can refactor the whitespaces out as a constant in UI class as it might be used again for later functions.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721514062" expanded>

Maybe can add a space after the comma
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/48#discussion_r721514670" expanded>

Maybe can add spaces after the commas here to make the code consistent :)
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/73#discussion_r724893086" expanded>

you might have misspelled "the" in the message.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/93#discussion_r725634804" expanded>

typo in the docs (return true **if**)
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741098880" expanded>

I think item should be plural here
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741102198" expanded>

can remove the extra spaces here
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741130170" expanded>

can remove extra space here

</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741130358" expanded>

extra spaces here too
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/214#discussion_r741144239" expanded>

missing docs
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/236#discussion_r744258847" expanded>

link is not working yet
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736512016" expanded>

I took care of the NumberFormatException in the updateShopList function @ RemoveCommand.java
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/pull/157#discussion_r736512771" expanded>

Is it better for me to do it here instead?
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-4/tp/issues/51#issuecomment-939424730" expanded>

- Typing in "add" only will crash the program
- Typing in "remove" only will crash the program
</panel>

</panel>


<panel type="info" header="### 40. Paramita Tejasvi `@ptejasv` (11 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725431399" expanded>

Random order should work since all the parameters are compulsory!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/30#discussion_r725433873" expanded>

But if the user doesn't user `-i`, won't `params.length` be less than or equal to 2 though? So the first part `(params.length > 2)` would return false anyway? 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/32#discussion_r725459061" expanded>

Good exception handling! I think we eventually need a message for storage related issues as well, like `There was an issue saving your data`, but we don't have to do that right now.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/60#discussion_r730200487" expanded>

You may want to use the name of the class as the name for the logger. That is, `private static final Logger LOGGER = Logger.getLogger(Duke.class);`, just for some clarity.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/61#discussion_r730242411" expanded>

Do you want to make "tasks.txt" and "lessons.txt" global constants instead, or maybe public constants in `Storage.java`? So if they're public this line would look like `taskList = new TaskList(TaskList.deserialize(storage.loadData(Storage.LESSON_FILE_NAME)));`. Same thing for the delete commands.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/61#discussion_r730242484" expanded>

As per my previous suggestion, these would be public.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/78#discussion_r734951329" expanded>

You might want to consider adding instructions for module and lesson as well.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/78#discussion_r734951642" expanded>

You might want to add the `.toUpperCase()` here instead of in the Ui class to match AddCommandParser.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/84#discussion_r736328207" expanded>

Would it be better to use `ui.printMessage(e.getMessage())`?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/84#discussion_r736328612" expanded>

Good use of efficient sorting!
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/84#discussion_r736330278" expanded>

I'm assuming these will follow "L", "M" or "H".
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721896124" expanded>

yep I'm leaving it as printStackTrace just until we have something better to print out the error
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/31#discussion_r725461371" expanded>

Thank you! I've added the newlines now.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/62#discussion_r730251523" expanded>

There is already another class named ModuleIndexException used by ModuleList!
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730642205" expanded>

The only other option is to pass it as another parameter to `command.execute()`, but I felt that making it public static made more sense since it's a reference for `AddModuleCommand`, not something that needs to be modified. If you have any other suggestions I can try them out though.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/70#discussion_r730682365" expanded>

Ok, I've moved out parts of this. I'm not confident of creating a function to deseiralize the json file into an array of generics though, so it's still using a module specific function to do that. 
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739953140" expanded>

This actually wasn't written by me but I see your point, I'll change this.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739953344" expanded>

This is also not written by me but yep I can change it.
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/161#discussion_r739952993" expanded>

I'm not sure about this. ListTaskCommand and ListLessonCommand both handle it using an if-check and I don't think the list being empty is exceptional behaviour, it's normal for the list to be empty? 
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/170#discussion_r742591851" expanded>

I think this refers to the project though

![Screenshot 2021-11-04 at 3 32 57 PM](https://user-images.githubusercontent.com/69339443/140274429-0d731563-39a0-4fde-a525-e56541923125.png)

</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/18#issuecomment-934085864" expanded>

Resolved in PR #26 
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/160#issuecomment-955671067" expanded>

I can work the module duplicate part so that `add module` doesn't allow duplicates. I don't think it makes sense to add a module twice.
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/148#issuecomment-960455195" expanded>

Fixed in PR #164 
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/170#issuecomment-960574262" expanded>

> Sorry for hijacking this PR @ptejasv, could you help us fix #171 as well?

Okay! I've changed it in the last commit.
</panel>

</panel>


<panel type="info" header="### 41. LEE KENG YONG JOSHUA `@joshualeeky` (10 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/63#discussion_r727308678" expanded>

userInputSplit[0] will always equal to rawInput[0] right? maybe can put on top and just make String inputCommand = rawInput[0].toLowerCase() and remove the else portion? can cut a few lines of codes i think
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/117#discussion_r735140159" expanded>

I thought it is supposed to show the amount(?)
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r735735059" expanded>

I think this is wrong, it is find matching description not payer
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r735735624" expanded>

Isn't this redundant cause of the .isEmpty() function for ArrayLists?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r735749377" expanded>

Sorry I am confused. Why not just put the Ui.equalSplitPrompt() above the for loop?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736076620" expanded>

this means if the whole expense is $10 and the first person spends $9.99999 it will auto assign the other person with 0 is it? I think it may be considered as a bug 
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736104009" expanded>

Can this if block be put into the if statement on line 130?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736104343" expanded>

I think there's a grammar typo here :/
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736104799" expanded>

Sorry I am not really sure but is it wrong to call isEmpty() when we use getListOfTrips in another class?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/162#discussion_r738327609" expanded>

This was left blank on purpose, cause some currencies use specific symbols so it will be more correct if we just show the ISO code and not the symbol I feel.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/64#discussion_r727686754" expanded>

I just copied and pasted the original, I think maybe it isnt supposed to be there(?)
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/92#issuecomment-948360505" expanded>

New pull request from v2.0 - WorkingBranch
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/225#issuecomment-957225131" expanded>

Josh - Parser, Xi Yuan - Ui
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/183#issuecomment-958927009" expanded>

Fixed with new delimited for trip creation.
</panel>

</panel>


<panel type="info" header="### 42. Ang Yong Siang Alwin `@alwinangys` (10 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/25#discussion_r725419468" expanded>

Code is clear in terms of retrieving the start and end index of all the various parameters needed. Good job!
It seems that `retrieveItemTitle`, `retrieveItemDate` and `retrieveEventVenue` are all very closely related. Perhaps further abstraction could make the code cleaner and shorter for future purposes eg. factor out lines such as `response.indexOf("v/") + 2`.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/25#discussion_r725419573" expanded>

Is there a reason for returning -1 here?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/25#discussion_r725419797" expanded>

Good extensive throwing of exceptions to catch the possible errors when adding items.
One possible suggestion could be changing `.equals("")` to `.empty()`, ie changing `itemDate.equals("")` to `itemDate.empty()` as we are dealing with `String` objects and could utilise methods from the `String` API to make the code more self-explanatory.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/27#discussion_r725609253" expanded>

As this looks to be used quite extensively in `UpdateCommand` and possibly other methods/classes in the future, perhaps this could be refactored for neater code i.e. have a boolean method that returns true is `-e` is the `listType`.

 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/34#discussion_r725749503" expanded>

This is a good exception that was thrown as this looks at not only the formatting of the date and time, but whether the date and time has already passed.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/80#discussion_r735103389" expanded>

Perhaps a more meaningful variable name than `x` can be used.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/80#discussion_r735103975" expanded>

Could consider abstracting this into another method, which would make the code neater.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/80#discussion_r735104106" expanded>

This could be put into `Ui` in the future, similar to line 132.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/85#discussion_r735742570" expanded>

Good refactoring here to make execute() neater.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741061873" expanded>

Seems like these two exceptions are never thrown in the respective `execute()` methods in these classes: `UpdateEventCommand`, `UpdateMemberCommand`, `UpdateTaskCommand`. Perhaps this could be removed for cleaner code.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724924401" expanded>

This is a good suggestion; I'll leave it in a comment so this idea can be referred to in the future.
However for now I will keep it as a single `taskIndex` to facilitate easier testing.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/190#discussion_r744196558" expanded>

This makes sense, will do this minor refactoring!
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#issuecomment-938566304" expanded>

Closes #22, closes #23
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/40#issuecomment-941088836" expanded>

Closed PR; issues to be pushed to next iteration.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/50#issuecomment-945076470" expanded>

The to-do list for the PR Description could be put as issues so that it can be easily referred back to even after this PR has been closed
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/208#issuecomment-962967330" expanded>

LGTM!
</panel>

</panel>


<panel type="info" header="### 43. Christopher Nge Jing Qi `@Poopies99` (10 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/30#discussion_r723322825" expanded>

Can consider testing for module code that is not capped (e.g. cs2113t) in the future.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/30#discussion_r723324807" expanded>

Magic Number :) 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/55#discussion_r725788396" expanded>

Not necessary to show an empty timetable or timetable command within Clear Command
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/94#discussion_r735230566" expanded>

Works for now but magic numbers should be removed in future iterations
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/94#discussion_r735231182" expanded>

A minor inconvenience but perhaps we create separate methods for this conditions to make code more readable
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/105#discussion_r738977448" expanded>

This line has been changed in the recent merge
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/104#discussion_r738978247" expanded>

Fix has been made in the recent merge, thanks anyways :)
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744123591" expanded>

Avoid use of Magic Numbers to comply with JCS
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744123616" expanded>

Magic Number
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744123624" expanded>

Magic Number
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/10#discussion_r719023715" expanded>

Amen to that! Yeap I was thinking of implementing that but I just didn't know how it will affect the rest of our team's implementation 
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/26#discussion_r723258478" expanded>

This method has already been removed in my latest commit
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/60#discussion_r726825003" expanded>

Yeap, you're right!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/60#discussion_r726825371" expanded>

yeah, thanks for pointing that out
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/74#discussion_r732470647" expanded>

Yeap you are right, changed it to: 
time = String.format("%04d", u * 100);
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/23#issuecomment-932895349" expanded>

LGTM :)
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/24#issuecomment-934476743" expanded>

Noted, thanks for the feedback will create another PR for this issue
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/63#issuecomment-942070205" expanded>

> Nevermind, MacOS is garbage

:(
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/74#issuecomment-947423153" expanded>

Don't merge first, I'm current in the process of making changes and adding new features :)
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/75#issuecomment-948333815" expanded>

LGTM
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/39#issuecomment-950291878" expanded>

Thanks bud, working on the implementation now :)
</panel>

</panel>


<panel type="info" header="### 44. Liang Yuzhao `@yeezao` (9 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/31#discussion_r723066635" expanded>

`listOfPersons` cleared but not re-populated here - similarly, line 24 `listOfPersons.get(i)` might throw out of bound exception since list is now empty.

I think you just need to add back each person to `listOfPersons` - correct me if I’m wrong :)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/33#discussion_r723195836" expanded>

Will update in future iterations (no action needed)
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/33#discussion_r723196836" expanded>

May need to update this in future iterations to delete using index instead of object (no action required)
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/42#discussion_r725531929" expanded>

Method throws IndexOOBException, but code body doesn't throw new IndexOOBException.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/42#discussion_r725532078" expanded>

Can refactor this into the Ui class
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/42#discussion_r725532182" expanded>

Can extract this line to before case statement (same for cases below)
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/42#discussion_r725532353" expanded>

Can add a more user-readable message here (in addition to printStackTrace)
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/55#discussion_r726785554" expanded>

May need to be edited in future - this will end up looking like this:
```
Please enter the trip you would like to open: Enter your command:
```
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/258#discussion_r744251611" expanded>

Would it be better to call is "Symbol Available"?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/112#discussion_r735081456" expanded>

resolved - todo tag added
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/251#discussion_r744142979" expanded>

thanks for the spot! 😎
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/17#issuecomment-936157256" expanded>

Completed in #26 - ability to add default expenditure currency, base (repayment) currency, exchange rate
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/41#issuecomment-939825218" expanded>

Issue closed for now - using index of Trip to determine which Trip to CRUD expense in. Will need to reopen in v2 to remove dependency of trip index.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/113#issuecomment-950962521" expanded>

Fix attempted via #126 - could you see if the issue still occurs?
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/185#issuecomment-955647624" expanded>

not a bug - expense will be automatically assigned if only a single person exists in the expense.

might need to update UG to reflect this feature.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/173#issuecomment-955895772" expanded>

duplicate of #172 - closed
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/200#issuecomment-955896455" expanded>

duplicate of #172 - closed
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/201#issuecomment-955897288" expanded>

not a bug - this is intended (only 1 open trip at one time)

need to update UG to reflect this.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/177#issuecomment-955898027" expanded>

bug results from #178 - closed
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/108#issuecomment-955898462" expanded>

enhancement discarded - lack of time.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/189#issuecomment-955899326" expanded>

duplicate of #172 - closed
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/211#issuecomment-956248412" expanded>

Reopened - pending fixes for invalid dates after epoch
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/176#issuecomment-956250033" expanded>

closed via #219 
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/188#issuecomment-956250160" expanded>

closed via #219
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/204#issuecomment-956258542" expanded>

closed via #219 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/170#issuecomment-957190613" expanded>

closed through #219 
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/187#issuecomment-957196560" expanded>

fixed through #224 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/192#issuecomment-957201559" expanded>

fixed though #224 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/172#issuecomment-957204904" expanded>

fixed through #219 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/164#issuecomment-957225891" expanded>

fixes #171 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/183#issuecomment-957228227" expanded>

to fix via #227 
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/284#issuecomment-963158854" expanded>

merged by administrator override
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/290#issuecomment-963168088" expanded>

merged by administrator override
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/291#issuecomment-963176137" expanded>

merged by administrator override
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/293#issuecomment-963193273" expanded>

(merged by administrator override)
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/165#issuecomment-963194684" expanded>

closing v2.1
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/295#issuecomment-963204391" expanded>

(merged by admin override)
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/296#issuecomment-963207681" expanded>

(merge by admin override)
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/299#issuecomment-963224784" expanded>

merged by admin override
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/300#issuecomment-963229169" expanded>

merged by admin override
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/301#issuecomment-963237613" expanded>

(merged by admin override)
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/302#issuecomment-963238379" expanded>

(merged by admin override)
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/303#issuecomment-963243033" expanded>

(merged by admin override)
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/304#issuecomment-963246003" expanded>

(merged by admin override)
</panel>

</panel>


<panel type="info" header="### 45. William Wahyudi `@maxwireddevs` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/26#discussion_r728937738" expanded>

why arraylist
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/26#discussion_r728939633" expanded>

this one just for testing?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/26#discussion_r728941083" expanded>

this one need ah?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/26#discussion_r728941804" expanded>

this one can delete?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/26#discussion_r728942307" expanded>

this one nice
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/26#discussion_r728943189" expanded>

cute function
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/66#discussion_r736964935" expanded>

nice
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/66#discussion_r736966157" expanded>

why not put all of these into a single method
still ok though
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/9#issuecomment-940801159" expanded>

U want to add capability to import custom text from wikipedia?
</panel>

</panel>


<panel type="info" header="### 46. Lim Jia Jing `@LimJiaJing` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/2#discussion_r722834595" expanded>

Please uncomment
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/2#discussion_r722834881" expanded>

Please follow coding standard
import java.util.Scanner instead of import java.util.*
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/15#discussion_r726127465" expanded>

Nice, I like how it follows the coding standard.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/15#discussion_r726129404" expanded>

Why start running this way? Do consider putting the lines of code in run() to the main method instead
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/15#discussion_r726129553" expanded>

Nice logo!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/16#discussion_r726708130" expanded>

Nice, follows coding standard
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/16#discussion_r726708206" expanded>

Nice logo!
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/16#discussion_r726708656" expanded>

I do not understand why must a new main be created, why not put the lines of code in run in main()?
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/58#issuecomment-952205556" expanded>

Aborted.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/55#issuecomment-952684736" expanded>

Create different files (not classes)
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/42#issuecomment-952742620" expanded>

abandoned
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/108#issuecomment-955718392" expanded>

Explain better in UG that on the level of "-g ARGUMENT", parameters can be in any order
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/128#issuecomment-958964115" expanded>

Cannot be addressed in v2.1
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/100#issuecomment-958966991" expanded>

Tester made a typo in history command
</panel>

</panel>


<panel type="info" header="### 47. Alvin Tan Guo Hao `@alvintan01` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/64#discussion_r725130943" expanded>

Should this be && instead?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/74#discussion_r725649620" expanded>

Perhaps move this method to OrderValidator?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/74#discussion_r725649636" expanded>

Perhaps move this method to OrderValidator?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/74#discussion_r725649741" expanded>

Perhaps this should be getTotalRow instead of column?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/143#discussion_r731071645" expanded>

Perhaps this line can be removed and use ID instead?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/172#discussion_r732382065" expanded>

Perhaps this block of code should be after containsInvalidParameters() and containsInvalidParameterValues() to ensure that the variables exists and are valid?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/296#discussion_r740695762" expanded>

Perhaps this should be Update prescription quantity? Since the rest of the UG do not use parameters in the example.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/296#discussion_r740695883" expanded>

Perhaps this should be Update prescription staff name? Since the rest of the UG do not use parameters in the example.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724278804" expanded>

The reason for this order is because I sort the commands in alphabetical order
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724303801" expanded>

On further discussion, I think we can follow CRUD with some kind of logical sorting when we add more commands.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724305345" expanded>

For now, we will use 12 spaces although the original indentation of 8 is correct by coding standards.
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724305397" expanded>

For now, we will use 12 spaces although the original indentation of 8 is correct by coding standards.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/45#discussion_r724305452" expanded>

For now, we will use 12 spaces although the original indentation of 8 is correct by coding standards.
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/66#discussion_r725588824" expanded>

We might need this when loading data from the file so that we can ensure the stock count is accurate. Will discuss in the upcoming meeting.
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/66#discussion_r725588827" expanded>

We might need this when loading data from the file so that we can ensure the stock count is accurate. Will discuss in the upcoming meeting.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/280#discussion_r739819776" expanded>

Ok, I've updated it
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/288#discussion_r740174181" expanded>

Noted, will update it
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/288#discussion_r740174211" expanded>

Noted, will update it
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/42#issuecomment-937404528" expanded>

LGTM
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/51#issuecomment-938529500" expanded>

LGTM. Maybe can consider changing the command value to a boolean requiresOptionalParams in the future.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/55#issuecomment-938540744" expanded>

LGTM.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/56#issuecomment-938545772" expanded>

LGTM
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/59#issuecomment-938560856" expanded>

LGTM
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/73#issuecomment-939452516" expanded>

LGTM
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/74#issuecomment-939747928" expanded>

LGTM
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/76#issuecomment-940041646" expanded>

LGTM
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/86#issuecomment-940122334" expanded>

LGTM
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/91#issuecomment-940768966" expanded>

LGTM
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/94#issuecomment-940769207" expanded>

LGTM
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/93#issuecomment-940777237" expanded>

LGTM
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/95#issuecomment-940847265" expanded>

LGTM
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/101#issuecomment-941078175" expanded>

LGTM
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/103#issuecomment-941134427" expanded>

LGTM
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/106#issuecomment-942233485" expanded>

LGTM
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/111#issuecomment-942392253" expanded>

LGTM
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/112#issuecomment-942399692" expanded>

LGTM
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/114#issuecomment-942424204" expanded>

LGTM
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/116#issuecomment-942899425" expanded>

LGTM
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/117#issuecomment-943468014" expanded>

LGTM
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/121#issuecomment-944302664" expanded>

LGTM
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/125#issuecomment-944443407" expanded>

LGTM
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/46#issuecomment-945402604" expanded>

Opened an issue in the forum: https://github.com/nus-cs2113-AY2122S1/forum/issues/104
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/143#issuecomment-945948130" expanded>

LGTM
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/147#issuecomment-946001308" expanded>

LGTM
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/158#issuecomment-946336920" expanded>

LGTM
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/172#issuecomment-947297653" expanded>

LGTM
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/176#issuecomment-947539864" expanded>

LGTM
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/178#issuecomment-947556206" expanded>

LGTM
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/180#issuecomment-947556606" expanded>

LGTM
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/184#issuecomment-948224188" expanded>

LGTM
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/186#issuecomment-948451680" expanded>

LGTM
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/188#issuecomment-948452664" expanded>

LGTM
</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/193#issuecomment-949309159" expanded>

LGTM
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/194#issuecomment-949309326" expanded>

LGTM
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/200#issuecomment-950318649" expanded>

LGTM
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/222#issuecomment-951956750" expanded>

LGTM
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/227#issuecomment-952928319" expanded>

LGTM
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/231#issuecomment-953579000" expanded>

LGTM
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/274#issuecomment-955682897" expanded>

LGTM
</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/275#issuecomment-955684521" expanded>

LGTM
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/276#issuecomment-955694179" expanded>

LGTM
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/278#issuecomment-955701919" expanded>

LGTM
</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/issues/262#issuecomment-956252094" expanded>

Thanks for your suggestion.
</panel>

<panel  header="**64 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/296#issuecomment-957201136" expanded>

LGTM
</panel>

<panel  header="**65 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/300#issuecomment-957801196" expanded>

LGTM
</panel>

<panel  header="**66 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/308#issuecomment-960756362" expanded>

LGTM
</panel>

<panel  header="**67 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/314#issuecomment-961209751" expanded>

LGTM
</panel>

<panel  header="**68 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/319#issuecomment-961935859" expanded>

LGTM
</panel>

<panel  header="**69 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/320#issuecomment-961956890" expanded>

LGTM
</panel>

<panel  header="**70 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/328#issuecomment-962563946" expanded>

LGTM
</panel>

<panel  header="**71 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/329#issuecomment-962606821" expanded>

LGTM
</panel>

<panel  header="**72 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/331#issuecomment-962606872" expanded>

LGTM
</panel>

<panel  header="**73 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/338#issuecomment-962648764" expanded>

LGTM
</panel>

<panel  header="**74 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/341#issuecomment-962650525" expanded>

LGTM
</panel>

<panel  header="**75 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/342#issuecomment-962650543" expanded>

LGTM
</panel>

<panel  header="**76 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/347#issuecomment-962651628" expanded>

LGTM
</panel>

<panel  header="**77 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/348#issuecomment-962652538" expanded>

LGTM
</panel>

<panel  header="**78 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/350#issuecomment-962654395" expanded>

LGTM
</panel>

<panel  header="**79 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/354#issuecomment-962659596" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 48. Chew Yi Jie `@ChewyChair` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/24#discussion_r722272734" expanded>

Should we move this to the data folder (e.g. data/timetable/) ?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/24#discussion_r722274500" expanded>

Referring to the 3 json files below and my previous comment, would it be better to move the jsons into /data/ so git does not track them for now?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/26#discussion_r722869694" expanded>

Should we move this to data/timetable to consolidate all of our saved data in one directory instead?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/26#discussion_r723132374" expanded>

In that case can this method be removed without breaking the code? @Poopies99 might also need to resolve the merge conflict due to @aditichadha1310's PR that was merged earlier.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/59#discussion_r726740235" expanded>

Just curious, what is the period for? Is it for compatibility with MacOS/Linux?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/60#discussion_r726795429" expanded>

Perhaps you could abstract this method into many other smaller methods? Currently it is over 100 LoC long.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/60#discussion_r726796323" expanded>

Perhaps all of these 'if' clauses could be abstracted into their own methods.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/60#discussion_r726800931" expanded>

What happens if parseInt() throws a NumberFormatException here? I could be wrong but it does not seem like anything prevents the user from inputting a non integer in getLessonCommand nor is there any catch statement for NumberFormatException.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/13#discussion_r719115220" expanded>

Nope, there's another one that reads from the loaded modList but there isn't one that reads from the .json directly yet.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/27#issuecomment-935982774" expanded>

LGTM, really nice JavaDocs. Merging!
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/63#issuecomment-941039076" expanded>

Nevermind, MacOS is garbage
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/46#issuecomment-948592833" expanded>

Already resolved in #58 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/35#issuecomment-948593893" expanded>

Resolved by #58 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/78#issuecomment-948597580" expanded>

Ah my bad, will fix all checkstyle errors right now.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/80#issuecomment-949612965" expanded>

There are some checkstyle errors to be fixed
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/109#issuecomment-955654677" expanded>

Documentation about chcp added in UG.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/110#issuecomment-955654856" expanded>

Added a clearer error message.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/113#issuecomment-955655272" expanded>

`ENTER` can abort, but was not stated in UG.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/114#issuecomment-955655456" expanded>

`show` command is clearly at the bottom of the screenshot.
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/116#issuecomment-955655684" expanded>

Invalid command syntax.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/117#issuecomment-955655718" expanded>

Search is only for module code.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/119#issuecomment-955656135" expanded>

Intentional behavior that was not specified in UG.
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/120#issuecomment-955656181" expanded>

Duplicate of #115 
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/127#issuecomment-955656393" expanded>

Faculty search in v2.0 has to be an exact match. Output is correct.
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/128#issuecomment-955656500" expanded>

Duplicate of #113 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/131#issuecomment-955656578" expanded>

Duplicate of #116
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/132#issuecomment-955656682" expanded>

`-3` is treated as an invalid flag and thus ignored in v2.0. Output is correct.
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/146#issuecomment-955656894" expanded>

Duplicate of #132 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/165#issuecomment-955657888" expanded>

Duplicate of #127 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/157#issuecomment-955657975" expanded>

Intentional design
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/168#issuecomment-955658037" expanded>

Duplicate of #127 
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/170#issuecomment-955658214" expanded>

Duplicate of #112 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/173#issuecomment-955659197" expanded>

Only reproducible by tampering with files in the local storage.
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/171#issuecomment-955659384" expanded>

Is mentioned in the UG.
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/145#issuecomment-957842198" expanded>

Resolved in #177 
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/184#issuecomment-959683727" expanded>

LGTM, but currently has merge conflicts
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/189#issuecomment-962554475" expanded>

LGTM!
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/136#issuecomment-962554548" expanded>

Duplicate of #135 
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/137#issuecomment-962554571" expanded>

Duplicate of #135 
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/176#issuecomment-962554602" expanded>

Duplicate of #135 
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/140#issuecomment-962554634" expanded>

Duplicate of #135 
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/142#issuecomment-962554731" expanded>

Duplicate of #135 
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/191#issuecomment-962644760" expanded>

![](https://c.tenor.com/9SZqIlncReoAAAAC/battlestar-galactica-lee-adama.gif)
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#issuecomment-962793067" expanded>

Some comments not resolved but if it works it works
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/139#issuecomment-962799532" expanded>

Duplicate of #162
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/195#issuecomment-962827831" expanded>

LGTM!
</panel>

</panel>


<panel type="info" header="### 49. Tay Weida `@weidak` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725516860" expanded>

Hmm for this method, I think we should pass the ArrayList to Ui to handle printing of lists instead of printing here 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725668795" expanded>

Is it possible to add a toFileTextString() method that puts it in a form that we will be saving it? 
Maybe it can return this.getName() + "|" + this.getCalories(); so we can store a food item as "chicken rice|660" in the .txt file
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725668870" expanded>

Is it possible to add a toFileTextString() method that puts it in a form that we will be saving it? 
Maybe it can return this.getName() + "|" + this.getCalorie(); so we can store a exercise item as "2.4km run|509" in the .txt file
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r730422687" expanded>

Yep! I think we would also need them to key in their Age too as well as a selection process for their Basal Metabolic Rate, as there's like different activity factor to consider in our calculations for calories burnt.
Theres like 5 modes of BMR so I was thinking maybe you will reach a stage where it will show:

```
Age: (wait for user input)
Activity Levels: (wait for user input)
1. Sedentary - Little or no exercise
2. Lightly Active - Light exercise or sports, around 1-3 days a week
3. Moderately Active - Regular exercise or sports, around 3-5 days a week
4. Very Active - Frequent exercise or sports, around 6-7 days a week
5. If you are extra active - Sports or exercising is your passion and a physical jobscope (I think can omit this if its too extra)
```
and any inputs from 1-5 lets you select your activity factor. (Pass their input to me can already then I will process it)
If have any other thoughts feel free to discuss with me ah but I think that's about it for setting up the profile :) 
Thanks Yi Zhi!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r732488250" expanded>

Should it be name.equals(EMPTY_STRING) instead to make it more appropriate, but trivial stuff ah. Thanks for adding this in 👍 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/102#discussion_r733263587" expanded>

If I'm not wrong, interfaces should end with "-able" but I dont think Parsable is a word so shd be fine right HAHAH
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/119#discussion_r734972239" expanded>

Looks good to put it in this method! I think there's still room for improvement though as it does not make much sense to throw the exception outside of this method. Would it be better if we handle it inside here, and Ui.print(e.getMessage) if we do get an error saving the file?
honestly, I dont think there should be an error in saving the file here unless the user deletes it in the process of starting the app and setting up his profile
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/203#discussion_r739816263" expanded>

Remember to write JavaDocs for your classes
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r724704397" expanded>

Same, i not sure if we should be creating multiple profiles for multiple users. potential expansion?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r725452148" expanded>

Good point, missed that out.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726906411" expanded>

Oops yeah forgot to remove it, but i'll leave it there for now for debugging purposes 👍 Thanks yi zhi
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726907003" expanded>

Okie sure, will update the user guide respectively. Thanks rui yang 👍 
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726908894" expanded>

Good points, will update those for future iterations of the product. Thanks Le Yi and Rui Yang for pointing out!
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r727176874" expanded>

👍 Sure thank u!
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/102#issuecomment-948203744" expanded>

> btw i see u have unresolved merge conflict which i cannot have a look because github says it is too complex :O

I think it came up after merging my PR. After merging, I noticed a problem with my storage too... Give me a while to take a look paiseh guys
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/50#issuecomment-948568801" expanded>

Thanks for solving the conflicts! Looks good
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/158#issuecomment-953955781" expanded>

Looks good!
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/163#issuecomment-954439715" expanded>

Thanks for fixing minor bug issues with the output! Looks great and I think we can update our release for v2.0! :)
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/167#issuecomment-954448768" expanded>

thanks for fixing the broken links in user guide! looks good to merge :)
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/177#issuecomment-955207217" expanded>

Looks good! Thanks for updating my implementation 👍 
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/204#issuecomment-956099632" expanded>

We believe that our current implementation is fine because you are able to do multiple exercises in a day, and that the value of the time of exercise does not really matter so long as you perform the exercise on the day itself. For instance, you can have multiple runs scheduled for tomorrow itself, and it may be up to you to name the distance/type of run you might be doing. 
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/194#issuecomment-956119279" expanded>

There are people with special characters in their name so I think we will be accepting the name so long as it does not contain / or |.
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/192#issuecomment-956121621" expanded>

We tried replicating the issues given in the screenshot but it worked as per usual and we did not reach the same bug as the user.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/191#issuecomment-956122686" expanded>

We will make this clearer by implementing commas to separate out the days of the week
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/189#issuecomment-956124833" expanded>

It was already explained in the ug that we do not allow duplicate item names for itembank as the same items should have the same calories unless defined otherwise by the user
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/187#issuecomment-956126603" expanded>

Trim input
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/186#issuecomment-956128071" expanded>

Not very clear that past week is inclusive of today in the ug
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/182#issuecomment-956133172" expanded>

![image](https://user-images.githubusercontent.com/70256674/139661661-82b9a1c2-f295-493d-821c-d4cc70a8aaf9.png)

Error message should state that the string cannot be empty but we are unable to replicate the issue presented by the user following his limited steps provided for us
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/205#issuecomment-956137241" expanded>

Add prompt for "bye" to exit: 1 to exit, 2 to set "bye" as name and 3 to set another name
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/196#issuecomment-956138003" expanded>

Same issue as #205 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/236#issuecomment-962911341" expanded>

Looks good to merge!
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/237#issuecomment-962934626" expanded>

Looks good to merge! 
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/239#issuecomment-962991086" expanded>

Thanks for adding the new Data segment in the developer's guide! Looks good.
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/245#issuecomment-963208035" expanded>

Looks good
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/246#issuecomment-963208292" expanded>

Looks good to merge!
</panel>

</panel>


<panel type="info" header="### 50. Kishor Kumar Haribaskar `@KishorKumar11` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/69#discussion_r725734516" expanded>

Hey! Just here to inform you that JavaDoc is not necessary for methods or variables that are self-explanatory 😃 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/97#discussion_r730236799" expanded>

Lines 117 & 125. Format should be for `remove` instead of `done`.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/167#discussion_r735052420" expanded>

Do we have to add our actual pic? 😄 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/192#discussion_r739634052" expanded>

Is it compulsory to link to another file instead of just writing it down here?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/192#discussion_r739665005" expanded>

Oh if we are adding other guides then sure
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/271#discussion_r744106139" expanded>

Explanation of workout index is repeated
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/271#discussion_r744106415" expanded>

Nice
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/271#discussion_r744106616" expanded>

Full stop in the end (can amend later also)😄
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720771587" expanded>

Thanks for the suggestion. I thought that it would be better to standardize all the print messages in `Ui` class.  Perhaps, should I just convert this to inline under `run()` in `Duke.java` ?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720771783" expanded>

We will be calling `executeUserCommand`, present in the `Command` classes, from this method. This is done to optimize the use of OOP concept.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720771852" expanded>

Thank you for the suggestion, will do!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720783978" expanded>

Oh, I understand now 😄. Yup, both your ideas are good! I had the first one in mind but like you mentioned, the code quality can be done after v1.0
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720797433" expanded>

Got it! Will rename it, thanks
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/59#discussion_r725629372" expanded>

Yes just rechecked my log file, you are right. Could you amend the change when fixing your issue? Thank you 😄 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/108#issuecomment-945051212" expanded>

👍🏽 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/264#issuecomment-961149416" expanded>

Resolved merge conflict  in  `UserGuide.md `  from Ishaan's PR.
</panel>

</panel>


<panel type="info" header="### 51. Lee Yi Kai `@leeyikai` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/55#discussion_r726824770" expanded>

Might not need this as we can just get from the listOfPersons! 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/64#discussion_r727685705" expanded>

Just checking, is this supposed to print something or isit just a new line?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/109#discussion_r734988326" expanded>

To make it cleaner, can consider writing it as '''openTrip = Storage.getOpenTrip()'''
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/110#discussion_r734990752" expanded>

can consider setting a variable to represent ```Storage.getListOfTrips()``` since it is repeated 3 times
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/112#discussion_r735080877" expanded>

Is this meant to be empty?

</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/123#discussion_r735453183" expanded>

Do you want to put this try-catch block in the case statement instead? Thought might be better but its optional :)
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/248#discussion_r744016911" expanded>

Should this be `view last` to view **last** expense?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/251#discussion_r744142820" expanded>

You might want to consider removing magic numbers here
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/31#discussion_r723079769" expanded>

Edited this!
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/146#discussion_r736530743" expanded>

Fixed this in latest commit
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/4#issuecomment-930781984" expanded>

got conflict
</panel>

</panel>


<panel type="info" header="### 52. Mayank Panjiyara `@mayankp291` (8 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/17#discussion_r723391670" expanded>

Good use of switch cases and SLAP
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/17#discussion_r723392913" expanded>

Good job with the exceptions
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/17#discussion_r723393510" expanded>

Good function naming and formatting
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/57#discussion_r727725517" expanded>

Message is properly formatted, good job.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/104#discussion_r735746022" expanded>

Good use of comments to explain the method
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/161#discussion_r740217859" expanded>

Nice and clean implementation, will fix the index "me" issue.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/167#discussion_r742814095" expanded>

Updated info looks good.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/167#discussion_r742815095" expanded>

Good job in commenting to take the sections clear for the reader
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/pull/187#discussion_r744234272" expanded>

Thanks for pointing out, will change as requested
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/105#issuecomment-951076706" expanded>

Delete specific fields by specifying flags of a contact
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/103#issuecomment-952042118" expanded>

Streamline exception messages
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/115#issuecomment-952131190" expanded>

Fix using regex check for numbers
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/131#issuecomment-955285035" expanded>

Update assert to >= -1 in ViewContactCommand.java
![image](https://user-images.githubusercontent.com/69447074/139538536-8c061abd-8b57-4dbb-8300-275b7438c248.png)

Probably trying to access personal contact from wrong place, can follow execution and fix.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/134#issuecomment-955285680" expanded>

Update regex
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/142#issuecomment-955414580" expanded>

Github stores usernames as lowercase in their database, however we can still allow Uppercase for v2.1
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-1/tp/issues/152#issuecomment-955731145" expanded>

If user imports 100s of contacts and all are duplicates, there would be 100s of prompt messages for duplicates, this is too annoying from a user experience perspective
</panel>

</panel>


<panel type="info" header="### 53. ISHAAN VYAS `@IshaaanVyas` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720758108" expanded>

Perhaps this could be part of the Ui instead? it does make sense for it to be in Parser class too so there's no need to change it, just that the example code structure had it in the Ui class 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720758450" expanded>

Perhaps this class could be merged with Parser since for now the only task it does is "parseUserCommand". Please ignore this suggestion if this class has a specialised function later in the future.

Or maybe can simply rename the method to executeUserCommand if that is what its meant to do
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720772886" expanded>

Yup it does make sense, I don't think anything shd be changed in that case.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720772752" expanded>

In that case, maybe we could return a `Command` object in this method and execute it in the `Duke.run()` method?
Since it might be confusing for someone to see the command getting executed inside a "parse" function. Or we could rename it to `parseAndExecuteCommand()` (although that does make it a bit too long) so that people know exactly what the method does. Could also add it under the documentation but I feel changing its behaviour or name makes it easier to understand.

On second thought, these code quality improvements can be done after we have a working v1.0, so this could be ignored for now
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/68#discussion_r725735028" expanded>

Here we could change the level to Warn maybe? cause the console handler is setup to log into the terminal when the level is Severe and we are already printing the exception error message to the user so having 2 error messages could be confusing.
Alternatively, we could not add the console handler to the logger in `setupLogger()` so there's no logs being printed to the user in any case
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/68#discussion_r725740029" expanded>

Maybe you could let this code stay cause in the case the filehandler is not created and the exception is caught then the console handler needs to show the log
Removing it from the `setupLogger()` function will still ensure that none of the other classes log into the console, only if there's an exception in `loggerUtilSetup()` then it is logged
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/129#discussion_r732399718" expanded>

why cant we just use `getAllExercises()` alone?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722230927" expanded>

yeap, forgot to change it, thanks
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722232949" expanded>

there's a getter for this ArrayList if needed, but most commands don't need the ArrayList to be accessed eg. WorkoutList has `addWorkout` , `removeWorkout` and `getWorkout` so we don't have to worry about manipulating data in the actual ArrayList itslef
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722233880" expanded>

Thanks for pointing it out
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722234070" expanded>

Done
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/192#discussion_r739635661" expanded>

In this part, we could add more guides such as documentation guide and testing guide and so on. If we link to separate docs can concurrently work on them. (Idk man I just copied address book level 3).
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/82#issuecomment-944859329" expanded>

For now, this command only changes a static variable in the Command object. Will make it affect the user input later on
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/2#issuecomment-945759911" expanded>

Satisfies #114 and #115 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/98#issuecomment-945761169" expanded>

Satisfies #117 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/120#issuecomment-946314409" expanded>

Added the enter and back commands into the features section of the UG and modified the command summary table abit
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/120#issuecomment-946315058" expanded>

Also added some user stories into the DG
</panel>

</panel>


<panel type="info" header="### 54. Toh Yi Zhi `@tttyyzzz` (7 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/33#discussion_r725440121" expanded>

Perhaps you could try when height equals to 0 or to make condition of checkHeightValidity() to height &gt;= 0 instead.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725726457" expanded>

Perhaps == 2 instead of >= 2as the top only string only split the string into 2 parts
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/38#discussion_r726279830" expanded>

Nice method
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r726717261" expanded>

perhaps you might want to change the error into messages instead of printing the whole stacktrace for future revisions.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/40#discussion_r726836996" expanded>

Its good to remove magic numbers. Good job!
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/47#discussion_r728550623" expanded>

Thanks for changing spelling mistakes
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/217#discussion_r742581641" expanded>

Perhaps if there is time try to remove magic number
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r725106413" expanded>

Do you have any ideas on how I could improve on the design?
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/32#discussion_r725106475" expanded>

Do you have any ideas on how I could improve on the design?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r730289861" expanded>

Great idea! Let me think about how to implement it.
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/80#discussion_r732709127" expanded>

Thanks for pointing it out!

</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/203#discussion_r739858718" expanded>

Thanks for reminding! will do it few hours later.

</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/216#discussion_r742455992" expanded>

yep its a feature

</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/31#issuecomment-937401411" expanded>

checks not passed
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/41#issuecomment-941899268" expanded>

yes confirm merge
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/issues/193#issuecomment-955770419" expanded>

duplicate of #185 
</panel>

</panel>


<panel type="info" header="### 55. BERNARD BOEY KHAI CHEN `@bernardboey` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#discussion_r725451262" expanded>

Perhaps rename this as `MESSAGE_RECIPE_LIST`? This is to make it standardised because we usually start messages with `MESSAGE_`
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#discussion_r725451326" expanded>

Rename to `MESSAGE_SHOW_RECIPE` to confirm with coding standard?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#discussion_r725451480" expanded>

I suggest renaming this to `getWholeRecipeList()` or something else, because it doesn't actually print out the recipe here, it only returns the string of the recipe list.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#discussion_r725451759" expanded>

What if the specified recipe is not available? I think it will be `null` in that case. We should probably handle that case and print out an error message.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#discussion_r725459460" expanded>

Perhaps just return a string? I don't think we need to use `IncorrectCommand` here. For example:
```
private static final String MESSAGE_EMPTY_RECIPE_LIST = "The recipe list is currently empty!";
return MESSAGE_EMPTY_RECIPE_LIST ;
```
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#discussion_r725459505" expanded>

Same comment as before:
```
private static final String MESSAGE_RECIPE_NOT_FOUND = "Sorry. No matching recipes found!";
return MESSAGE_RECIPE_NOT_FOUND ;
```
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/92#issuecomment-955709067" expanded>

Duplicate of #91
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/93#issuecomment-955710724" expanded>

~Bug not reproducible.~ However, we will prevent units from being numbers. Units must be all letters (e.g. `grams`). We will also prevent ingredients and recipe names from having numbers.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/94#issuecomment-955711235" expanded>

We will remove the ability to add quantities and expiry dates for the `add` command.

Additionally, we will have a clearer error message. Example:

```
Unable to add ingredient: Red Apple
You already have it in your list
Please use the `increment` command to add quantities for an ingredient
```
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/95#issuecomment-955711555" expanded>

Our documentation is correct ("before" is correct). To make it clearer, we will give an example of an expired vs unexpired expiry date.
</panel>

</panel>


<panel type="info" header="### 56. Tng Jun Wei `@Journeyman1998` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/18#discussion_r724176608" expanded>

This should be handled by deleteExpense(id), so we won't need this
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/18#discussion_r724177721" expanded>

This can be initialized in the exception thrown by deleteExpense. Maybe we can place all the error messages, etc in a separate class, so we can reuse them - not sure about this part
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/18#discussion_r724179033" expanded>

Not necessary, as the picocli will show error messages if the parameter and option values are not provided
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/18#discussion_r724183090" expanded>

Maybe this can be a constant variable, like expenseListHeader or something?
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/25#discussion_r730191957" expanded>

Maybe you can increase the padding to 10 or more instead? I tried adding "1" and "1000" and the alignment was off
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/25#discussion_r730192030" expanded>

The header for value should follow the padding of the budget value
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/4#issuecomment-931120900" expanded>

LGTM
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/20#issuecomment-937927580" expanded>

Apparently, our UI cannot be tested with the text-ui-test, as I included a timeout in the ui.

The timeout is necessary to ensure that picocli errors were printed before the scanner reads the next line.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/25#issuecomment-944835490" expanded>

You can check out irfan's PR on resolving the alignment issue
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/40#issuecomment-949120453" expanded>

Please resolve the conflict.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/issues/48#issuecomment-955167030" expanded>

Thanks for the comments Kai Wen, I will make the changes to the DG.
</panel>

</panel>


<panel type="info" header="### 57. Wang Zhihuang `@zh1huang` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#discussion_r727692421" expanded>

Don't need "seedu.duke.model.exception."?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/101#discussion_r736268651" expanded>

I suppose HelpCommand here is just a placeholder for now?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/101#discussion_r736269737" expanded>

Why do you change to this from `String itemName = matcher.group("itemName")`?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/101#discussion_r736272785" expanded>

Perhaps it would be more clear to use prepareCreateShelf and prepareRemoveShelf to avoid confusion with prepareAdd and prepareDelete
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/223#discussion_r744058670" expanded>

Seems incomplete?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/265#discussion_r744278998" expanded>

Skips from 1 to 3?
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r726823436" expanded>

Good catch, amended
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727143192" expanded>

To compare the output of print statement to expected output
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727322781" expanded>

As discussed, we will not be using static.
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727350091" expanded>

We follow the execute method in Command abstract class, which takes in list as parameter. @haoyusimon please confirm
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727620982" expanded>

Noted on this, will KIV
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727621106" expanded>

Noted on this, will KIV
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727644024" expanded>

Created new issue for this and will implement under v2.0 as discussed
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#discussion_r727644194" expanded>

As discussed, we will stick with this and discuss again for v2.0 if change is required
</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/38#discussion_r728152465" expanded>

As discussed with @haoyusimon, we put as assertion because if the list is null, then any exception handling won't work either ways.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/63#discussion_r730372771" expanded>

@haoyusimon will be redesigning editCommand(). After it's done, the assertEquals() without the .getClass() should work
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/63#discussion_r730831566" expanded>

I thought list in this case refers to 'list of items' on the shelf
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730832525" expanded>

Oh okay, you guys can just remove this then
</panel>

<panel  header="**19 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730832862" expanded>

Oh okay understood. Cos I thought if I add these 2 commands I have to update the UG correspondingly
</panel>

<panel  header="**20 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730833126" expanded>

Okay will do
</panel>

<panel  header="**21 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/71#discussion_r730860193" expanded>

I see, understood. Will try to adopt the good practices next time! :)
</panel>

<panel  header="**22 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/63#discussion_r731457742" expanded>

Created a separate issue for this
</panel>

<panel  header="**23 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/262#discussion_r744383610" expanded>

Fixed, thanks!
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#issuecomment-939310718" expanded>

Agreed with Hao Yu on the part of adding JavaDocs. It will allow the other members to understand your code better so that they can add on easily.
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/24#issuecomment-939479310" expanded>

As discussed, ContainerList can be temporarily removed for v1.0 as it is not yet required. Otherwise, looks good to merge!
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/27#issuecomment-940611901" expanded>

Looks good to merge
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/28#issuecomment-941159809" expanded>

For ParserTests, some of the tests are handled with placeholders currently. 

Parser.parsecommand now returns Command instead of String
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/34#issuecomment-941916309" expanded>

Generally looks fine to merge. Commands and implementations are consistent with mine.
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/37#issuecomment-942313354" expanded>

Looks good to merge.
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/46#issuecomment-943403412" expanded>

Looks good to merge
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/56#issuecomment-944883638" expanded>

Includes getting other attributes such as category, price, quantity etc.
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/58#issuecomment-944884247" expanded>

Do we need to add quantity?
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#issuecomment-944953724" expanded>

**2 issues from me:**
1. Should we be making ContainerList have a more intuitive naming? Since we are using them for the categories of the item, I thought making it something like CategoryList would be better.

2. Should we be only allowing certain names of ContainerList/CategoryList be valid? Specifically: Books, stationaries, electronics etc (I guess that might be under Parser)
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/60#issuecomment-945128860" expanded>

Looks good to merge
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/pull/74#issuecomment-947683761" expanded>

Looks good to merge.
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/163#issuecomment-955617304" expanded>

Duplicate of #164 
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/160#issuecomment-955617363" expanded>

Duplicate of #164 
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/140#issuecomment-955617441" expanded>

Duplicate of #134
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/159#issuecomment-955617501" expanded>

Duplicate of #164 
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/133#issuecomment-955617544" expanded>

Duplicate of #164 
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/131#issuecomment-955617575" expanded>

Duplicate of #164 
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/137#issuecomment-955617603" expanded>

Duplicate of #164 
</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/153#issuecomment-955617642" expanded>

Duplicate of #164 
</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/144#issuecomment-955617668" expanded>

Duplicate of #164 
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/138#issuecomment-955617725" expanded>

Duplicate of #164 
</panel>

<panel  header="**46 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/141#issuecomment-955617822" expanded>

Duplicate of #164 
</panel>

<panel  header="**47 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/155#issuecomment-955617924" expanded>

Duplicate for #120 
</panel>

<panel  header="**48 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/152#issuecomment-955617961" expanded>

Duplicate of #164 
</panel>

<panel  header="**49 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/145#issuecomment-955618061" expanded>

Duplicate of #164 
</panel>

<panel  header="**50 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/149#issuecomment-955618321" expanded>

Duplicate of #136 
</panel>

<panel  header="**51 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/161#issuecomment-955618405" expanded>

Duplicate of #123 
</panel>

<panel  header="**52 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/157#issuecomment-955618965" expanded>

Duplicate of #122 
</panel>

<panel  header="**53 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/156#issuecomment-955620026" expanded>

Duplicate of #164 
</panel>

<panel  header="**54 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/139#issuecomment-955620503" expanded>

Duplicate of #151 
</panel>

<panel  header="**55 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/154#issuecomment-955620798" expanded>

Duplicate of #134 
</panel>

<panel  header="**56 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/135#issuecomment-955621262" expanded>

Invalid command used (`create SHELF_NAME` instead of `create shlv/SHELF_NAME`), but nonetheless have updated UG to explicitly clarify the acceptable inputs for `SHELF_NAME`
</panel>

<panel  header="**57 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/158#issuecomment-956000067" expanded>

Duplicate of #178 
</panel>

<panel  header="**58 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/170#issuecomment-957039883" expanded>

Duplicate of #182 
</panel>

<panel  header="**59 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/169#issuecomment-957275102" expanded>

this is to allow users to enter long names that exceed the name column, we will only print out portion of it that fits within the column. user can use `get` to retrieve the full length

</panel>

<panel  header="**60 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/169#issuecomment-957276978" expanded>

also need to update userguide about this incase it gets flagged out as bug (bcos its not)
</panel>

<panel  header="**61 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/192#issuecomment-959140997" expanded>

Change the list's index to be 1-25, 26-123, 124 for picture above
So that we can edit/get/delete each entry while being able to compress the list together
</panel>

<panel  header="**62 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/192#issuecomment-959695911" expanded>

![image](https://user-images.githubusercontent.com/59475240/140104247-b7d87ff4-3865-4eb6-849f-ac9bd914ffbc.png)

</panel>

<panel  header="**63 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-4/tp/issues/192#issuecomment-960376428" expanded>

to add padding for the numbers eg 001-005?
allow users to key in both 001 and 1 as indexes
</panel>

</panel>


<panel type="info" header="### 58. Koh Qianqi `@qqkoh` (6 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720802428" expanded>

yeah I agree with Ishaan's first suggestion.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722217991" expanded>

(I might be wrong) but I think exercises should be an instance and not static, since for each workout there are different lists of exercises
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722218752" expanded>

where as I think workouts should be static, since in the entire Duke there will be one single list of workouts.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722220499" expanded>

maybe rename the index to displayIndex just to be extra clear
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722222127" expanded>

i think this one should be index-1
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/16#discussion_r722235563" expanded>

ah ok got it
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/129#discussion_r732405794" expanded>

yeah forgot to get rid of that. i was messing around
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/15#issuecomment-934359986" expanded>

Yep looks good
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/23#issuecomment-935727912" expanded>

Add JUnit for executeUserCommand
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/30#issuecomment-936411148" expanded>

if used with /w then extra space is created
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/81#issuecomment-947483412" expanded>

Satisfies #138 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/159#issuecomment-950283140" expanded>

satisfies #160 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/228#issuecomment-956068205" expanded>

Update user guide to clarify that users can search by date as well
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/227#issuecomment-958990027" expanded>

add to ug that search will search in all workouts even in workout mode
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/261#issuecomment-959058568" expanded>

Fixes #193
</panel>

</panel>


<panel type="info" header="### 59. SHI ZHANSEN `@DuckWillow` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/16#discussion_r727337975" expanded>

This method is suggested on week7, in A-MoreOOP
![image](https://user-images.githubusercontent.com/71874189/136999845-9dcff364-9c1c-4ad7-995d-8e2ec0a18790.png)

</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/32#discussion_r730210591" expanded>

Two game modes are added.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/32#discussion_r730210648" expanded>

Nice adding content selection.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/87#discussion_r739169897" expanded>

nice change.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/145#discussion_r742621848" expanded>

More details are good!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/92#issuecomment-962906153" expanded>

Not able to solve. Same problem occurs on the TimeLimitMode too.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/83#issuecomment-962907796" expanded>

Already solved in the latest DG update.
</panel>

</panel>


<panel type="info" header="### 60. Hu Kairui `@KairuiHu` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/24#discussion_r725420391" expanded>

It is a good practice to declare the type of date as LocalDate
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/25#discussion_r725444734" expanded>

This is a good implementation to check if the ingredient is expiring soon. This feature is also one of the most critical parts of the app.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/25#discussion_r725444833" expanded>

It is a good practice to remove the redundant code.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/45#discussion_r732086894" expanded>

Good to separate the two lines
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/45#discussion_r732088053" expanded>

Good to make the output neater
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#issuecomment-939249569" expanded>

Two commits are added. As the first commit fails the checks, the second commit with improved code quality is added.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/26#issuecomment-939259017" expanded>

The last two commits are added to handle the null cases
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/45#issuecomment-946936079" expanded>

Good so far
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/72#issuecomment-952895032" expanded>

The third commit fixes the bugs in my part for loading and saving
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/107#issuecomment-955718130" expanded>

Thanks for the suggestions. We will modify our code to ensure that units are not integers, as this is not meaningful.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/107#issuecomment-955718316" expanded>

Related to #102 and #93 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/108#issuecomment-955718765" expanded>

This is not a bug. We will add more examples in the User Guide to make it clearer.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/109#issuecomment-955719090" expanded>

Thanks. We will fix this issue.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/110#issuecomment-955719350" expanded>

Related to #102 and #93. We will update our code to ensure the units are not integers.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/111#issuecomment-955721367" expanded>

Thanks for your suggestions. We will improve our User Guide to make it clearer and more understandable.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/24#issuecomment-962559166" expanded>

You did a good job in improving the structure of the code to make the logic clearer and more organized. Meanwhile, you managed to make the code more OOP, which also helps the rest of the teammates to have a better understanding of the meaning and flow of the whole program. Perhaps, more parser classes could be added in future work like unit parser which enables users to update units for ingredients.
</panel>

</panel>


<panel type="info" header="### 61. Lee Ting Shen Leyond `@leyondlee` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/76#discussion_r726352607" expanded>

This check is redundant as `studentList.deleteStudent(studentIndex);` at line 58 will return null if it fails to delete due to invalid index.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/76#discussion_r726353589" expanded>

Redundant. `studentList.getStudentAt(studentIndex)` will return null if invalid index.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/256#discussion_r744145628" expanded>

Should be `n/...` not `nn/...`
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/292#discussion_r744299039" expanded>

Change to `isStringDouble(maximumMarksString, 2)` to only allow 2dp
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/292#discussion_r744299124" expanded>

Change to isStringDouble(maximumMarksString, 2) to only allow 2dp
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/22#issuecomment-953849981" expanded>

PR #131 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/201#issuecomment-957273937" expanded>

Duplicate of #167 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/177#issuecomment-957280284" expanded>

Intended
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/249#issuecomment-962447128" expanded>

1. Are there 2 assessments when you run `list_assessment`?
2. Also can remove "the"?
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/257#issuecomment-962551488" expanded>

Because `n/OP2` is not recognized as a argument itself, the string is considered part of `c/...`. So for `c/`, it is reading the value as `CS2101-C03 n/OP2`, which contains an invalid character `/`.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/257#issuecomment-962551508" expanded>

Should be `a/`
</panel>

</panel>


<panel type="info" header="### 62. Sthitipragyan Samal `@pragyan01` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/107#discussion_r730445348" expanded>

Awesome Work!
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/110#discussion_r730685615" expanded>

excellent work, you have done well Lord Vishal! 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/114#discussion_r730833678" expanded>

i r8 this 10/10 m8
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/138#discussion_r733433234" expanded>

nice lah
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/169#discussion_r736743954" expanded>

cool cool cool 
</panel>

</panel>


<panel type="info" header="### 63. Tan Xing Jie `@xingjie99` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725579406" expanded>

hello ruiyang, let's try and standardize our static final messages to be printed so that we are able to make the app look more unified and coherent
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/34#discussion_r725579586" expanded>

my addExercise method is similar to this one, perhaps we can just use this one :)
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/36#discussion_r725580524" expanded>

i think that this is a not bad suggestion, i will edit ExerciseList class to clear array list if we are proceeding with this idea
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r727111364" expanded>

i think that the comment here can be removed since calories goal will not be initialize to 0 first :)
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#discussion_r727144446" expanded>

hello weida i think my toFileTextString should be up already, maybe you can try to see if you can find it under the Exercise class and let me know if there's any issue
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/35#discussion_r725579323" expanded>

yes I agree, with this and the delete and size methods. Also one thing to consider is that we should standardize our static final messages to be printed so that the whole app will look more coherent :) i have added a comment under your pull request regarding this
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/39#issuecomment-941024425" expanded>

Added some comments on certain lines of codes, otherwise looks good! :) good job
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/45#issuecomment-942390464" expanded>

> nice! It is good to standardize the naming throughout the whole code, thanks for the effort made!

Thanks yizhi for checking the logging for my part as well! :)
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/53#issuecomment-943490246" expanded>

Looks wonderful :D
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/57#issuecomment-944311526" expanded>

all's good
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/81#issuecomment-945136495" expanded>

looks good for developing future list! good to merge
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/102#issuecomment-948198725" expanded>

nice job on making parser more oop. looks good to merge and we can see if there is any error to resolve/debug after merging :)
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/118#issuecomment-950139973" expanded>

👍
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/121#issuecomment-950273627" expanded>

looks good to merge :)
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/124#issuecomment-950364469" expanded>

hello ruiyang, i think that for the adding of upcoming exercise, we will be putting under add/delete/view as well so might have a bit of merge conflict to be resolved tomorrow

> Updates User Guide, add `Terminology`, updates `add`, `view` and `delete` commands description, and also examples that related to `Food` and `Exercise`. Need help from @tlyi to add the link at the `Item Bank` under Terminology to the header of `add item bank` or anything equivalent. Need help from @xingjie99 to add the link at the `Upcoming exercise` under Terminology to the header of `add upcoming exercise` or anything equivalent.
> 
> Also update some display format for food and exercise. (not completed yet). Remove code for filtering past 7 days food and exercise. (the code is incorrect, will redo in tmr) Complete the TODO in `DeleteFoodCommand` (since last time I forgot to change the code for `deleteItem`.


</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-2/tp/pull/167#issuecomment-954448901" expanded>

LGTM!
</panel>

</panel>


<panel type="info" header="### 64. Antriksh Verma `@antrikshv` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724757500" expanded>

I think that would be good for the most of the messages, to make the code neater
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724758408" expanded>

Maybe i can add a method, in parser to get the combined list, instead of having to type it out multiple times? Such as parser.combinedList() ?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/29#discussion_r725682470" expanded>

Nice summation of all the different messages in UI
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/29#discussion_r725682511" expanded>

is the command to enter help\ or just help
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/37#discussion_r726978171" expanded>

There is an available method in the ui class to print events and print tasks
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741093087" expanded>

to ensure that in the instance the user were to key in the key ">" more than once, the program would still be able to obtain the correct command.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741093869" expanded>

to ensure that in the instance the user were to key in the key "/" more than once, the program would still be able to obtain the correct command.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741096483" expanded>

performing a trim(), does not remove the whitespace within a given cell in an index, hence to remove the whitespace, I am required to perform a replace all
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741100144" expanded>

Would it be better for me to catch the error in each of the individual classes?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741101150" expanded>

makes sense, will do so!
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741101517" expanded>

ok!
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/184#discussion_r741314860" expanded>

changes have been made!
</panel>

</panel>


<panel type="info" header="### 65. Shyam Ganesh Jayagopi `@shyamgj1900` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/102#discussion_r737073626" expanded>

I think for class FinantialTracker the spelling should be FinancialTracker.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/102#discussion_r737078622" expanded>

Could probably do up the value proposition and user stories soon, as they are vital parts of the DG 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/102#discussion_r737080524" expanded>

For the sequence diagram describing the listing methods, the else part of the alt block should probably
 contain [else] instead of [NonEmptyList].
<img width="380" alt="Screenshot 2021-10-27 at 11 46 57 AM" src="https://user-images.githubusercontent.com/69454203/138996643-eb5b06f3-0f48-4e2e-b319-ebc3e31c86d9.png">
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/89#discussion_r737071370" expanded>

To show how various components interact with each other a possible suggestion would be to depict them in object diagrams. Also to help the reader understand the components better could possibly use class diagram.
<img width="1009" alt="Screenshot 2021-10-27 at 11 29 35 AM" src="https://user-images.githubusercontent.com/69454203/138995191-14a596ef-18d3-4f90-921a-4ebe94bfffca.png">

</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/102#discussion_r737087310" expanded>

For the dependency between the classes I think you are supposed to show the solid triangle on the label Use to show which is the dependent class.
<img width="1009" alt="Screenshot 2021-10-27 at 11 56 48 AM" src="https://user-images.githubusercontent.com/69454203/138997601-615ed165-903b-4171-a4fc-4bea2c0c4309.png">
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/263#issuecomment-955626763" expanded>

Ideally users would not need to take a bus to go to a location where they are already present. So I have removed the ability for users to enter the same start and end location, and an exception is thrown under such circumstances.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/259#issuecomment-955626953" expanded>

The problem occured because UTOWN itself was an interchange bus stop, hence BFS thinks that UTOWN is not connected to UTOWN and this caused the error. The problem has now been resolved.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/226#issuecomment-955627370" expanded>

Considering the app focuses on fast typists they would probably appreciate entering acronyms instead of the full names. That being said users can view all the bus stop names by entering the command "bus stop list".
</panel>

</panel>


<panel type="info" header="### 66. Mahadevan Svetha `@SvethaMahadevan` (5 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/235#discussion_r743566188" expanded>

Have to add @throws ModuleNotFound in Javadoc comments and remove @throws InvalidZoomLinkException.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/235#discussion_r743566761" expanded>

Might want to update Javadoc comments to reflect exceptions thrown.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/249#discussion_r744236397" expanded>

Javadoc(exception thrown when index of task to delete is not found) doesn't seem to match what the exception is supposed to do(in case duplicate task ?)
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/249#discussion_r744236919" expanded>

The variable names could be more specific. Hard to understand the purpose of moduleIndexLatter and also nameAndDate could be something like nameAndDateOfLecture.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/249#discussion_r744237223" expanded>

Javadoc could include @param filePath
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/240#discussion_r744120337" expanded>

Yes. Will rectify in next PR.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/245#discussion_r744208013" expanded>

Yes, I agree. I have edited the DG accordingly.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/59#issuecomment-942214084" expanded>

Resolved

</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/242#issuecomment-962454548" expanded>

Noticed that there is only one sequence diagram at the moment for your feature...probably need two minimum?
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/243#issuecomment-962456934" expanded>

Your comment "Add PPAP" on your PR redirects to a music video. Not too sure if that is what you intended.
</panel>

</panel>


<panel type="info" header="### 67. HERRICK KOH YU KAN `@Herrekt` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/91#discussion_r735827045" expanded>

We could try making one function that can take in the scene to list out the available suspects instead of making three separate
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/212#discussion_r739767019" expanded>

instead of contains, could it be better to use startsWith?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/212#discussion_r739767102" expanded>

This might fail as I could just type "search" at the back of the input
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/265#discussion_r744387812" expanded>

If this method prints, after changes only contain INVALID_NOTE_COMMAND_MESSAGE, better to just inline the variable
</panel>

</panel>


<panel type="info" header="### 68. DEON CHUNG HUI `@deonchung` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/298#discussion_r740998949" expanded>

Should have spacing like this | HYPOTHYROIDISM | 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/298#discussion_r740999626" expanded>

Should have "+" for the borders at the top of DESCRIPTION and MAX_QUANTITY
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/298#discussion_r740999908" expanded>

Should have "+" for the borders at the top of DESCRIPTION and MAX_QUANTITY
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/298#discussion_r741000541" expanded>

Perhaps you would want to edit the stock.txt file and then printing the list command to prevent formatting issue.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/295#discussion_r740467268" expanded>

Required to check if the order id provided by user exists
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/40#issuecomment-935635440" expanded>

LGTM
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/85#issuecomment-940108291" expanded>

LGTM
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/139#issuecomment-945820897" expanded>

LGTM
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/142#issuecomment-945898088" expanded>

LGTM
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/161#issuecomment-946531984" expanded>

LGTM
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/163#issuecomment-946660423" expanded>

LGTM
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/167#issuecomment-946968054" expanded>

LGTM
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/173#issuecomment-947389660" expanded>

LGTM
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/174#issuecomment-947391839" expanded>

LGTM
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/205#issuecomment-950804314" expanded>

LGTM
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/213#issuecomment-951581195" expanded>

LGTM
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/234#issuecomment-953886692" expanded>

LGTM
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/270#issuecomment-955661556" expanded>

LGTM
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/271#issuecomment-955661703" expanded>

LGTM
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/282#issuecomment-955714292" expanded>

LGTM
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/294#issuecomment-956457234" expanded>

LGTM
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/297#issuecomment-957434631" expanded>

LGTM
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/298#issuecomment-957512080" expanded>

LGTM
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/304#issuecomment-959009581" expanded>

LGTM
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/305#issuecomment-959412124" expanded>

LGTM
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/322#issuecomment-962083091" expanded>

LGTM
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/324#issuecomment-962425609" expanded>

LGTM
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/326#issuecomment-962492830" expanded>

LGTM
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/343#issuecomment-962650544" expanded>

LGTM
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/346#issuecomment-962651387" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 69. YAP WEI XUAN `@ZenoNexus` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/280#discussion_r747992102" expanded>

This could be changed to "To improve your spending habits, ..."
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/280#discussion_r747992794" expanded>

1. not very clear what it means by "editing everything"?
2 *is a hassle
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/281#discussion_r748171922" expanded>

would be better if changed to: "This feature allows you to export your data into a CSV file, for users who desire more flexibility with customizing their data and further analysis which is not yet supported by Budget Tracker."
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/281#discussion_r748172502" expanded>

"basically list out" can change to "lists out"
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/37#issuecomment-938525779" expanded>

Fixes #7 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/68#issuecomment-942986271" expanded>

Added input parameter for InvalidCommand to be used for handling exceptions
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/40#issuecomment-945365323" expanded>

Fixed by PR #79 and #81
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/115#issuecomment-950264635" expanded>

Fixes #113 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/133#issuecomment-951864216" expanded>

Contribution to #125 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/172#issuecomment-962513782" expanded>

Fixed
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/169#issuecomment-962513803" expanded>

Fixed. Amount must be greater than 0
</panel>

</panel>


<panel type="info" header="### 70. Seet Ting Yang Irvin `@irvinseet` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/295#discussion_r744123667" expanded>

Should another naming convention be used? view.view() seems confusing
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/295#discussion_r744123863" expanded>

Is it better to declare variables to show what are the contents in the indentations Array? Or perhaps adding a comment to remind the developer.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/321#discussion_r744253514" expanded>

Please remeber to add newline for ExitCommand
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/331#discussion_r744283253" expanded>

spelling
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/17#issuecomment-934535002" expanded>

please help me!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/27#issuecomment-939484778" expanded>

@AY2122S1-CS2113T-W11-2/developers can use this for comparing print message, since printing is usually of type void. Good job!
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/32#issuecomment-940041361" expanded>

LGTM, but can extract printing into Ui
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/33#issuecomment-940184081" expanded>

very nice handling of exceptions. LGTM!
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/49#issuecomment-940690586" expanded>

LGTM
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/59#issuecomment-940823948" expanded>

LGTM
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/70#issuecomment-941928876" expanded>

LGTM, but use tags instead of spaces as separator, as user may input e.g. (add n/chicken rice)
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/213#issuecomment-956011570" expanded>


![image](https://user-images.githubusercontent.com/61399162/139639795-3041a2dc-b31b-4a33-8dbd-21e59f5e86d0.png)

Users can type in "cat" to view the categories. Updated our help information to remind users at appropriate places as it may be quite lengthy for users to read
![image](https://user-images.githubusercontent.com/61399162/139640034-721fca2d-d495-4e7e-be38-adffdfea7a05.png)

</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/229#issuecomment-956017749" expanded>

It seems like you have not set the budget the categories... The $400 was referring to the amount spent on Entertainment for this month.  We have since updated our print message to be clearer
![image](https://user-images.githubusercontent.com/61399162/139640771-36c438d8-d9c7-403c-bfbd-4deceaff1a71.png)


</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/234#issuecomment-956088060" expanded>

fixed bug for single digit day for RecurringExpenses
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/223#issuecomment-956108085" expanded>

@Yitching  perhaps we can update the message to be clearer. 
"what would you like to edit? type the tag and what you want to change e.g. a/10"
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/281#issuecomment-962383085" expanded>

LGTM
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/304#issuecomment-962492268" expanded>

seems like test case failed due to newline. If you are using `System.out.println();`, you may have to use `System.lineSeparator()`
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/317#issuecomment-962561571" expanded>

@Yitching should you use markdown to help the important text stand out? e.g. `Entry`
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/317#issuecomment-962567058" expanded>

LGTM
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/365#issuecomment-963204276" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 71. Keh Wen Yang, Rachel `@rachelkeh` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/80#discussion_r738930365" expanded>

There's some room for ambiguity when the cloud storage and text file (I assume) aren't labelled.
Since the user was labelled, maybe the team could consider labelling the cloud storage and text file too?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/78#discussion_r738933090" expanded>

If this is a class diagram, I think you might have missed out the type of the members. So could consider adding it in. Could consider adding the functions too to make the later parts easier to understand.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/78#discussion_r738934367" expanded>

Is the arrow type for the second create() supposed to be solid line instead of dotted line? If it's a return, then maybe could consider adding a call from WeeksAdapter to WeeksAdapterFactory.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/78#discussion_r738934731" expanded>

Is the arrow type for the second create() supposed to be solid line instead of dotted line? If it's a return, then maybe could consider adding a call from WeeksAdapter to WeeksAdapterFactory.
Basically the same consideration as the previous comment.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/292#discussion_r744305929" expanded>

ok updated
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/292#discussion_r744305934" expanded>

ok updated
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/168#issuecomment-957234619" expanded>

kiv and discuss during meeting. Either 1) add additional requirement of maximum marks needing to be an integer or 2) change type of maximum marks to double
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/187#issuecomment-957354784" expanded>

cannot reproduce the same error. can add weightage of 100%. error message might be misleading instead, will fix such that msg will be total weightage exceeds 100%
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/249#issuecomment-962468153" expanded>

1. Nope idts, I don't allow any assessments with duplicate names. I think it's like this because I input in 3dp but we are only displaying 2dp. The value inside the program doesn't get affected. I'll prolly have to add a note inside the UG for this
2. Ok I'll remove now
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/328#issuecomment-963075815" expanded>

ima go see where went wrong
</panel>

</panel>


<panel type="info" header="### 72. Alvin Lim Jun `@Alvinlj00` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/24#discussion_r724815691" expanded>

Would it be better if getTaskIndex was called in the constructor instead? If we can delete multiple items in the future, I think it would be better if the taskToDelete attribute was an array of integers representing the task indexes to be deleted.  
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/61#discussion_r733847773" expanded>

Since the current main list only has events, this shouldn't be able to work as intended. 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/61#discussion_r733852064" expanded>

```suggestion
        String taskTitle = eventCatalog.get(indexOfEvent).taskList.get(indexOfTask).getTitle();
        eventCatalog.get(indexOfEvent).taskList.remove(indexOfTask);
```
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/61#discussion_r733852541" expanded>

Maybe we need both the index of the event and the task for the parameters and change the code to something similar above considering the new structure. 
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/25#discussion_r725478261" expanded>

The functions have been abstracted to one common function `retrieveItemAttribute`. 
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/25#discussion_r725478625" expanded>

Returning -1 is used to signify that the budget entered by the user was not a valid integer. I have commented on it on the code. 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/pull/21#issuecomment-937959763" expanded>

LGTM! I like the use of the encoder and decoder classes to convert the tasks and events into text shown in the text file and vice-versa instead of having everything in one storage file. 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/159#issuecomment-962553073" expanded>

I don't consider this a bug, it is a valid command accepted by the application so the user does not have to worry too much about typos. Also, since the `done` and `undo` command accepts multiple indexes at once, as long as these indexes are separated by non-digit characters, all of them should be accpeted. 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/154#issuecomment-962553201" expanded>

I don't consider this a bug, it is a valid command accepted by the application so the user does not have to worry too much about typos. Also, since the done and undo command accepts multiple indexes at once, as long as these indexes are separated by non-digit characters, all of them should be accepted.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/149#issuecomment-962553389" expanded>

The application is meant to accept all numeric inputs and will filter out the non-numeric inputs.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-3/tp/issues/148#issuecomment-962553449" expanded>

The application is meant to accept all numeric inputs and will filter out the non-numeric inputs.
</panel>

</panel>


<panel type="info" header="### 73. Mahadevan Swati `@swatimahadevan` (4 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/163#discussion_r738169140" expanded>

Can include another step?
![image](https://user-images.githubusercontent.com/69396486/139219200-55ffb29f-e7c7-4b28-a3b8-6de013a84ccc.png)
Like the 'Verify the setup' from the above image taken from AB3 DG.

> 7. Verify the setup by running `seedu.duke.Click` and trying a few commands.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/240#discussion_r744119792" expanded>

The statement seem a bit lengthy. Consider extracting out index of e/ and n/ since you use these repeatedly.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/240#discussion_r744119899" expanded>

These statements also are quite lengthy.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/245#discussion_r744207533" expanded>

I suggest to put both the target user profile and value proposition directly under Appendix A.
This screenshot is taken from the AB3 DG.
![image](https://user-images.githubusercontent.com/69396486/140634411-37b0a878-5eac-4621-872d-e4a8b216f741.png)

</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/28#discussion_r722874982" expanded>

Thought I should introduce a limit considering that the user could give an input with year as 20000 or 1870 and it would still display.
Would you suggest I just remove this check?
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/28#discussion_r722895519" expanded>

It's just a check to prevent nonsensical inputs (for now).
Accepted and implemented suggestion.

</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725474972" expanded>

Yes, `writeDataOntoSaveFile()` and `loadDataFromSaveFile()` can be reused for any txt.file. Can refer to my `writeTaskList()` and `readTaskList()` methods (which are right below the above function) for an example of how it can be used.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725474555" expanded>

Thanks for pointing this out. It's just some code I used during debugging and forgot to remove.

[https://www.caveofprogramming.com/java/java-file-reading-and-writing-files-in-java.html ](url)
I referred to the above link for reading from files using `FileReader`. 

The `InputStreamReader` basically performs the same function as `FileReader` except that it converts any kind of input into a stream of data that can be read by `BufferedReader`. Example usage,
public class Foo{
    public static void main(String[] args) throws IOException {
        InputStreamReader r = new InputStreamReader(System.in);
        BufferedReader br = new BufferedReader(r);
        String name = br.readLine();
        System.out.println(name);
    }
}

Anyhow, I generated the jar file and found out that I don't need all that code. Although the `FileReader` documentation says that it cannot read from a file that does not exist and does not create the file (when it does not exist), somehow the save file is created automatically. 
I pushed again with changes, can check it out.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/36#discussion_r725475452" expanded>

I do think this is a good suggestion, however, I would need to put some thought into how to edit the command objects where I have had to manipulate `tasklist`. 
Is it possible to skip the aesthetics for now and brush up code later?
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/249#discussion_r744241575" expanded>

changed this

</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/249#discussion_r744241601" expanded>

added javadoc for this method
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/62#issuecomment-941315379" expanded>

There are too many conflicts, looks like your branch was behind by a lot of commits.
I recommend that you pull first and put in your changed files and commit newly.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/180#issuecomment-961825040" expanded>

Fixed issue

</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/236#issuecomment-961828124" expanded>

Made some base changes that does not affect any other part of the code. Hence merging.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/193#issuecomment-961828754" expanded>

Fixed issue.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/195#issuecomment-961829740" expanded>

Task supposed to be incompletely mentioned. Will add ".." to make it more obvious.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/237#issuecomment-961969213" expanded>

Fixed most issues, open for review.
Do not merge yet.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/239#issuecomment-962439744" expanded>

This is not related to the content of this pr, but just putting it here for when you do dg updates.

![image](https://user-images.githubusercontent.com/69396486/140608441-c02db3ac-abad-49cb-9639-4298913a58b3.png)

Under adding module feature 'Implementation' in the dg, "the command for listing all modules" is mentioned.

</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/issues/224#issuecomment-962448008" expanded>

Fixed this issue
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/242#issuecomment-962458819" expanded>

> Noticed that there is only one sequence diagram at the moment for your feature...probably need two minimum?

Am aware of this, just added a few more diagrams.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/245#issuecomment-962558392" expanded>

LGTG, can merge this

</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/294#issuecomment-966432272" expanded>

LGTG, can merge this
</panel>

</panel>


<panel type="info" header="### 74. Wu Luoyu `@WU-LUOYU-SERENA` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/7#discussion_r720124406" expanded>

If I understand correctly this is a getter method of "items", then naming it as "getItems" makes more sense to me. Or if this method functions more like a print method (and a potential getter method that return an Item object will be implemented in the future), naming it as "printItemList()" to avoid confusion may be better?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/7#discussion_r720121187" expanded>

To standardise the names of methods in this class, maybe we can consider changing this name "useItem" to "use" or add "Item" to the rest of the methods (eg pickUpItem instead of pickUp, dropItem instead of drop etc)?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/125#discussion_r738122040" expanded>

This part is abit too deeply nested. maybe can use guard clauses to make the main path clearer?
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/218#discussion_r740731361" expanded>

Thanks for the comments! have changed accordingly
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/208#issuecomment-959226538" expanded>

Change "Invalid number! To select a suspect, please input its corresponding number."
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/202#issuecomment-959250981" expanded>

p.s. display the guess killer text
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/197#issuecomment-959296777" expanded>

Change "Here are the notes you have: 
Please enter the index of the note you want to delete (type 'all' if you want delete all notes)."
to sth like "you have no notes"
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/180#issuecomment-959469673" expanded>

if an exception is caught, the line "OK!..." should not be printed
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/187#issuecomment-959471778" expanded>

Should not print "ok!..." if an exception is caught
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/142#issuecomment-959548685" expanded>

change "saveDirection" in Storage to "saveDirectory"
</panel>

</panel>


<panel type="info" header="### 75. NIRMALESHWAR SATHIYA MOORTHI `@Nirmaleshwar` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/45#discussion_r727017832" expanded>

I already made one in FinancialTracker, just not being called right now. Can use that if you want.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/86#discussion_r732816370" expanded>

Is it possible to put these as bullet points? Just to make it look nice
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/134#discussion_r737408616" expanded>

Looks fine but probably need to add the expected output later in the final version of UG
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r723508500" expanded>

Yeah, I noticed that was missing so I left it blank. Later when we do all the error catching we can do a proper one. As you said, I'll just do a dummy method for now.
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724244001" expanded>

I uncommented this for now coz got some error that isn't on my part. So later when merged can resolve.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/20#discussion_r724245050" expanded>

I think it was a typo. I've fixed it now.
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725430899" expanded>

Oh yeah, thanks for the heads up. Will correct the name. I just put a dummy name there for the time being until the program worked.
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/27#discussion_r725431026" expanded>

I made the function in FinancialTracker but I haven't implemented it yet. Will do so in the next commit that I push.
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727853406" expanded>

Got it, I will remove them then
</panel>

<panel  header="**10 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/49#discussion_r727868353" expanded>

Okay got it, made the change
</panel>

<panel  header="**11 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737021128" expanded>

I've changed it to s/baseCurrency t/newCurrency
</panel>

<panel  header="**12 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737021303" expanded>

I just put those dummy values for now for ease of testing. I've changed them to the correct rates.
</panel>

<panel  header="**13 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737023194" expanded>

Fixed the issue
</panel>

<panel  header="**14 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737032039" expanded>

Hmm okay I'll fix that now

</panel>

<panel  header="**15 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/122#discussion_r737054234" expanded>

Yep I agree, I think one param better. I've fixed it now.
</panel>

<panel  header="**16 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741093330" expanded>

For now, it works fine since there are only two currency modes. I think you're right, I have to change later if I accommodate more currency types. I'm going to add Indian Rupee first in my next PR, I'll fix this issue in that.
</panel>

<panel  header="**17 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741094874" expanded>

Nice catch, checkStyleMain for some reason didn't flag this.
</panel>

<panel  header="**18 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/pull/213#discussion_r741188916" expanded>

Okay got it will change `i = 0` to `i = 1`.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/121#issuecomment-962991765" expanded>

Thank you for the feedback, will make the necessary changes!
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/267#issuecomment-962997229" expanded>

Okay this issue has been fixed.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-3/tp/issues/258#issuecomment-963274466" expanded>

Issue has been fixed
</panel>

</panel>


<panel type="info" header="### 76. FOONG XIN YU `@Uxinnn` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/54#discussion_r732375927" expanded>

dont use i
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/54#discussion_r732375980" expanded>

dont use s
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/54#discussion_r732376970" expanded>

ans is abit iffy, can change if u can think of a better variable name
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/44#issuecomment-946735111" expanded>

Fixes #42
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/41#issuecomment-946738565" expanded>

Decided not to implement feature.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/45#issuecomment-946745399" expanded>

Fixes #39 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/46#issuecomment-946750269" expanded>

Fixes #37 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/7#issuecomment-946751977" expanded>

Fixes #30 
Fixes #32 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/16#issuecomment-946752906" expanded>

Fixes #31 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/8#issuecomment-946756791" expanded>

Fixes #27
Fixes #47 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/10#issuecomment-946787849" expanded>

Fixes #48 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/24#issuecomment-946797758" expanded>

Fixes #49 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/26#issuecomment-946801988" expanded>

Fixes #50 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/34#issuecomment-946804137" expanded>

Fixes #51 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/35#issuecomment-946805784" expanded>

Fixes #52 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/65#issuecomment-948726869" expanded>

Fixes #57 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/74#issuecomment-948770172" expanded>

Fixes #58 
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/76#issuecomment-949751156" expanded>

Contributes to #73 
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/87#issuecomment-950500356" expanded>

Fixes #59
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/112#issuecomment-955172435" expanded>

Contributes to
#73 
#89 
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/145#issuecomment-956112255" expanded>

Hihi thanks for the review, can I just know how did u manage to input dat weird character in the first line of ur ss ah? so i can solve it thanks thanks :D
</panel>

</panel>


<panel type="info" header="### 77. Li Xi Yuan `@lixiyuan416` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/141#discussion_r736123119" expanded>

Sorry just checking, did you miss out a closing //@@author?
Currently you are claiming line 356 - end of class
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/146#discussion_r736505698" expanded>

pls add the closing @@author tag, else u are claiming everything from line 255 onwards
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/219#discussion_r740223500" expanded>

Consider just naming it isProcessing, this name is unholy haha
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/63#discussion_r727339099" expanded>

Noted, that is a task for another day, good night!
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736114819" expanded>

so that you get the prompt before getting "pls enter how much yz paid: ", instead of the other way, which may cause users to enter "equal" on fields that is not the first user
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736116545" expanded>

IF this block is added on line 130, you will be checking if this expense needs to be printed for every single person in that expense's personlist, which is bad for efficiency
</panel>

<panel  header="**7 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736116873" expanded>

Can you kindly elaborate?
</panel>

<panel  header="**8 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/133#discussion_r736116931" expanded>

good suggestion
</panel>

<panel  header="**9 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/248#discussion_r744061200" expanded>

Yes! Good observation
</panel>

</panel>


<panel type="info" header="### 78. Fan Shixi `@fansxx` (3 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/48#discussion_r725961282" expanded>

gotta split this line cuz its too long xdd
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/48#discussion_r725961773" expanded>

gotta split this line cuz its too long
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/48#discussion_r725962765" expanded>

oof these @params are throwing checkstyle error, think u gotta fill up the details of the params
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/15#discussion_r721194531" expanded>

yep for now!! im thinking of having a fixed number of keys corresponding to the timings later
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/93#discussion_r735800690" expanded>

good suggestion!! will try
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/36#issuecomment-937409616" expanded>

bruh not sure why this happens. i copied it frm the ip im reviewing and it works fine on the command prompt lmao
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/66#issuecomment-942489515" expanded>

noice
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/154#issuecomment-955646799" expanded>

`+-------------------------------------------------------+`
`|`                                               `|`                               `|`
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/198#issuecomment-957991125" expanded>

lgtm!
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/200#issuecomment-959001079" expanded>

looks good to me! btw how to approve a pr LOL
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/164#issuecomment-959085794" expanded>

Rationale for not implementing this feature:
- removing meeting without notifying the other attendees is not very pleasant
- before scheduling a meeting, we are sure the admin put a lot of thought into it
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/237#issuecomment-962574358" expanded>

> Is this ready to merge yet? Or will you still be adding on for #205

can merge this first!! i'll create a separate pr for #205 
</panel>

</panel>


<panel type="info" header="### 79. Sean Phang `@SeenFang` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#discussion_r725145664" expanded>

Perhaps can move 'throws' back up to line 77 since it no longer overflows the line limit
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/360#discussion_r744472980" expanded>

perhaps "all characters as data following the first space character" can be changed to "all characters following the first space character as data"?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/187#discussion_r734736434" expanded>

egg 🥚
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/52#issuecomment-938824845" expanded>

LGTM
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/67#issuecomment-938852251" expanded>

LGTM
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/69#issuecomment-939282865" expanded>

LGTM
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-3/tp/pull/314#issuecomment-962436301" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 80. Jonathan Mui Koy Kit `@jonathanmui4` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720756057" expanded>

Perhaps, you can mention that this Exception is a custom made exception used throughout the app where the developer can add in their own error messages by calling the constructor like so: GetJackDException("Error Message")
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/59#discussion_r725626678" expanded>

I think this can be put in the constructor above. Only the constructor above will be called in the rest of our code which means the logger will never be initialised. 
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/68#discussion_r725737540" expanded>

Hmm ok I'll remove the console handler to the logger since the user doesn't really need to see the log with the exception messages already implemented. 
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/167#discussion_r735052680" expanded>

Well, we could transfer the ones we used for CS2101? But i'm not sure if we have to upload them on the internet or push it up into this repo
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/222#issuecomment-957633106" expanded>

Duplicate of #231  
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/220#issuecomment-957637132" expanded>

duplicate of #218 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/219#issuecomment-957638182" expanded>

duplicate of #218 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/218#issuecomment-957640065" expanded>

Duplicate of #231 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/217#issuecomment-957641000" expanded>

duplicate of #231 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/215#issuecomment-957645287" expanded>

duplicate of #221 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/210#issuecomment-957659164" expanded>

duplicate of #231 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/209#issuecomment-957659919" expanded>

duplicate of #212 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/208#issuecomment-957660644" expanded>

duplicate of #212 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/205#issuecomment-957661312" expanded>

duplicate of #212 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/204#issuecomment-957665714" expanded>

duplicate of #230 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/203#issuecomment-957668632" expanded>

duplicate of #206 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/201#issuecomment-957672893" expanded>

duplicate of #235 
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/200#issuecomment-957673813" expanded>

duplicate of #212 
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/198#issuecomment-957680894" expanded>

duplicate of #231 
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/196#issuecomment-957682844" expanded>

duplicate of #231 
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/194#issuecomment-957685884" expanded>

We have already included the date format in the help command and the error message **you** screen-shotted
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/239#issuecomment-961924168" expanded>

This is a misunderstanding of the feature.
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/236#issuecomment-961924394" expanded>

This is an invalid bug.
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/226#issuecomment-961925289" expanded>

This is also an invalid bug. This is a limit faced by CLI applications. 
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/224#issuecomment-961926043" expanded>

We feel it is unnecessary to prevent users from creating past dated workouts. 
</panel>

</panel>


<panel type="info" header="### 81. Kum Wing Ho `@kum-wh` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/217#discussion_r742510622" expanded>

Isnt it price obtained from the user or price entered by the user? 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/218#discussion_r742645423" expanded>

This one sounds bit confusing.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/39#discussion_r725638536" expanded>

I deleted this whole part in the end, cause past returns is optional. Instead if the input cannot be parsed as a double, it will be  assumed as undefined which is default to value of 0. Meaning if left empty, past returns will be assumed as 0.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/138#discussion_r740742085" expanded>

oh i never notice that those function have been abstracted out
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-1/tp/pull/246#discussion_r744406047" expanded>

I change this to stock instead, because the parameters displayed below are for stock.
</panel>

</panel>


<panel type="info" header="### 82. Peng Yanjia `@yanjia1777` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/295#discussion_r744151560" expanded>

@irvinseet i have to return multiple values since the printView call is done in viewCommand but the calculation of the indentations is done in Ui. thats why I had it return an array of multiple indentation values
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/295#discussion_r744151814" expanded>

@irvinseet I can assign each value of the array to a variable first if it makes it clearer, like int catIndentation = indentations[0]
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/215#issuecomment-955917296" expanded>

Fixed error, resolved
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/240#issuecomment-957145861" expanded>

resolved via moving delete all to deleteAll
</panel>

</panel>


<panel type="info" header="### 83. Teh Jiewen `@arvejw` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/88#discussion_r729087360" expanded>

Looks good, case statements without anything will just assume the functionality of the next nearest non empty case block
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/88#discussion_r729087848" expanded>

Yes readInput is called twice, so double message is printed.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/54#issuecomment-939069857" expanded>

CI fails due to checkstyle because some parts are skeleton code
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/64#issuecomment-939888722" expanded>

hallejuah 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/87#issuecomment-943433092" expanded>

Edit some of Ui class together with Edward
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/112#issuecomment-945563085" expanded>

CI failing @Storage
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/125#issuecomment-947570009" expanded>

DateTracker.checkIfDateExists(formatter.format(localDate));  in Parser.getDate() is causing JUnits to fail
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/127#issuecomment-947770014" expanded>

CI failing due to DateTracker method throwing NullPointerException causing JUnits assertions to fail
</panel>

</panel>


<panel type="info" header="### 84. Rebecca Chua `@rebchua39` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/26#discussion_r721881711" expanded>

would it be better to use `getMessage()` instead?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/193#discussion_r744732877" expanded>

Here "for simplicity-sake" should be written as "for simplicity's sake".
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/pull/114#issuecomment-955312423" expanded>

> @ptejasv Could you help me test if this is working on **Mac**?
> 
> @Roycius @rebchua39 Could you help me test if this is working on **Windows**?
> 
> If some of you also test it on **Linux** please inform me as well.

Yup, it works on Windows.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/115#issuecomment-955384004" expanded>

This issue is likely because the parser checks for the index of the text after it is split using the flags, rather than the position of the flag itself.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-3/tp/issues/147#issuecomment-957141168" expanded>

Fixed in #166.
</panel>

</panel>


<panel type="info" header="### 85. Seo Gimin `@pos0414` (2 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/294#discussion_r744122765" expanded>

Perhaps you can place them outside the method since you will reuse them again in other test methods also?
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/294#discussion_r744122875" expanded>

Since you are using the same example entries, perhaps you can have a one-time setup function that creates and add all these before all the tests start?
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/295#discussion_r744124196" expanded>

As I only added the last one parameter and the indentations array are @yanjia1777 's expertise, perhaps @yanjia1777 can help to resolve this later.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/295#discussion_r744124204" expanded>

As this is @yanjia1777 's expertise, perhaps @yanjia1777 can help to resolve this later.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/42#issuecomment-940625307" expanded>

LGTM
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/63#issuecomment-941003388" expanded>

Great use of DateTimeFormatter. LGTM.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/194#issuecomment-955577157" expanded>

LGTM
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/231#issuecomment-955664946" expanded>

LGTM
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/224#issuecomment-955665356" expanded>

Fixed by disabling user to input negative amounts.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/222#issuecomment-955665382" expanded>

Fixed by disabling user to input negative amounts.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/219#issuecomment-955665433" expanded>

Fixed by using regex.
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/196#issuecomment-955665489" expanded>

Fixed by using regex.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/201#issuecomment-955665797" expanded>

Fixed by disabling negative amount as user input.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/200#issuecomment-955665813" expanded>

Fixed by disabling negative amount as user input.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/199#issuecomment-955665829" expanded>

Fixed by disabling negative amount as user input.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/195#issuecomment-955665903" expanded>

Fixed by using regex to handle correct format of amount.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/issues/208#issuecomment-955665989" expanded>

Updated the error message.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/257#issuecomment-957756976" expanded>

LGTM
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/279#issuecomment-961904563" expanded>

LGTM
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/283#issuecomment-962397289" expanded>

Try moving the `endDate` declaration right before the declaration of recurring entry to resolve the check style issue.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/293#issuecomment-962445556" expanded>

Perhaps can you remove the content inside data file `mint.txt` so that our local data files don't get overwritten?
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/297#issuecomment-962462410" expanded>

Great to see good testing techniques. LGTM
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/306#issuecomment-962556256" expanded>

Perhaps you can follow the [AB3 format](https://se-education.org/addressbook-level3/team/johndoe.html)?
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/313#issuecomment-962556290" expanded>

LGTM!
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/319#issuecomment-962569719" expanded>

LGTM
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/323#issuecomment-962606919" expanded>

LGTM
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/330#issuecomment-962640812" expanded>

LGTM
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/332#issuecomment-962654523" expanded>

LGTM
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/333#issuecomment-962654672" expanded>

LGTM!
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/336#issuecomment-962676371" expanded>

LGTM
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/343#issuecomment-963068713" expanded>

LGTM
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/344#issuecomment-963068944" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 86. PENG FEI `@peng-217` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/213#discussion_r739788705" expanded>

At first i also want to do so, but Elijer said only one exception for note could be better, you can go to tele group to his comments on my PR
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/108#discussion_r737054886" expanded>

This one is a format, can refer to website
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/135#discussion_r739662571" expanded>

I do not think this one should be refactored. Because the while loop is used for allowing user to re-input.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/17#issuecomment-951968272" expanded>

Done with note function
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/issues/231#issuecomment-961743037" expanded>

Because this /back command is not supported in note function, to go back to previous scene, you need to type "/quit" to quit note process, then type "/back" to go back to previous scene.
</panel>

</panel>


<panel type="info" header="### 87. Tay Yi Heng, Atticus `@CrimsonTitan79` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/46#discussion_r730252056" expanded>

use else if since only one viewType at once
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/89#issuecomment-951515018" expanded>

Fixed #44 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/89#issuecomment-951515541" expanded>

Resolved #44 
</panel>

</panel>


<panel type="info" header="### 88. Markus Lim Yi Qin `@markuslyq` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/249#discussion_r742272660" expanded>

I think it's better to place it under implementations instead of design.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/17#issuecomment-934097320" expanded>

Completed.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/154#issuecomment-955658365" expanded>

@stephlewyh 
For point 1 it is actually two separate methods. There is actually a line skip from 78 to 92 in the image. 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/206#issuecomment-961255496" expanded>

The error is that an order index of '2' does not exist for person '2' and is not due to the 2 spaces.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/200#issuecomment-961257220" expanded>

The error has to do with your order index as at the point of testing, the max index was only 8 as there were only 8 items on the menu and has nothing to do with the spaces after the names or other parameters.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/154#issuecomment-961258352" expanded>

Resolved.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/207#issuecomment-962549958" expanded>

Added in UG.
</panel>

</panel>


<panel type="info" header="### 89. Lu Sicheng `@Isabella-L` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/pull/61#discussion_r736145118" expanded>

Good to do it in a seperate class
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/57#issuecomment-953122497" expanded>

parser completely integrated with factory pattern
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-4/tp/issues/103#issuecomment-962023694" expanded>

not solved
</panel>

</panel>


<panel type="info" header="### 90. Lee Qi An `@itsleeqian` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/233#discussion_r741573993" expanded>

this one probably can initiate outside the loop (for more eFfIciEnCy)
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/162#discussion_r738448043" expanded>

Oh yea but since we hardcoded all the common ISOs and their symbols, I thought the symbol should just be defaulted to $ (if the user introduces a new currency).
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/pull/214#issuecomment-956079554" expanded>

LGTM!
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/199#issuecomment-956089029" expanded>

The main purpose of our app is to let somebody to pay for a particular expense, and allow them to add in the "amount split" of everyone that person paid for. 

So in your given example, if you paid for everything, you also want to know how much everybody owes you, which is where that iteration through the participants come in. In the case that you want it to solely assign to yourself (I.E you are treating the others), then perhaps you may not even want to add it in as an expense (because the others don't need to pay you back). 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-2/tp/issues/247#issuecomment-962431934" expanded>

I changed this to display the correct format for edit (like the previous commands)
</panel>

</panel>


<panel type="info" header="### 91. Vishal Jeyaram `@VishalJeyaram` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/108#discussion_r730446572" expanded>

Great Work!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/220#issuecomment-960655077" expanded>

Issue has been fixed. Exception will be thrown if index is out of range. 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/217#issuecomment-960655922" expanded>

Issue has been fixed. Exception will be thrown if there are duplicate meals or fluids.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/210#issuecomment-960659659" expanded>

Issue has been fixed. Now date shows the actual date instead of "all"
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/199#issuecomment-960665915" expanded>

Issue fixed. Number of meals and fluids updates everytime a meal or fluid has been added. 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/190#issuecomment-960670716" expanded>

"list" only lists everything that occurs on the current day. The cookie was added on a different day. Thus it wasn't listed.
</panel>

</panel>


<panel type="info" header="### 92. Jiang Xing Kai `@xkisxk` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/pull/191#discussion_r744219265" expanded>

Maybe it's better to say "Returns the arguments for EditCardCommand if accepted". 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/pull/8#issuecomment-933320863" expanded>

Failed checks
</panel>

</panel>


<panel type="info" header="### 93. Brendan Lau Siew Zhi `@brendanlsz` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/47#discussion_r723182087" expanded>

Is db better or database better? 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/34#issuecomment-935404792" expanded>

LGTM
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/31#issuecomment-935911217" expanded>

Implemented
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/30#issuecomment-935911573" expanded>

Implemented
</panel>

</panel>


<panel type="info" header="### 94. Wang Zhao Yu, Edward `@EdwardZYWang` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/21#discussion_r723906329" expanded>

line 10 has more than 120 chars
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/20#issuecomment-937447433" expanded>

LGTM!
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/54#issuecomment-939689382" expanded>

LGTM!

Parser assignees are the team
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/55#issuecomment-939769459" expanded>

CI fails due to checkstyle because some parts are skeleton code
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/87#issuecomment-943433129" expanded>

LGTM
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/102#issuecomment-944948780" expanded>

LGTM!
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/104#issuecomment-944956660" expanded>

Junit for fluid tests are pending modification, thats why java.cl is failing
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/122#issuecomment-947510258" expanded>

LGTM! failing CLI checks because of old Junits tests that will be updated asap
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/123#issuecomment-947544963" expanded>

fails cli checks due to gradle. but its fine since its a midway implementation
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/143#issuecomment-948730676" expanded>

Very comprehensive! LGTM!
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/pull/166#issuecomment-951978539" expanded>

lgtm

</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/223#issuecomment-955673219" expanded>

q:I can't seem to get out of this loop...
a: you need tofollow the instructions and type in the needed inputs in order to exit the loop

q:Similarly, does not exit the user out of the loop or throw an exception!
a: the incorrect inputs is already being caught within the loop, so theres no need to exit it

q:Looping error for erroneous input
a:its looping to tell you to type in the correct input
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/194#issuecomment-955676436" expanded>

do we need to change the type of activity level and age to doubel? if so, we need to change integer.[arseint to doublt.parsefdouble
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/188#issuecomment-955676523" expanded>

do we want to change the input, or just mention in UG?
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/229#issuecomment-957603417" expanded>

update UG and hoime  message
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/228#issuecomment-957609196" expanded>

clarified in the UG
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/227#issuecomment-957611307" expanded>

update help message and ug
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/215#issuecomment-957614905" expanded>

clarify in UG and etc
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/218#issuecomment-957633727" expanded>

uodate in UG to press y for loading storage. add comfirmation message
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/212#issuecomment-957648979" expanded>

define in UG
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/208#issuecomment-957659906" expanded>

add in UG, make sure it takes the first input
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/205#issuecomment-957663174" expanded>

add in ug
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/201#issuecomment-957666422" expanded>

specify in UG
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/197#issuecomment-957700020" expanded>

settle in ug
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/195#issuecomment-957703998" expanded>

add hyperlink to meal library
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/194#issuecomment-957718540" expanded>

need to catch exceptions for ui.get info and calculator
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/186#issuecomment-957731248" expanded>

ug
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/193#issuecomment-957733320" expanded>

ug
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/192#issuecomment-957737839" expanded>

ug, the /c
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-3/tp/issues/188#issuecomment-957748124" expanded>

ug asnd comment
</panel>

</panel>


<panel type="info" header="### 95. Tan Choon Kai, Glenn `@poppolette` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/24#discussion_r723921616" expanded>

Should be 'glenn' instead of 'glen' :(
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/129#issuecomment-952879335" expanded>

Looks good
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/202#issuecomment-957929880" expanded>

This is a mistake on the UG part, it was not clear on the exact syntax.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/181#issuecomment-957935389" expanded>

This is intended behaviour. The UG has been updated in regards to this.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/151#issuecomment-957938552" expanded>

This is intentional behaviour. I have updated the UG accordingly
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/183#issuecomment-961274176" expanded>

Fixed this functionality and updated UG
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/174#issuecomment-961275822" expanded>

Fixed this functionality and updated UG.
Inputs should not contain duplicate instances of /n, /a or /v
Doing so will lead to the command being treated as invalid
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/155#issuecomment-961277711" expanded>

Fixed
</panel>

</panel>


<panel type="info" header="### 96. Cheng Siyuan `@siyuancheng178` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/56#discussion_r724779977" expanded>

i guess it is better to `return ed.convertDatabaseToString()` here?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/35#issuecomment-935488401" expanded>

implements #35 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/36#issuecomment-935495781" expanded>

implements #18 
</panel>

</panel>


<panel type="info" header="### 97. Joel Matthew Chiam Zhi Qiang `@JMattChiam` (1 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on others PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/pull/12#discussion_r720789092" expanded>

Shouldn't this be ArrayList&gt;ExerciseList>? As in a list of workouts

Since we're going with the structure of Workouts as a list of exercises, and then a level above being a list of workouts, I think it might be less confusing if the exerciseList is renamed Workout, and then the RoutineList renamed WorkoutList. 

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/196#issuecomment-955630506" expanded>

Can just specify not to have commas in the description (UG)
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/204#issuecomment-955630973" expanded>

Not sure if this is really a valid bug
Maybe we can just put in the UG "highly discouraged from editing the save file as you risk crashing blablabla. if you do intend to, make sure you changes comply with the format, i.e. numbers stay numbers"
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/202#issuecomment-955631484" expanded>

Hashtag it's a feature not a bug

Can just mention this behaviour in UG
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/198#issuecomment-955631556" expanded>

can just specify in the UG i think
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/213#issuecomment-955631788" expanded>

Think this is fine, you might want the search to help you find stuff that almost matches but not quite.  Esp if you don't know exactly what you're looking for

hashtag it's a feature not a bug
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/211#issuecomment-955631917" expanded>

Can just specify the behaviour in UG. tbh i think it's fine. Most people wouldn't need to search for exercises only when they're inside the workout unless they have an unrealistically long workout
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/238#issuecomment-955632009" expanded>

Can mention in UG that recommend adds the workouts to the list.

hashtag it's a feature not a bug
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/224#issuecomment-955632325" expanded>

Not sure if we want to let users backdate the deadline, seems like an unnecessary restriction idk. 

i wanted it done yesterday
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/238#issuecomment-958772678" expanded>

closed with #258 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/233#issuecomment-958772774" expanded>

closed with #258 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/229#issuecomment-958772870" expanded>

closed with #258 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/212#issuecomment-958773015" expanded>

closed with #258 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/199#issuecomment-958773099" expanded>

closed with #258 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/265#issuecomment-962380102" expanded>

closed with #267 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-2/tp/issues/266#issuecomment-962427941" expanded>

closed with #271 
</panel>

</panel>


<panel type="info" header="### 98. TEO CHUAN KAI `@exetr` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/15#issuecomment-938151291" expanded>

Completes #12 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/45#issuecomment-942320393" expanded>

Resolves #45 and #43 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/59#issuecomment-945109954" expanded>

- [ ] Add enumeration type for reserved
- [ ] Add new command `reserve`
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/81#issuecomment-950387443" expanded>

Closes #52 
Closes #53 
Closes #57 

</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/91#issuecomment-955199881" expanded>

COMMAND_WORDS should be case sensitive (accept only lowecase letters for non-attributes)
- `add b`
- `t/`
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/152#issuecomment-955709968" expanded>

Closed in #171 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/129#issuecomment-955730314" expanded>

Closed in #171 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/117#issuecomment-959218543" expanded>

- [x] DG Content page
- [x] Setting up
- [x] Getting started
- [x] Acknowledgements
- [x] Make command class diagram smaller
- [x] Do architecture diagram
- [x] Fix TextUI self invocation activation bar
- [x] Make Item class diagram clearer
- [x] Hide footer of edit command sequence diagram
- [x] Split edit command sequence diagram
- [x] Add annotations and descriptions
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/198#issuecomment-962380792" expanded>

Also remember to update UG
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/226#issuecomment-963157934" expanded>

fixed in #237 
</panel>

</panel>


<panel type="info" header="### 99. NG MAI FENG `@MaifengNg` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T14-1/tp/pull/216#issuecomment-956450861" expanded>

@arcturusz done updating based on your comments.

</panel>

</panel>


<panel type="info" header="### 100. CHEN SILIN `@silinche` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/35#issuecomment-942058589" expanded>

Ask should ID be fixed-length output?
</panel>

</panel>


<panel type="info" header="### 101. Lee Ju-Ler Jonathan `@wutdequack` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/141#issuecomment-955571927" expanded>

Thanks @kewenlok for the comments. The feedback is valid and I have addressed the concerns. Cheers :)
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/168#issuecomment-955573373" expanded>

![image](https://user-images.githubusercontent.com/19339261/139554101-bf4a009e-1d15-428c-b72d-0c952ff89bdd.png)

This has been fixed in the newest commit. For the last command `addmed n/johntan123 m/fever f/everyday`, the elderly `johntan123` was not created hence medicine was not allowed to be added
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/165#issuecomment-955573563" expanded>

This has been noted and fixed in the recent commit
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/164#issuecomment-955573684" expanded>

This has been added, but it is not reflected in the User Guide. Will add it to make it clear to users.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/188#issuecomment-955578411" expanded>

Store data is a function that is implemented, however it was not added in the UG. Will add it into the UG
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/190#issuecomment-955578504" expanded>

This has been fixed in the latest 2 commits. 
</panel>

</panel>


<panel type="info" header="### 102. Teng Yi Shiong `@Kureans` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/46#discussion_r730254408" expanded>

okay i will do so
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/10#issuecomment-937352530" expanded>

Already implemented
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/66#issuecomment-949448600" expanded>

Fixes #67 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/133#issuecomment-955711113" expanded>

Duplicate of #127 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/138#issuecomment-955714130" expanded>

Patient_ID here does not have square brackets around it to indicate that it is a mandatory field, which is in line with other commands that have mandatory fields like find, etc
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/142#issuecomment-955715226" expanded>

PATIENT_ID is not enclosed in square brackets to indicate that it is a mandatory field.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/147#issuecomment-955716049" expanded>

Duplicate of #130 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/160#issuecomment-955716506" expanded>

Duplicate of #129 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/154#issuecomment-955716795" expanded>

Duplicate of #129 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/151#issuecomment-963257579" expanded>

Added as a proposed feature

</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/148#issuecomment-963259158" expanded>

issue with bug rpt, wrong input
</panel>

</panel>


<panel type="info" header="### 103. Joshua Harsha Dass `@JoshHDs` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/101#issuecomment-955716606" expanded>

Related to #93 and #102.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/102#issuecomment-955716777" expanded>

Will modify u/ parameter to take in only letters and no integers.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/104#issuecomment-955717602" expanded>

Convert the inputs into small caps
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/105#issuecomment-955717741" expanded>

Duplicate of issue #91
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/106#issuecomment-955717847" expanded>

Duplicate of #91
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/103#issuecomment-955894424" expanded>

We will indicate in our documentation that there should be no spaces allowed between / and inputs.
</panel>

</panel>


<panel type="info" header="### 104. Teoh Yi Zheng `@thaddyyz` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/42#discussion_r725572096" expanded>

I still need this as a while loop but I put the entire loop in a separate function to improve readability
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/pull/101#discussion_r730279623" expanded>

Not sure if can use try-catch with if condition especially since there are other functions that throws different exceptions
</panel>

</panel>


<panel type="info" header="### 105. Lau Wai Kit `@WaiKit-nus` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/86#issuecomment-944849565" expanded>

Bump
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/85#issuecomment-944849591" expanded>

Bump
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/51#issuecomment-944849617" expanded>

Bump
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/55#issuecomment-944849641" expanded>

Bump
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/56#issuecomment-944849676" expanded>

Bump
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/65#issuecomment-944849689" expanded>

Bump
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/92#issuecomment-944849702" expanded>

Bump
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-2/tp/issues/210#issuecomment-955666456" expanded>

- [x] #208, #205, #190, #188, #177,  #197, #178,  #192, #187- WK
- [x] #207,  #198,  #172, #170, #169 - YZ
- [x] #199, #196, #184, #182, #186, #179, #182, #174 - Adam
- [x] #195, #194, #191, #183, #167, #189 - Markus
- [x] #204, #180, #171, #166 - Andrew (Solution: Add the comment in UG)
</panel>

</panel>


<panel type="info" header="### 106. Hoang Trong Tan `@jushg` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/131#issuecomment-956181573" expanded>

Write comment in the UG
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/135#issuecomment-956182044" expanded>

Write in the UG
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/138#issuecomment-956183649" expanded>

Write in the UG, update general help function to say mandatory or optional.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/140#issuecomment-956185943" expanded>

Return all empty field 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/141#issuecomment-956186533" expanded>

duplicate of #131 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/143#issuecomment-956188752" expanded>

Change the archive/unarchive command to hide/show
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/149#issuecomment-956198046" expanded>

Write in the UG the format of phone number ( - is accepted), raise exception for + sign
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/150#issuecomment-956201074" expanded>

Current architecture does not support this change.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/153#issuecomment-956207724" expanded>

Handle exception "cant save"
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/issues/156#issuecomment-956217037" expanded>

Throw exception
</panel>

</panel>


<panel type="info" header="### 107. Vincent Lau Han Leong `@vincentlauhl` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/pull/24#issuecomment-939212871" expanded>

Really appreciate your effort in making the code neater. I think for the prefix it isn't really necessary to have a class of its own since you're only getting the String, unless you have other plans for it later on?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/96#issuecomment-955711913" expanded>

Duplicate #94 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/97#issuecomment-955713003" expanded>

Related #93 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/98#issuecomment-955713536" expanded>

Related #93 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/93#issuecomment-955713897" expanded>

The issue is when the unit / ingredient contains a number. When it is saved into a text file and loaded into the list again, the bug will show
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/99#issuecomment-955714447" expanded>

Bug fixed.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-3/tp/issues/100#issuecomment-955715997" expanded>

Update recipe will be changed to allow users to add/remove ingredients in the recipe. Recipe should be added with at least one ingredient, and a recipe must always have at least one ingredient.
</panel>

</panel>


<panel type="info" header="### 108. Eric Bryan `@EricBryann` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/50#issuecomment-946342857" expanded>

Fixes #49 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-1/tp/pull/174#issuecomment-959004858" expanded>

Fixes #152 
Fixes #140 
Fixes #138 
</panel>

</panel>


<panel type="info" header="### 109. Wong Zi Xin, Avellin `@avellinwong01` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/23#issuecomment-939334288" expanded>

Completes #19 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/issues/56#issuecomment-945111946" expanded>

- [ ] Edit status 
- [ ] Edit ID
- [ ] Edit title 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/93#issuecomment-952734649" expanded>

fix #56 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/174#issuecomment-957966834" expanded>

fix #164 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/168#issuecomment-959750574" expanded>

fix #151 
fix #166 
fix #150 
fix #144 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/228#issuecomment-963030275" expanded>

fix #130 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-1/tp/pull/232#issuecomment-963097833" expanded>

fix #230 
</panel>

</panel>


<panel type="info" header="### 110. Jiang Yuxin `@Yuxinn-J` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/18#issuecomment-937723614" expanded>

LGTM

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/146#issuecomment-960476538" expanded>

Notice! thank you! will corret the documentation
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/116#issuecomment-960481706" expanded>

Noted with thanks 👍  have already fixed the issue
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/144#issuecomment-960514137" expanded>

Noted with thanks 😄 have fixed the problem
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/157#issuecomment-960517824" expanded>

Noted with thanks! 😄 have broken into smaller methods alr and removed useless repeated code.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/155#issuecomment-960520632" expanded>

Noted with thanks 😄 have already fixed the problem
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/140#issuecomment-960520972" expanded>

Noted with thanks 😃 have fixed the bugs
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/133#issuecomment-960521561" expanded>

Noted with thanks 😄 have fixed the bugs
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/128#issuecomment-960521791" expanded>

Noted with thanks 😄 have fixed the bug
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/124#issuecomment-960522188" expanded>

Noted with thanks 😄 have fixed the bug
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/156#issuecomment-960533285" expanded>

Noted with thanks 😄 have fixed the bug
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/127#issuecomment-960559166" expanded>

Noted with thanks 😆 have fixed the bug
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/126#issuecomment-960564794" expanded>

The rule restricts that only one letter is accepted at a time. I highlight this rule now. 
![image](https://user-images.githubusercontent.com/73170270/140285331-59fd5297-74d6-40be-bd87-24a0e62d435e.png)

Thank you for your advice. 😄 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/125#issuecomment-960565451" expanded>

Noted with thanks 😄 have added help command into gamemenu
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/118#issuecomment-960566470" expanded>

Noted the bug! have fixed thank you 😄 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/105#issuecomment-960567546" expanded>

fixed. thank you 😄 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/100#issuecomment-960567913" expanded>

Fixed! thank you! 😄 
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/101#issuecomment-960568498" expanded>

Fixed! Thank you! 😆 
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/97#issuecomment-960568795" expanded>

Fixed! Thank you! 👍 
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/151#issuecomment-960864748" expanded>

Yeap The mode of these two levels are similar. but the question and attempt tries are different. Thank you!! 😄 
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/103#issuecomment-960867204" expanded>

Noted with thanks! fixed 😄 
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/123#issuecomment-960898238" expanded>

Fixed! Thank you! 😃 
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/114#issuecomment-960900860" expanded>

How about removing the `exit` command? just `back`
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/114#issuecomment-960901348" expanded>

Fixed! 😃 
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/113#issuecomment-960934321" expanded>

Improved! really appreciate!!!!!!!!!!!!!!!!! 😃 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/134#issuecomment-960947917" expanded>

The modes are similar. e.g., for level, the word dictionaries are different.
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/115#issuecomment-960950567" expanded>

Yeap, we don't allow within game leaving. You can only leave, when you finish a small game. Thank you! 😄 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/139#issuecomment-961992046" expanded>

Fixed! Thank you!
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/142#issuecomment-961992418" expanded>

Fixed! Thank you!
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/93#issuecomment-962476342" expanded>

Fixed! Thank you for your advice! 😄 
</panel>

</panel>


<panel type="info" header="### 111. Wang Ruisi `@oneScotch` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/38#issuecomment-939486147" expanded>

remember to merge the two Player class

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/103#issuecomment-960460555" expanded>

change the first "exit" to "return to the main menu"?
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/131#issuecomment-960464562" expanded>

what does it mean??
A calendar hash code is used to distinguish users with the same name. So the string given to you is different.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/130#issuecomment-960465437" expanded>

These "?"s are designed for card patterns. Maybe can change it to be more clear.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/126#issuecomment-960466263" expanded>

I think this is the rule of Hangman? Accept only one letter at one attempt
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/125#issuecomment-960466881" expanded>

strange…
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/125#issuecomment-960467285" expanded>

help 不在command type 里啊！！@Yuxinn-J 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/122#issuecomment-960467990" expanded>

Add explanation like view code knowledge on cards?
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/114#issuecomment-960470736" expanded>

This is because you can still choose another difficult game after exiting the easy game or vice versa :)

  @LilyDaytoy Maybe change the prompt from"Thank you for playing…” to "Return to game menu"?
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/114#issuecomment-960471011" expanded>

@Yuxinn-J  btw, it's "thank you for" not "thank you"? Is it?
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/136#issuecomment-960471965" expanded>

I am sorry, but this is the format of this game. You can choose exit to give up :)
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/137#issuecomment-960472459" expanded>

Because you may get the same question after trying many times, so we can't give you the answers.

Maybe we can show the answers to all questions after the user finishes the game? @Vincent6896 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/141#issuecomment-960472848" expanded>

okay, done
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/154#issuecomment-960475019" expanded>

Of course, you can't play the next game before finishing the previous one!! 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/153#issuecomment-962001744" expanded>

Thank you and done. If possible, please help us test the project again :)

</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/147#issuecomment-962002986" expanded>

Seems fine from my side. Maybe try again?
Ideally, player ID does not equal player Name.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/120#issuecomment-962004093" expanded>

Seems that The file does not exit as shown in the graph you gave. So it ask your name to generate a new one!
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/102#issuecomment-962017303" expanded>

thank you and it has been solved. Please help us test the new version if possible
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/145#issuecomment-962597305" expanded>

only True/False inputs. Thank you for your advice. Have made it clearer

</panel>

</panel>


<panel type="info" header="### 112. Hu Siyuan `@husysg` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-4/tp/pull/93#issuecomment-959003625" expanded>

testExpense failed
</panel>

</panel>


<panel type="info" header="### 113. Wang Chuhan `@Vincent6896` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/106#issuecomment-960493607" expanded>

It means you need consider it like if X = 1, whether X > 0 will return true or false. This is a question from code quiz website, the English's description is correct.
</panel>

</panel>


<panel type="info" header="### 114. Peng Wenxuan `@LilyDaytoy` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/1#issuecomment-930798366" expanded>

PR (update name in AboutUs)
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/36#issuecomment-939466005" expanded>

LGTM :)
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/44#issuecomment-940224369" expanded>

update card test
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/122#issuecomment-960519971" expanded>

Thanks for the prob, managed already
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/issues/107#issuecomment-960521181" expanded>

thanks, managed 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/223#issuecomment-962588183" expanded>

add CardContent
</panel>

</panel>


<panel type="info" header="### 115. Xue Yushan `@Mist0919` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T13-3/tp/pull/5#issuecomment-930801441" expanded>

Look good!

</panel>

</panel>


<panel type="info" header="### 116. An Ruyi `@ruyian` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/140#issuecomment-953944702" expanded>

Hi Ke Wen, noted with thanks!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/187#issuecomment-955616831" expanded>

Hi there, this is due to 64-bit double-precision being adopted in java. For 64-bit double, we can only store this much precision. 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113-T16-2/tp/issues/187#issuecomment-955616857" expanded>

I will set up a check to the value keyed in.
</panel>

</panel>


<panel type="info" header="### 117. KANG QINGXUAN `@Rrraaaeee` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/86#discussion_r735065003" expanded>

That was my first thinking. But these manager classes need to be visible to `storage` class too, so I could not hide them into `ResourcesManager`. Unless storage class is also under `ResourcesManager`, then loading and storing can be done internal to `ResourcesManager`.
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/86#discussion_r735065432" expanded>

Sure I agree. I will do it now
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/130#discussion_r739198089" expanded>

Okay yea we can do that in the getInput(). Everytime we press enter we will get a new `>>` so it looks nice, like a real terminal, e.g
```
>> post comment hello5 on 1
=========================================================================
me has just commented on a  post from forum:
┌────────────────────────────────────────────────────────────────────┐
|  hello
|    ∟  hello5
└────────────────────────────────────────────────────────────────────┘
=========================================================================
>> post list all
=========================================================================
Here is the list of forum posts:
┌────────────────────────────────────────────────────────────────────┐
|  1. @me: hello
|    ∟  1. @me: hello4
|    ∟  2. @me: hello5
|  2. @me: hello2
|  3. @me: hello3
└────────────────────────────────────────────────────────────────────┘
=========================================================================
>>
>>
>>
>>
>>
>>
>> post add hell4
=========================================================================
me has just posted to forum:
┌────────────────────────────────────────────────────────────────────┐
|  hell4
└────────────────────────────────────────────────────────────────────┘
=========================================================================
>>
```  
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/139#discussion_r739644798" expanded>

Opps

</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/139#discussion_r739645983" expanded>

I deleted the files under tmp folder because now there are two separate files for signin parser and command parser each. Somehow this was marked as conflict. I have resolved it just now.
</panel>

<panel  header="**6 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/219#discussion_r744079912" expanded>

Weird it looks alright on typora. I will add them back then
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/18#issuecomment-933441859" expanded>

No prob! For the MVP definitely we should focus on the functionalities first.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/50#issuecomment-940625162" expanded>

I think we can merge this later and use this as a surprise factor during demo
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/50#issuecomment-940635920" expanded>

Nope later as in V2.0. We present during the actual demo, not tomorrow.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/49#issuecomment-945437754" expanded>

Generalise invoice builder class to pdf builder, so that it can generate a number of different form types.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/133#issuecomment-955148418" expanded>

Right, that makes sense. So we should separate the class description and the software implementations
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/184#issuecomment-955640643" expanded>

Users do not know the set of commands they can use before/after login are different. We can make more meaningful error message to prompt user to login first.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/181#issuecomment-955641783" expanded>

If the input number is too big, parseInt() will throw exception. The error message can be more meaningful like `This is not a number or number exceeds the valid range! (-9999 to 9999)`.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/156#issuecomment-955646531" expanded>

Explicitly show current mode user is in on the command prompt like:
`>>[cf]` or `>>[bs]`
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/173#issuecomment-957285441" expanded>

New format will be ` register pw /pw pw /as admin`. Reserved words will be led by `/` 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/168#issuecomment-957287022" expanded>

New format will be `schedule discuss product with /with titus, titus ng`.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/issues/157#issuecomment-957305579" expanded>

The new error message is updated to `Please enter a valid number (0 to 99999999) for the argument!`
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/222#issuecomment-962415560" expanded>

Need to merge the other PR first.. Since this PR contains some updates from the other PR.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/252#issuecomment-963001740" expanded>

also added code refactor
</panel>

</panel>


<panel type="info" header="### 118. JIANG WEICHEN `@jiangweichen835` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/79#discussion_r726158391" expanded>

Okay thank you
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/99#discussion_r727200626" expanded>

I have fixed the issues
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/99#discussion_r727208194" expanded>

This is fixed too
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/172#discussion_r732390940" expanded>

Fixed, thank you
</panel>

<panel  header="**5 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/191#discussion_r733757814" expanded>

I've removed it
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/91#issuecomment-940184095" expanded>

I'm resolving the errors
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/110#issuecomment-942350312" expanded>

LGTM
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/299#issuecomment-957515100" expanded>

LGTM
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/306#issuecomment-960430671" expanded>

LGTM
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/318#issuecomment-961927288" expanded>

LGTM
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T10-1/tp/pull/351#issuecomment-962659359" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 119. ZHONG XINGHAN `@EdisonZhong17` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/208#issuecomment-962467965" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 120. LIU ZEHANG `@Cesare4869` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-4/tp/pull/3#issuecomment-930780422" expanded>

looks okay, good
</panel>

</panel>


<panel type="info" header="### 121. LOW ZHEN WEI JERRELL `@jerrelllzw` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-4/tp/pull/2#issuecomment-930780300" expanded>

Looks good
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-4/tp/pull/32#issuecomment-940172655" expanded>

fixes #29 
fixes #31 
</panel>

</panel>


<panel type="info" header="### 122. SWAMINATHAN VARUN `@flerovious` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/107#issuecomment-952217440" expanded>

![Screenshot 2021-10-27 at 2 49 15 AM](https://user-images.githubusercontent.com/85042815/138942254-38ee1dee-f073-41f8-ab88-d11291a77fdb.png)

Left with testing for AddParser and MainParser. Will then need to resolve merge conflicts before merging to master branch.
</panel>

</panel>


<panel type="info" header="### 123. LIM CHANG QUAN THADDEUS `@ThaddeusLim99` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/pull/191#discussion_r744219931" expanded>

thanks it does sound better
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/170#issuecomment-959299057" expanded>

It is just a comment on what the move command format should be like. Will remove it for the final submission
</panel>

</panel>


<panel type="info" header="### 124. YIP WAYNE `@YipWayne` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/pull/11#issuecomment-937578518" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 125. Yeo Wei Hng `@YEOWEIHNGWHYELAB` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/281#discussion_r748181880" expanded>

Ok! 
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/281#discussion_r748182103" expanded>

Ok! 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/70#issuecomment-943234727" expanded>

This is especially important when someone forgot to .close() their scanner or filereader or filewriter.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/22#issuecomment-951797673" expanded>

Enhance Intro page And Delay Function
1) Tell the user the current time date. 
2) The Database he has.
3) Show the Logo...
4) Show overall statistics, on total money is spent, total budget available, total budget left. Percentage of all the month that has kept within target.

</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/135#issuecomment-952264557" expanded>

Need Help for this. 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/22#issuecomment-954621956" expanded>

If you would like, you could add more animation not just to the UI intro but other parts too
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/172#issuecomment-954626156" expanded>

![Untitled](https://user-images.githubusercontent.com/69447385/139418558-a9831f28-e886-4b5d-b819-858b0e87485d.png)

</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/171#issuecomment-954627515" expanded>

![Untitled](https://user-images.githubusercontent.com/69447385/139418839-4064bba3-17b0-4ecf-825b-2365000136ee.png)

</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/169#issuecomment-954628254" expanded>

![Untitled](https://user-images.githubusercontent.com/69447385/139418971-c295e954-0403-43a7-b3e3-09b118bf7eb7.png)

</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/issues/173#issuecomment-962589830" expanded>

Now when the app sees corrupted file, it terminates immediately while leaving the file intact. 
</panel>

</panel>


<panel type="info" header="### 126. Jia Yixuan `@jyxhazcake` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-2/tp/pull/268#issuecomment-964197521" expanded>

LGTM
</panel>

</panel>


<panel type="info" header="### 127. Peh Zhenhao, Amos `@APZH` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/40#issuecomment-941167947" expanded>

Will fix lesson, event constructor before next iteration in NusModsParser class
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/56#issuecomment-951599711" expanded>

Redundant feature, possibly not going to be implemented
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/132#issuecomment-962653478" expanded>

Took advice and implemented the priority sorting from high to low in v2.1.0
</panel>

</panel>


<panel type="info" header="### 128. Tan Teck Hwee `@Teckwhye` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/24#discussion_r724025668" expanded>

Okay will edit on my next commit 👍 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/58#issuecomment-939691437" expanded>

Looks good to me!
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/117#issuecomment-952556923" expanded>

Add find member function
Add exception handing for add member method
Add delete member by name or index
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/117#issuecomment-952557495" expanded>

Fixes #96 
Fixes #95 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/117#issuecomment-952560984" expanded>

I will fix the cradle after merge
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/120#issuecomment-952577183" expanded>

Alls good to merge
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/167#issuecomment-957748106" expanded>

Yup agreed @ianwangeeen 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/205#issuecomment-957752600" expanded>

Will add checks for edit command too
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/182#issuecomment-957753611" expanded>

Will check on the delete command
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/108#issuecomment-960412832" expanded>

aite
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/148#issuecomment-961724736" expanded>

Solved!
</panel>

</panel>


<panel type="info" header="### 129. SEAN ROBERT DEN HARTOG `@SeanRobertDH` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/30#issuecomment-939679500" expanded>

public String getDateAsString(Date date) {
        DateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy hh:mm:ss");
        String strDate = dateFormat.format(date);
        return strDate;
    }
 which is in deadline, event and task should be in its own parser class.
Also, if the method was going to take in a variable rather than use its own private variable, it should have been a static method.
Why was recurrence moved to Deadline, Event and Todo rather than left in Task if it's a shared variable?

'static final RecurrenceEnum DEFAULT_RECURRENCE = RecurrenceEnum.NONE;'
is missing 'private' access modifier.

Why is there an event constructor with no startdate and enddate?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/47#issuecomment-943502715" expanded>

Added class CommandEnum which should be used to store all valid Commands.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/42#issuecomment-950346140" expanded>

Unused PR
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/pull/83#issuecomment-952168854" expanded>

annoying refactor inspired by
https://www.youtube.com/watch?v=-FRm3VPhseI&t=2202s
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/105#issuecomment-955501043" expanded>

It's a feature not a bug :)
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/103#issuecomment-955509478" expanded>

Hi. We implemented the recurrence in abstract Task (that's inherited by Todo) and then realized that having the date in Todo be optional broke Liskov Substitution Principle (because we'd have to check whether the date was null in Todo before setting the Recurrence in Task). Hence we implemented date in Todo last minute and didn't have time to update the UG.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/107#issuecomment-957969293" expanded>

Not an error. User may want to track todos that have already passed.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/128#issuecomment-957975512" expanded>

It did inform the user that the date time format was invalid? Why 25hr?
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/131#issuecomment-957979439" expanded>

The LocalDateTime parsing is handled by gson library, so it's out of our hands unless we create a custom gson parser. Also, can't replicate issue.
Will add a disclaimer to UG that editing the save file may lead to undefined behaviour.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/127#issuecomment-958066988" expanded>

duplicate #130 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/126#issuecomment-958067939" expanded>

duplicate #109 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/100#issuecomment-961853166" expanded>

Out of scope
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-3/tp/issues/102#issuecomment-961910148" expanded>

duplicate #108 
</panel>

</panel>


<panel type="info" header="### 130. Izdiyad Farhan B Zuri `@izdiyadfrhn` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/73#issuecomment-941012724" expanded>

steady bro, looks good
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/85#issuecomment-947350170" expanded>

Looks good to me! Just need to ensure the checks for Java CI become successful, click on Details and they'll show you where to edit so the tests passes :)
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/94#issuecomment-948528131" expanded>

looks good
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/117#issuecomment-952488291" expanded>

Closes #106 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/150#issuecomment-955854990" expanded>

Duplicate of #153 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/156#issuecomment-955855686" expanded>

Duplicate of #153 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/164#issuecomment-955856265" expanded>

Duplicate of #153 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/165#issuecomment-955856530" expanded>

Duplicate of #151 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/169#issuecomment-955856900" expanded>

Duplicate of #158 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/158#issuecomment-955857855" expanded>

Duplicate of #182 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/177#issuecomment-955860849" expanded>

Duplicate of #182 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/195#issuecomment-957138498" expanded>

Duplicate of #199 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/197#issuecomment-957138968" expanded>

Duplicate of #188 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/184#issuecomment-957142446" expanded>

The correct format to list attendance entries is "list /att /t &gt;TRAINING_NAME>". Apologies if our User Guide failed to clarify this command correctly. Thank you for pointing it out! Also by inputting "list /att" only, the empty attendance list message should not have printed.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/191#issuecomment-957250090" expanded>

This is a mistake in the UG on our part, the last field "&gt;/d 1_or_0>" was mistakenly added in. Apologies.
</panel>

</panel>


<panel type="info" header="### 131. Ng Cheng Yang, Titus `@titustortoiseturtle1999` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/135#issuecomment-952109745" expanded>

The class diagram looks good!

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/201#issuecomment-955706967" expanded>

Invalid.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/219#issuecomment-955707984" expanded>

Will put in extra example
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/214#issuecomment-955708685" expanded>

It's a feature not a bug. Will add note in UG.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/196#issuecomment-955709762" expanded>

Invalid.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/199#issuecomment-955709792" expanded>

Invalid
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/197#issuecomment-955709885" expanded>

Invallid.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/193#issuecomment-955710049" expanded>

Invalid.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/192#issuecomment-955710373" expanded>

Invalid.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/184#issuecomment-955711030" expanded>

Can put new line.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/166#issuecomment-955715844" expanded>

Thanks!
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/160#issuecomment-955716002" expanded>

Approved, good work.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/157#issuecomment-955716062" expanded>

nice! so convenient!
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/208#issuecomment-955742408" expanded>

Updated to v2.1 release.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/203#issuecomment-955742508" expanded>

Reordered UG. 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/200#issuecomment-955742558" expanded>

Edited help command.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/198#issuecomment-955742612" expanded>

Added note in UG.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/194#issuecomment-955742689" expanded>

Fixed help command.
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/187#issuecomment-955742736" expanded>

Added note to UG.
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/184#issuecomment-955742787" expanded>

Added new line.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/205#issuecomment-958619105" expanded>

Fixed by @madhanse 
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/251#issuecomment-958629244" expanded>

Also add into UG
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/251#issuecomment-958629318" expanded>

Update help command 
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/254#issuecomment-958630054" expanded>

+ add header for information about this guide section
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/264#issuecomment-958635551" expanded>

Give example 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/265#issuecomment-961999826" expanded>

Added for UG
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/243#issuecomment-962045908" expanded>

Added javadoc for ui / module classes
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/266#issuecomment-962599117" expanded>

titus to add for searchmap and find
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/318#issuecomment-962600382" expanded>

Add : for overall seq diagram 
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/321#issuecomment-962600486" expanded>

+ same for command interaction diagram
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/318#issuecomment-962601124" expanded>

Fix cut off 
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/318#issuecomment-962601146" expanded>

Madhan to update class diagram with changes
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/324#issuecomment-962601964" expanded>

For level 1 only 
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/245#issuecomment-962613146" expanded>

Added for some of University and all of Ui
</panel>

</panel>


<panel type="info" header="### 132. Chua Xiong Wei `@ChuaXiongWei` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/123#issuecomment-948390855" expanded>

![image](https://user-images.githubusercontent.com/70201525/138242999-f95dd9a9-6ece-419d-ba99-816e6ec4733d.png)

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/218#issuecomment-955644439" expanded>

changed UG to deleteRecipe
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/247#issuecomment-955644567" expanded>

changed to include in the UG what each integer represents
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/212#issuecomment-955644746" expanded>

Similar to issue #247 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/209#issuecomment-955644925" expanded>

Similar to issue #218 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/228#issuecomment-955645811" expanded>

Duplicate of issue #247 
</panel>

</panel>


<panel type="info" header="### 133. Chan Keng Jit `@kengjit` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/10#issuecomment-932886383" expanded>

Duplicate Issue
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/312#issuecomment-957070289" expanded>

Thank you for the feedback. This is working as intended. Please refer to the User Guide below, it states that the Edit feature "Edits an existing food entry’s food information"

![image](https://user-images.githubusercontent.com/69455772/139782611-c0bd03fc-ffb8-4742-abaf-be84462f3856.png)

</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/303#issuecomment-957075223" expanded>

Thank you for your feedback. The app is working as intended. 

In line 7, you were asked to select the food you would like to edit your entry to. If you would like to edit it to 'choco', instead of inputting '1', you could have inputted 0 and added a new food item "choco".
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/285#issuecomment-957099223" expanded>

Thank you for the feedback. I have made changes to the overall aesthetics.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/267#issuecomment-957101764" expanded>

Changes has been made
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/257#issuecomment-957148170" expanded>

We would like to give the user a choice to add a separate entry with the same name but with difference calories
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/247#issuecomment-957148927" expanded>

Cannot replicate issue
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/244#issuecomment-957149157" expanded>

Added into UG
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/343#issuecomment-957289783" expanded>

Update sample outputs and target audience in UG
Update DG to adhere to UML standards
</panel>

</panel>


<panel type="info" header="### 134. Renzo Rivera Canare `@renzocanare` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/16#issuecomment-938082438" expanded>

JUnit test to check if switch case prints list statements correctly has been added.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/123#issuecomment-955813356" expanded>

Wrongly named file upload, will fix in next release. 

Thanks Ashraf for pointing this out!
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/138#issuecomment-962211622" expanded>

![image](https://user-images.githubusercontent.com/69526313/140576680-b757138f-a1cf-479b-91ce-9c873c9d59f2.png)

Cannot replicate error.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/129#issuecomment-962437962" expanded>

Removed from UserGuide.md
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/127#issuecomment-962438153" expanded>

Resolved.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/132#issuecomment-962438300" expanded>

Resolved.
</panel>

</panel>


<panel type="info" header="### 135. Koh Meng Kiat, Kenneth `@xRossKoh` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/6#issuecomment-939403698" expanded>

All v1.0 functionalities have been implemented and pushed to team repo. 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/39#issuecomment-945852408" expanded>

Implemented and PR created with no failing CI. Awaiting merge.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/26#issuecomment-945853460" expanded>

Implemented and PR created with no failing CI. Awaiting merge.
</panel>

</panel>


<panel type="info" header="### 136. Darren Khoo Kah Weng `@rondayvoo` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/55#issuecomment-939728638" expanded>

Format will likely be "find /ingredients 1+2+3"
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/75#issuecomment-945837418" expanded>

> I think it's better if we separate Tagging from Setting, since they are quite distinct features @rondayvoo

Can also yeah
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/221#issuecomment-955484665" expanded>

The shaded boxes refer to the UG only.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/199#issuecomment-955489084" expanded>

Working as intended.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/233#issuecomment-955643991" expanded>

What is incorrect about it? You didn't set the parameters.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/226#issuecomment-955644078" expanded>

Working as intended.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/210#issuecomment-955644330" expanded>

Similar to issue #211 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/208#issuecomment-955644514" expanded>

Similar to issue #202 
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/213#issuecomment-955644542" expanded>

Similar to issue #202 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/237#issuecomment-955644745" expanded>

Mentioned in #202 and #209 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/211#issuecomment-955644894" expanded>

Similar to #214 
</panel>

</panel>


<panel type="info" header="### 137. Swann Tet Aung `@STAung07` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/10#issuecomment-938003753" expanded>

Closed in commit 7d002da
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/10#issuecomment-939258506" expanded>

Changed structure of program, need to rewrite commands syntax
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/9#issuecomment-939259200" expanded>

As a user, I can record my progress for a goal I am working towards to hold myself accountable
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/17#issuecomment-942940681" expanded>

Fixed
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/167#issuecomment-959100309" expanded>

udpateGoalEndDateCommand Class
FIX ITTT
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/165#issuecomment-959113575" expanded>

Change error message 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/161#issuecomment-959128359" expanded>

It is already implemented! When you start the app, it will tell you all the habits due for that day if u set it.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/158#issuecomment-959134469" expanded>

Fixed by huien. Storage file can no longer be updated
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/157#issuecomment-959135600" expanded>

thank you for the feedback!

</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/154#issuecomment-959155340" expanded>

Fixed!
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/153#issuecomment-959156523" expanded>

Fixed!
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/152#issuecomment-959207281" expanded>

Fixed by Huien! Thank you huien! Nice!
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/149#issuecomment-959226298" expanded>

Change error message for more clarity when user types in wrong command.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/147#issuecomment-959242991" expanded>

Same as #164 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/145#issuecomment-959254337" expanded>

Same as #163 
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/142#issuecomment-959263502" expanded>

LOLLLLLL - Daren
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/141#issuecomment-959266663" expanded>

It's not laggy I purposely made it that way. Is there a way to make it any faster? yes. I can make it faster - Daren
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/140#issuecomment-959270510" expanded>

Same as #163 
can mention in UG that it will take first instance of the flag
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/139#issuecomment-959276760" expanded>

Will throw exception! Thank you!
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/138#issuecomment-959280810" expanded>

It will take up a lot of space. Not feasible. -Daren
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/137#issuecomment-959289243" expanded>

Press arrow up key to view previous command. Write in UG under tips.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/136#issuecomment-959290948" expanded>

Same as #143 
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/135#issuecomment-959294095" expanded>

Fixed by Huien! Good Job Huien! True MVP of Storage
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/134#issuecomment-959296073" expanded>

Same as #143 
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/133#issuecomment-959298610" expanded>

Fixed by Huien once again! WOW! AMAZING! 
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/132#issuecomment-959304677" expanded>

Put in User Guide: one word command, whatever gibberish you want at that back will be accepted; we do not discriminate :)
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/131#issuecomment-959307970" expanded>

didn't i explain? if i didn't explain can just add it into UG - Daren
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/130#issuecomment-959310067" expanded>

Same as #134 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/129#issuecomment-959313456" expanded>

This is the issue if you spam too fast. Sooooooo don't :)
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/128#issuecomment-959318561" expanded>

Did you perhaps not press enter before going back into command mode? Cause i made that mistake as well like 30 times 
- Swann
Can explain flow in UG
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/127#issuecomment-959323061" expanded>

UG: 
minimum interval is once a day
explain why I need to have my interval to be less than number of days till the deadline
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/126#issuecomment-959327749" expanded>

Will be fixed by Daren:) Thank you for the feedback!
Mention in the UG => Don't Spam ENTERRRRR
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/125#issuecomment-959331716" expanded>

UG change abit can le
</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/148#issuecomment-959420979" expanded>

Change to square brackets: at least one option has to be available => help

</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/155#issuecomment-959519075" expanded>

By changing an interval, all data before will be saved and a new interval will be created from the date of change will be created. Mention in UG -&gt; Desired Effect
Interval cannot be changed to 0
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/174#issuecomment-961700318" expanded>

Fixes #130 
Fixes #120 
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/124#issuecomment-961704140" expanded>

Accidentally linked and closed my bad
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/186#issuecomment-963286483" expanded>

LGTM!!!
</panel>

</panel>


<panel type="info" header="### 138. Leow Yuan Yang `@leowyy99` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/51#issuecomment-945893952" expanded>

Merge addmod and adduni class
Add more flags for new features
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/98#issuecomment-950110623" expanded>

Accepted, will make neccessary change on parser
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/153#issuecomment-952109575" expanded>

Nice ascii
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/243#issuecomment-961373169" expanded>

Added javadoc for all parse exception, and all parser except ParseCondition. @MAZJ124 Might be better if you do it.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/245#issuecomment-961373603" expanded>

Added for all ParseException and some of parser.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/332#issuecomment-962610859" expanded>

done, waiting for merge
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/324#issuecomment-962611389" expanded>

done, pending merger
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/264#issuecomment-962615031" expanded>

Missing saving data portion
</panel>

</panel>


<panel type="info" header="### 139. Ramalingam Saravanamani `@saravanamani1999` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/pull/18#issuecomment-933296473" expanded>

need to fix styling 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/pull/47#issuecomment-936676735" expanded>

Need to fix IO tests 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/pull/46#issuecomment-936677438" expanded>

Need to fix styling
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/244#issuecomment-955573299" expanded>

Hi for the CS1010 bug, may i know what commands you input before that? because im unable to replicate the bug
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/222#issuecomment-955678815" expanded>

The hours displayed under the workload is per week thus for different modules it will be different number of that lesson type in a week. Thus making it default throughout would not be accurate for input of lessons into timetable.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/237#issuecomment-955771465" expanded>

![Screenshot 2021-11-01 at 2 41 16 AM](https://user-images.githubusercontent.com/66838856/139597176-23e5c20a-e228-4212-b7af-70eb67e60145.png)

The format of the command needs to be correct first(match the number of arguments that needs to be inputted) before the program can throw exception that the timetable item has not been added
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/232#issuecomment-957947905" expanded>

I understand that some students have gotten waivers but these students can't physically attend 2 lessons when these lessons have the same timings, maybe they could add these specific lessons into the planner separately. but if it's a small overlap in timing like 30 mins they could maybe add the timings according to the time they would like to spend in these lessons. So we would be rejecting this bug.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/225#issuecomment-958043792" expanded>

We did not extract the data for different timings for each lesson in a specific module as they are separated into individual json files for each module in the NUSMods api, as we wanted to be space efficient and stay within the memory space limits set we did not proceed with extracting this information. Also given that our product is expected to function without internet connection, we couldn't implement making a http request to nusmods api based on user input to retrieve these timings. Which is why the timings of lessons are not yet available as it's out of the current project's scope. 

</panel>

</panel>


<panel type="info" header="### 140. Huang Che Yen `@KaiserHuang88` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/123#issuecomment-947615470" expanded>

![Parser_addRecipeParse](https://user-images.githubusercontent.com/65898007/138092234-f7f768c7-d9d8-4a6f-b75b-1780d2158436.png)

</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/123#issuecomment-947639292" expanded>

![Recipe_structure](https://user-images.githubusercontent.com/65898007/138097156-7f23bda4-f1bc-41e3-8e85-36eeac273dec.png)
![Cookbook_structure](https://user-images.githubusercontent.com/65898007/138097202-bfbc1c11-5b6a-44e6-8913-4a8042a7d179.png)


</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/123#issuecomment-947693316" expanded>

![Parser_addRecipeParse](https://user-images.githubusercontent.com/65898007/138106749-06ea568e-6234-4e01-883b-30c18712a2fa.png)

</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/123#issuecomment-948229793" expanded>

![AddSequence](https://user-images.githubusercontent.com/65898007/138207270-83d59ba2-b753-4a0f-bf46-7710921511d6.png)
![ArchitectureDiagram](https://user-images.githubusercontent.com/65898007/138207279-86dc6196-82b2-407f-afd9-c7ebeaa19e13.png)
![Kitchen](https://user-images.githubusercontent.com/65898007/138207292-1d989a95-f4b2-468a-9076-94ce74e8248b.png)


</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/123#issuecomment-948297135" expanded>

![CommandRects](https://user-images.githubusercontent.com/65898007/138222993-ad90002c-80bc-4d74-aa2a-f267765d812c.png)

</panel>

</panel>


<panel type="info" header="### 141. Tan Kah Heng `@kahhe` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/82#issuecomment-947455582" expanded>

"Update" can be a multi-line command rather than a single-line to just change the name of the goal. This will allow us to update any attribute of the goal, such as the start and end dates.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/166#issuecomment-959209691" expanded>

Fixed!
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/132#issuecomment-959306148" expanded>

OUR HAPPYBIT IS GIBBERISH PROOF
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/128#issuecomment-959320381" expanded>

Since our navigation is different from everyone one else
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/126#issuecomment-959479795" expanded>

Now that I think of it, if it will be fixed then there is no need to mention in UG
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/132#issuecomment-959793694" expanded>

Maybe print "why ya typing the gibberish "&gt;user_input>" after a one-word command? You stress testing Ha(ppy)bit? 😏"
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/173#issuecomment-961370394" expanded>

Hello this is sleep-deprived kahheng, please review and merge for me thanks!
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/176#issuecomment-961900260" expanded>

Aw crap I made edits to UpdateParser and UpdateParserTest as well
</panel>

</panel>


<panel type="info" header="### 142. Yeo Zi Hao, Edwin `@yzhedwin` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/233#issuecomment-959029326" expanded>

user reported bug with reference to the ReadME document which is not valid
</panel>

</panel>


<panel type="info" header="### 143. See Jian Hui `@jhsee5` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/pull/82#issuecomment-950175774" expanded>

"link" replaces "add constituent"
</panel>

</panel>


<panel type="info" header="### 144. Jon Lim Yong Kiat `@Jon-the-MELON` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/53#issuecomment-937885233" expanded>

added Marks class with Junit testing, and edited variable names for camelCasing.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/66#issuecomment-939819061" expanded>

failed gradle
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/107#issuecomment-949575219" expanded>

LGTM!
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/15#issuecomment-950161733" expanded>

does not need to be done
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/27#issuecomment-950161884" expanded>

does not fit project requirements
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/25#issuecomment-950161901" expanded>

does not fit project requirements
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/13#issuecomment-950162038" expanded>

does not make sense to have notes in a CLI
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/18#issuecomment-950162176" expanded>

does not fit project requirements
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/36#issuecomment-950162207" expanded>

does not fit project requirements
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/31#issuecomment-950162224" expanded>

does not fit project requirements
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/40#issuecomment-950162264" expanded>

does not fit project requirements
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/134#issuecomment-952344293" expanded>

ownself merge ownself
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/184#issuecomment-957229704" expanded>

error in ug caused user to use wrong command
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/182#issuecomment-957230104" expanded>

error in ug caused user to use wrong command 'set_marks'
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/181#issuecomment-957230294" expanded>

error in ug caused user to use wrong command 'set_marks'
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/179#issuecomment-957230436" expanded>

error in ug caused user to use wrong command 'set_marks'
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/176#issuecomment-957230524" expanded>

error in ug caused user to use wrong command 'set_marks'
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/174#issuecomment-957230795" expanded>

fix user guide to show set_mark
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/172#issuecomment-957231689" expanded>

fixed UG to state "set_mark"
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/171#issuecomment-957255891" expanded>

updated ug to reflect correct command.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/198#issuecomment-957256176" expanded>

updated ug to reflect correct command format
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/200#issuecomment-957278141" expanded>

cannot be reproduced on my end
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/194#issuecomment-957279122" expanded>

median_mark fixed
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/170#issuecomment-957280292" expanded>

probably overflowed into a negative...
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/180#issuecomment-957281677" expanded>

fixed user guide to reflect correct command 'set_mark'
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/185#issuecomment-957282357" expanded>

case-sensitivity
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/274#issuecomment-962649383" expanded>

edit class with /n empty will delete the prev name
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/273#issuecomment-962649486" expanded>

expected output for list_classes ^
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/272#issuecomment-962649555" expanded>

edit help message
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/283#issuecomment-962658514" expanded>

fixed in #295 
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/279#issuecomment-962658615" expanded>

marks part fixed in #295
</panel>

</panel>


<panel type="info" header="### 145. Ma Zijian `@MAZJ124` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/97#issuecomment-950109757" expanded>

Approved and merged
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/153#issuecomment-952109587" expanded>

Amazing plane art! 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/195#issuecomment-955709919" expanded>

Add previous command to add in selected module in UG
</panel>

</panel>


<panel type="info" header="### 146. Yap Joon Siong `@yapjoonsiong` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/237#issuecomment-956315583" expanded>

can someone pls try to recreate this bug because i cant
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/238#issuecomment-956321356" expanded>

fella was referring to readme not user guide
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/248#issuecomment-956325085" expanded>

fella referring to readme not userguide
</panel>

</panel>


<panel type="info" header="### 147. Yam Jin Ee Dmitri `@DmitriYam` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/18#issuecomment-934641312" expanded>

Changed attributes to better represent classes in NUS. Updated the testMoudle method to reflect changes
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/26#issuecomment-939402136" expanded>

Donded
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/102#issuecomment-944879639" expanded>

donzo
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/101#issuecomment-944879689" expanded>

donzo
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/103#issuecomment-948940246" expanded>

donzo
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/146#issuecomment-953632077" expanded>

donzo
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/208#issuecomment-953633004" expanded>

done
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/221#issuecomment-955652250" expanded>

dunzo
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/223#issuecomment-955652364" expanded>

dunzo
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/225#issuecomment-955652417" expanded>

dunzo
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/230#issuecomment-955652444" expanded>

dunzo

</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/235#issuecomment-955654418" expanded>

dunzo
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/219#issuecomment-957803081" expanded>

dunzo
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/220#issuecomment-957805139" expanded>

dunzo
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/231#issuecomment-957806872" expanded>

dunzo
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/239#issuecomment-957807391" expanded>

dunzo
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/253#issuecomment-957851639" expanded>

UG updated.
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/257#issuecomment-957865830" expanded>

resolved

</panel>

</panel>


<panel type="info" header="### 148. Kom Xing Yuan `@xingyuan123` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/72#issuecomment-940944396" expanded>

looks good
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/100#issuecomment-950309241" expanded>

fixes #55 and #56 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/84#issuecomment-950314768" expanded>

can also get participation rate
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/115#issuecomment-952069225" expanded>

looks good xing yuan!
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/168#issuecomment-957745391" expanded>

phone number starts with 8 or 9 and have 8 digits only 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/167#issuecomment-957746349" expanded>

what ian said.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/173#issuecomment-957752483" expanded>

training names is seperate from training schedule
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/218#issuecomment-958722492" expanded>

looks good
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/182#issuecomment-959678944" expanded>

now there are no duplicate names, this error should be resolved
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/108#issuecomment-959732229" expanded>

laze bro
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/148#issuecomment-959732546" expanded>

can close if settled
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/203#issuecomment-960538481" expanded>

done for the entire memberstorage 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/203#issuecomment-960553211" expanded>

done for training schedule storage
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/203#issuecomment-962427834" expanded>

done for attendance storage

</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/203#issuecomment-962427878" expanded>

need to check 
1. all empty fields
2. line gap in excel
</panel>

</panel>


<panel type="info" header="### 149. Ho Zhen Hong `@hozhenhong99` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/pull/106#issuecomment-949572084" expanded>

lgtm!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/24#issuecomment-950162233" expanded>

does not fit project requirement
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/40#issuecomment-950162263" expanded>

does not fit project requirements
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/34#issuecomment-952079932" expanded>

completed
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/196#issuecomment-955576211" expanded>

the correct command is list_comment

![image](https://user-images.githubusercontent.com/69459292/139555095-3a9fa4cf-c74d-4436-9e4c-ab6f4552d376.png)

</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/189#issuecomment-957242145" expanded>

resolved
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/159#issuecomment-957245125" expanded>

student ID can be labelled as anything
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/164#issuecomment-957249196" expanded>

ug updated
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/160#issuecomment-957250838" expanded>

resolved
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/161#issuecomment-957267120" expanded>

resolved
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/193#issuecomment-958970098" expanded>

resolved
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/192#issuecomment-958973118" expanded>

jon to change average mark
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/191#issuecomment-958973730" expanded>

error cannot be reproduced
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/188#issuecomment-958974182" expanded>

any format is acceptable
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/185#issuecomment-958974481" expanded>

resolved
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/175#issuecomment-958975504" expanded>

resolved
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/173#issuecomment-958976518" expanded>

this app supports standard keyboard only
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/169#issuecomment-958977383" expanded>

resolved
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/166#issuecomment-958978240" expanded>

resolved
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/163#issuecomment-958979733" expanded>

resolved
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/162#issuecomment-958980320" expanded>

java limitation
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/156#issuecomment-958980815" expanded>

fixed
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/155#issuecomment-958981113" expanded>

allowed
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/38#issuecomment-958992526" expanded>

done in sort by scores
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/190#issuecomment-962512983" expanded>

resolved
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/192#issuecomment-962513193" expanded>

fixed
</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/194#issuecomment-962513262" expanded>

fixed
</panel>

</panel>


<panel type="info" header="### 150. Zeng Jiexiong `@jiexiong-zeng` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/19#issuecomment-935975480" expanded>

note: cannot pass IO redirection test
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/96#issuecomment-942178614" expanded>

Checks are not successful because new tasklists are added and storageEncoder JUnit tests are not updated to accept the changes.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/44#issuecomment-942400574" expanded>

done
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/37#issuecomment-942404272" expanded>

misclick

</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/129#issuecomment-946600799" expanded>

close #109 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/pull/193#issuecomment-951981525" expanded>

fix logger bug
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/222#issuecomment-955638742" expanded>

remove the link

</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/223#issuecomment-955638807" expanded>

change the ug to match

</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/237#issuecomment-955639468" expanded>

No feedback for addclass
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/244#issuecomment-955639687" expanded>

update help in Ui
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/249#issuecomment-955639827" expanded>

Verify date parser can parse 5/11/2021
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/251#issuecomment-955639886" expanded>

print feedback on semester when entering nocap
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/253#issuecomment-955640007" expanded>

Add info in Ui to remind users Grade without credit is not calculated.
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/254#issuecomment-955640042" expanded>

list module missing feedback
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/255#issuecomment-955640146" expanded>

provide feedback when deleting task
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/262#issuecomment-955640446" expanded>

Add in UG Leap year
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/239#issuecomment-955640541" expanded>

Inconsistent UG
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/249#issuecomment-955662114" expanded>

Parser can now accept single digiti dates
</panel>

</panel>


<panel type="info" header="### 151. Conrad Ephraim Wee Cher Jae `@conradwee` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/91#issuecomment-950901614" expanded>

Help V2
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/106#issuecomment-956353333" expanded>

resolved
</panel>

</panel>


<panel type="info" header="### 152. Gavien Pat Wei Zhuo `@gavienwz` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/70#issuecomment-947871866" expanded>

Reference from 2113t https://se-education.org/addressbook-level3/UserGuide.html
Things to add in the future:
More features
Colour
Important visuals
Tips/Notes
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/79#issuecomment-950141848" expanded>

fix #55 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/83#issuecomment-950155501" expanded>

link #75 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/84#issuecomment-950159495" expanded>

link #75 
fixes #82 
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/85#issuecomment-950162185" expanded>

#75 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/86#issuecomment-950171915" expanded>

#75 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/89#issuecomment-950612922" expanded>

@authorship
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/124#issuecomment-960723595" expanded>

Not bug
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/120#issuecomment-960724529" expanded>

![image](https://user-images.githubusercontent.com/69446771/140308706-4dd09d0c-f818-48ae-8a5d-e48214a15800.png)
Unreplicable
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/133#issuecomment-961145865" expanded>

Partially Implemented for v2.1
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/145#issuecomment-961229113" expanded>

@Uxinnn https://github.com/deonchung/ped/issues/7

</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/163#issuecomment-962432188" expanded>

link #105 
fix #161  #133 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/162#issuecomment-962450381" expanded>

Closed wrongly

</panel>

</panel>


<panel type="info" header="### 153. Ian Wang Ee En `@ianwangeeen` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/31#issuecomment-938698973" expanded>

Fixes #21 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/43#issuecomment-939272130" expanded>

Fixes #20
Fixes #23
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/52#issuecomment-939515137" expanded>

Fixes #23 
Fixes #20 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/83#issuecomment-947269130" expanded>

Looks good! A little editing to do
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/89#issuecomment-948236926" expanded>

done
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/pull/114#issuecomment-951842445" expanded>

Fixes #102 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/193#issuecomment-957418311" expanded>

Fixed UG
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/196#issuecomment-957420143" expanded>

Fixed UG
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/192#issuecomment-957426161" expanded>

Fixed UG
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/190#issuecomment-957429807" expanded>

Fixed UG
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/167#issuecomment-957724349" expanded>

phone numbers shd all be singapore based. App is designed for local use. Maybe add in PR?
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/194#issuecomment-957732310" expanded>

This should be allowed because the user may want to have certain indentations on his part.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-4/tp/issues/145#issuecomment-958724139" expanded>

done.
</panel>

</panel>


<panel type="info" header="### 154. Sridharan Arvind Srinivasan `@Dniv-ra` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-4/tp/issues/116#issuecomment-962439366" expanded>

Fixed issues. Thanks Nishanth!
</panel>

</panel>


<panel type="info" header="### 155. Madhan Selvapandian `@madhanse` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/183#issuecomment-956231656" expanded>

Solved the issue.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/180#issuecomment-956232069" expanded>

Issue solved
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/189#issuecomment-956232503" expanded>

Issue solved.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/213#issuecomment-956233747" expanded>

Issue solved
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/issues/212#issuecomment-956234799" expanded>

Issue solved
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-2/tp/pull/242#issuecomment-959351733" expanded>

Nice.
</panel>

</panel>


<panel type="info" header="### 156. Mohammad Shoib Memon Loya `@shoibloya` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-4/tp/pull/78#issuecomment-942315350" expanded>

Fixes #10 
Fixes #45 
</panel>

</panel>


<panel type="info" header="### 157. Mah Yuan Jie Alvin `@mudkip8` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/16#issuecomment-933930589" expanded>

I'm not sure how to rename Duke to something else and fix the **runtest** files at the same time, so I left everything as Duke
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/15#issuecomment-937623789" expanded>

I think for each ingredient? so we will need to include a threshold as part of the ingredient class, but now not for v1.0
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/8#issuecomment-939619220" expanded>

 - by name (so like the find function in ip)
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/25#issuecomment-940573071" expanded>

NOT INTENDING TO IMPLEMENT THIS
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/10#issuecomment-940577793" expanded>

Specifying the number as in the number to be subtracted
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/34#issuecomment-941832444" expanded>

removing this duplicate
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/12#issuecomment-941890391" expanded>

not sure if this is important so maybe we can put this off
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/10#issuecomment-941890553" expanded>

maybe we replace the update function with a subtract/remove function
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/45#issuecomment-942121031" expanded>

I will redo this once the windows check can be run
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/64#issuecomment-947489070" expanded>

I renamed the package to situs also
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/74#issuecomment-948356278" expanded>

Alerts are also fixed
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/82#issuecomment-949175226" expanded>

change dukeexception to situsexception
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/12#issuecomment-950265820" expanded>

Not doing this
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/127#issuecomment-955650220" expanded>

This issue is invalid, because the prompt shows 3 ingredients expiring before `03/11/2021`, while the 4th ingredient expires in `2022`, which is after.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/143#issuecomment-955651580" expanded>

Not sure what the issue is here. The items are indeed expiring. Maybe need to add a section for Expired Ingredients
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/165#issuecomment-955651870" expanded>

i forgot to merge 
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/149#issuecomment-955659679" expanded>

This probably an issue with string formatting in toString() or whatever the printing one is
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/128#issuecomment-955660342" expanded>

The rationale is that the ingredient expiring first is always subtracted
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/149#issuecomment-955839181" expanded>

Suggest to change printing formatting to 3dp since we doing in kg can measure up to 1g that way
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/124#issuecomment-958458831" expanded>

set stock is fixed, left add to fix
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/152#issuecomment-958611776" expanded>

This one i probably because we printed to 1dp

so a 0.02 kg means 0.0 printed
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/140#issuecomment-958667212" expanded>

i think you can specify this under the format notes section under how to use this guide

</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/114#issuecomment-961886960" expanded>

Arrowheads have been added
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/134#issuecomment-962410044" expanded>

call update instead of add
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/211#issuecomment-962762314" expanded>

UG
</panel>

</panel>


<panel type="info" header="### 158. Christopher Tze-Wen Langton `@ChrisLangton` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/48#issuecomment-940161386" expanded>

Fixes #30
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/81#issuecomment-949245662" expanded>

Still have functionality to add to these classes, just thought I'd make the PR first to update on the progress
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/109#issuecomment-952335910" expanded>

hehe looks good! I need to brush up on my UML a bit more, but I'm wondering if in the Parser architecture class diagram the two constructs on either side are necessary? Also I think some parts of the description of the Ui diagram such as the reasoning can maybe be removed cus I can't rly think of how it adds value from a developer standpoint? Util looks good! All in all structure and content looks rly good! I cant find many issues w it hehe 😍 
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-4/tp/pull/267#issuecomment-963199889" expanded>

looks good!
</panel>

</panel>


<panel type="info" header="### 159. Tran Nhan Duc Anh `@datn02` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/15#issuecomment-937374132" expanded>

Is this for low overall inventory stock, or each ingredient have low stock (e.g, only 5 carrots left, 2 onions left,...)?
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/58#issuecomment-946843929" expanded>

Fixes #14 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/154#issuecomment-955881239" expanded>

Did we specify that both group index and ingredient index must be present? If yes then the error message is correct, else we just need to update UG
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/141#issuecomment-955977913" expanded>

The cabbage one has 0 total amount but 40 kg in 3.1

</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/150#issuecomment-956194713" expanded>

Same as #122 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/128#issuecomment-956246548" expanded>

So should we close this and maybe add a description in the UG?

</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/152#issuecomment-956247029" expanded>

WHAT IS THIS?? HOW CAN I REPLICATE THIS BUG??? WHAT'S THE MEANING OF LIFE??? HELLO??? 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/146#issuecomment-956266230" expanded>

This guy IS THE GUY! Clear documentation of how he encountered the bug! POG!!
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/125#issuecomment-958748011" expanded>

Have set the limit for add, so this shouldn't happen
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/pull/180#issuecomment-958764413" expanded>

Fixes #124 , #152 , #125 
</panel>

</panel>


<panel type="info" header="### 160. Pichanon Rattanadilok Na Phuket `@nonrnp` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/pull/170#issuecomment-949180305" expanded>

LGTM
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/243#issuecomment-955634669" expanded>

The command "cap code" should be used instead of "cap mc" in order to calculate cap based on module code.
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/233#issuecomment-955634884" expanded>

The "cap code" and "cap mc" are used to calculate cap regardless of the modules taken. In order to calculate cap from the stored modules, the user must use "module cap" command instead.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/262#issuecomment-955650966" expanded>

The command works as intended. The input mc from user should not be restricted.
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/247#issuecomment-955695831" expanded>

Duplicate of #229 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/253#issuecomment-955837405" expanded>

This feature works as intended. The reason being that when students receive their module results at the end of each semester, only the letter grades are provided in the report, while only the overall CAP is shown as a number. If the grade point is accepted in number format, it could cause confusion for the users who are not familiar with the CAP system.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/257#issuecomment-956248910" expanded>

The user can choose to include their grades from past semesters into the cap calculator to get their overall cap. The output message of cap calculator has been updated
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/229#issuecomment-958575285" expanded>

We did not validate the grading basis for each module within this feature as the data isn't publicly available in the NUSMods api. Nevertheless, this feature is still able to achieve its main functionality as intended, that is to calculate the theoretical CAP of the user given the grade letter and the module credit (which is extracted from the module code), but not validating whether or not the grade letter is in compliance with each module's grading basis. This grade validation feature can be implemented in the future releases of the project, but it is now considered out of the project's scope for the current iteration.
</panel>

</panel>


<panel type="info" header="### 161. Yeat Nai Jie `@naijie2108` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/54#issuecomment-939477101" expanded>

Done
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-1/tp/issues/263#issuecomment-956082465" expanded>

Explained in ug, and also added list gradable and list normal methods, but unsure if we should add a module list gradable task function to make things clearer
</panel>

</panel>


<panel type="info" header="### 162. Pranav Venkatram `@giterator` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/119#issuecomment-945673688" expanded>

Satisfies #120 #121 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/285#issuecomment-962542142" expanded>

Discarded enhancement
</panel>

</panel>


<panel type="info" header="### 163. Pow Zhi Xiang `@powzx` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/248#issuecomment-955636031" expanded>

Resolved, thanks for noticing!
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/238#issuecomment-955636068" expanded>

Resolved, thanks for noticing!
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/221#issuecomment-955636583" expanded>

Notes have been changed to ⚠️ to reduce confusion. Thanks for the suggestion!
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/252#issuecomment-955637597" expanded>

Allowing a past date event to be added does not violate our value proposition. It might cause unnecessary restrictions for the user. Users sometimes might just want to add an event to a past date to keep a record for them to list in the future.

Start time and end time issue has been resolved, thanks for noticing!
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/254#issuecomment-955638959" expanded>

Allowing a past date event to be added does not violate our value proposition. It might cause unnecessary restrictions for the user. Users sometimes might just want to add an event to a past date to keep a record for them to list in the future. Thanks for the comment though!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/260#issuecomment-955641245" expanded>

Different exception message will now be printed if a key other than 'y' or 'n' is entered. Thanks for noticing!
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/255#issuecomment-955693680" expanded>

Duplicate of #258 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/258#issuecomment-955978596" expanded>

To add multi-day events, you may use `planner add orientation camp/DATE/0000/2359` and repeat for the remaining dates.

This issue is out of scope of our product. Our product works as intended and achieves complete functionality without this feature. However, we will consider your suggestion and may include it in a future release beyond v2.1. Thank you!
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-1/tp/issues/273#issuecomment-955985419" expanded>

NO NOT POSSIBLE
</panel>

</panel>


<panel type="info" header="### 164. Seetoh Yit Ching `@Yitching` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/74#issuecomment-942179170" expanded>

LGTM
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/95#issuecomment-945136373" expanded>

LGTM
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/97#issuecomment-946005447" expanded>

LGTM
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/99#issuecomment-946385167" expanded>

LGTM!
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/111#issuecomment-947469685" expanded>

LGTM
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/113#issuecomment-947596670" expanded>

LGTM
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/116#issuecomment-948359748" expanded>

LGTM
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/122#issuecomment-950129381" expanded>

1. Fixed the storage class
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/126#issuecomment-950267333" expanded>

1. May want to remove logger file

LGTM
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/143#issuecomment-951263341" expanded>

1. Updated Developers guide
2. Updated Users guide
3. Added assertion statements
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/193#issuecomment-954491292" expanded>

Updated JAR link in UG
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/194#issuecomment-955573000" expanded>

1. Edited the edit function to make use of parser to parse necessary inputs
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/239#issuecomment-956070059" expanded>

Data loading would also only be able to load positive numbers
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/259#issuecomment-957934013" expanded>

Will fix checkstyle errors on my end
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/268#issuecomment-959840324" expanded>

LGTM
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/300#issuecomment-962479129" expanded>

LGTM
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/299#issuecomment-962479911" expanded>

LGTM
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/303#issuecomment-962486157" expanded>

LGTM!
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/311#issuecomment-962547591" expanded>

LGTM
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/316#issuecomment-962559389" expanded>

LGTM, code looks clean! Good job!
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/317#issuecomment-962561724" expanded>

Sounds good! Shall make the necessary changes, thanks!
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/334#issuecomment-962656396" expanded>

Will try to fix the indentation on my end!
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/337#issuecomment-962677830" expanded>

LGTM the documentation looks clean! Goodjob!
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/345#issuecomment-963076344" expanded>

LGTM!
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/364#issuecomment-963203328" expanded>

LGTM!
</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W11-2/tp/pull/368#issuecomment-963222124" expanded>

LGTM!
</panel>

</panel>


<panel type="info" header="### 165. Kong Dak Nam `@daknam2001` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/113#issuecomment-953972174" expanded>

done
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-3/tp/issues/37#issuecomment-962527975" expanded>

done through other implementation (set range, set selection)
</panel>

</panel>


<panel type="info" header="### 166. Boo Qian Wei, Adeline `@aaapppsss` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/3#issuecomment-929833044" expanded>

looks good to merge
</panel>

</panel>


<panel type="info" header="### 167. Tan Hui En `@huien77` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/95#issuecomment-951910314" expanded>

fixes #79 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/169#issuecomment-957887943" expanded>

SLAP Storage class
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/pull/169#issuecomment-957992249" expanded>

Added JavaDoc
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F14-1/tp/issues/122#issuecomment-962572744" expanded>

added javadoc in pull request #169 
</panel>

</panel>


<panel type="info" header="### 168. Kairos Koh Jia Jun `@kairoskoh` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-4/tp/pull/1#issuecomment-930781609" expanded>

great work, very logical edit
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T12-4/tp/issues/77#issuecomment-962409371" expanded>

I believe the reason for the issue is caused by the use of outdated release jar file.
As you can see from the image below, such as issue has been fixed prior to the UG edit.
![image](https://user-images.githubusercontent.com/70124507/140601196-40fd9123-2248-4824-9fd5-27187d8383ef.png)

</panel>

</panel>


<panel type="info" header="### 169. Woo Bo Tuan `@bobowoo2468` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/pull/11#issuecomment-937578409" expanded>

LGTM
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/160#issuecomment-958741431" expanded>

UG errors have been cleared
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/155#issuecomment-958741668" expanded>

Flight date time parsing has been cleared
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/153#issuecomment-958741944" expanded>

Flight erroneous date-time entry exception has been cleared
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/149#issuecomment-958742380" expanded>

We feel that such erroneous contact number can be entered, but there should be a warning for this erroneous input.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/145#issuecomment-958742614" expanded>

Date time parsing has been cleared, exception will be thrown.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/137#issuecomment-958742884" expanded>

Exception has been added for erroneous date time parsing.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/135#issuecomment-958743110" expanded>

Erroneous date-time parsing has been completed.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/129#issuecomment-958743367" expanded>

This invalid email format will be allowed as an entry, but a warning will be thrown.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/125#issuecomment-958743659" expanded>

A warning will be thrown for this erroneous entry to warn the user, but the entry will still be accepted.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/158#issuecomment-961955597" expanded>

Storage has been implemented in v2.1
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/150#issuecomment-962457668" expanded>

Rebutted. As stated in UG. The date is input by the user, the user should recognize the date format that he/she has input.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/133#issuecomment-962609204" expanded>

There's is no 31 Feb
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/130#issuecomment-962609310" expanded>

The price is for the tour, the flight can be the same.
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/120#issuecomment-962609688" expanded>

Thanks for the advice YP
</panel>

</panel>


<panel type="info" header="### 170. Nishant Rai `@nishantrai-nus` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/10#issuecomment-947298814" expanded>

introduce new command and method for subtracting amounts, keep update as is
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/141#issuecomment-955903325" expanded>

not sure if there is any bug or the list format is just not understood, will explain this in UG
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-T09-3/tp/issues/154#issuecomment-955921762" expanded>

ive added an extra error message to specify need both index
</panel>

</panel>


<panel type="info" header="### 171. Jared Cheang `@jach23` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/54#issuecomment-946926107" expanded>

**partially** fixes #53 
**partially** fixes #55 
**partially** fixes #56 
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/77#issuecomment-949833290" expanded>

solves #56 
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/77#issuecomment-949872019" expanded>

still work in progress, to double check parser n UI calls
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/81#issuecomment-950155516" expanded>

For self: standardise Parser UI parameters + pass on resultant output n make sure it is printed too
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/92#issuecomment-950916997" expanded>

solves #81 
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/issues/111#issuecomment-957958113" expanded>

Hi XinRu, can I confirm whats the issue with Parser Lines 338 n 452? I only see white spacing errors, thanks!

![image](https://user-images.githubusercontent.com/24263853/139912580-a5aed339-0c17-4ae9-a6cc-90bdd93f5659.png)

![image](https://user-images.githubusercontent.com/24263853/139912601-6a8b7cc0-77e3-488d-867c-308cf961a723.png)


</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/155#issuecomment-959793525" expanded>

solves #111 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-1/tp/pull/159#issuecomment-962416541" expanded>

solves #111 , solves #162 
</panel>

</panel>


<panel type="info" header="### 172. Joanne Wong Wei Yin `@JWweiyin` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/163#issuecomment-957588622" expanded>

this is valid but one pull request can only link 10 problems
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/162#issuecomment-957606541" expanded>

valid. we solved this
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/160#issuecomment-957607273" expanded>

this is not a bug.
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/161#issuecomment-957608001" expanded>

solved. pull requests can only link to 10 issues
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/155#issuecomment-957612349" expanded>

we think empty fields is actually more specific than invalid input.
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/154#issuecomment-957614695" expanded>

we fixed this by only allowing index for deletion and move. 
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/148#issuecomment-957615814" expanded>

we fixed this.
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/146#issuecomment-957616856" expanded>

we fixed this but test data cannot be saved in the middle of a test.
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/143#issuecomment-957617789" expanded>

works now because we implemented only deletion by index and not phrase.
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/142#issuecomment-957619088" expanded>

we fixed this bug.
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/140#issuecomment-957620035" expanded>

we fixed this.
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/139#issuecomment-957620472" expanded>

we fixed this.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/136#issuecomment-957627818" expanded>

this is invalid. the user has keyed in the wrong fields. we think field empty refers to when the flags in the command are not present
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/126#issuecomment-957652110" expanded>

fixed this so that it says you have to input a positive integer
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/120#issuecomment-957653002" expanded>

fixed already so that it says you have to input a deck index.
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/118#issuecomment-957653389" expanded>

fixed.
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/116#issuecomment-957654224" expanded>

fixed such that we only delete by index and not by phrase
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/115#issuecomment-957657433" expanded>

fixed. 
</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/109#issuecomment-957662224" expanded>

fixed already such that user is asked to enter deck index.
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/107#issuecomment-957662999" expanded>

we fixed this with the auto save function.
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/105#issuecomment-957664919" expanded>

handled with number format exception.
</panel>

</panel>


<panel type="info" header="### 173. Wong Tze Shan Samantha `@swongts` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/168#issuecomment-962445574" expanded>

Decided not to implement edit function, as there were other higher priority issues
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/170#issuecomment-962928321" expanded>

ChengXu completed DG Storage
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F11-3/tp/issues/184#issuecomment-962931342" expanded>

Not enough time to be completed
</panel>

</panel>


<panel type="info" header="### 174. Damien Lim Yu Hao `@dlimyh98` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/33#issuecomment-938814292" expanded>

_Add Recipe_ functionality modified, to disallow duplicate recipe name.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/60#issuecomment-938861467" expanded>

Good job Damien
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/85#issuecomment-942227761" expanded>

Calories interfering with save/load feature
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/86#issuecomment-942321605" expanded>

goddamn Gradle checkstyle
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/87#issuecomment-942327169" expanded>

goddamn J-Unit tests
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/83#issuecomment-942333177" expanded>

basic Calories functionality done, may tack on future features
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/75#issuecomment-945809336" expanded>

_Set tags: "set [name] /tags tag1+tag2+tag3"_ feature implemented differently under my 'Tag' feature

I think it's better if we separate Tagging from Setting, since they are quite distinct features @rondayvoo 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/94#issuecomment-946440755" expanded>

JUnit fail, will rectify
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/84#issuecomment-946446707" expanded>

Functionality done, just need to refactor code and touch-up `find` function
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/104#issuecomment-947330407" expanded>

where my lamb sauce homies at
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/96#issuecomment-948478787" expanded>

Done
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/14#issuecomment-948478977" expanded>

Done.
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/143#issuecomment-948493306" expanded>

Windows Gradle test failed
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/144#issuecomment-948500022" expanded>

Windows Gradle whining about newline
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/pull/145#issuecomment-948502130" expanded>

checkStyle fail
</panel>

<panel  header="**16 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/203#issuecomment-955575770" expanded>

Was recommended by teaching team to use a single String for addRecipe command
</panel>

<panel  header="**17 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/204#issuecomment-955575950" expanded>

Feature already included by @rondayvoo
</panel>

<panel  header="**18 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/250#issuecomment-955623985" expanded>

unable to replicate


![Screenshot 2021-10-31 at 10 08 19 AM](https://user-images.githubusercontent.com/64007674/139563883-64b347f7-a0a8-408e-b236-4febc194fdf9.png)



</panel>

<panel  header="**19 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/198#issuecomment-955627861" expanded>

@rondayvoo for the set commands, 

```
public void setIngredients(String name, ArrayList<String> newIngredients) throws GordonException {
        for (Recipe recipe : recipes) {
            if (recipe.getName().toLowerCase().contains(name.toLowerCase())) {
                recipe.replaceIngredients(newIngredients);
                return;
            }
        }

        throw new GordonException(GordonException.NO_RESULT_FOUND);
    }
```

the issue is with `recipe.getName().toLowerCase().contains(name.toLowerCase()`, should change to `recipe.getName().equalsIgnoreCase(name)`

not sure if that will affect any functionality you had in mind
</panel>

<panel  header="**20 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/200#issuecomment-955629822" expanded>

Good catch, rectified
</panel>

<panel  header="**21 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/205#issuecomment-955633683" expanded>

Good catch, enforced the adding of Steps. 

Related to bugs w recipeName and ingredients as well.
</panel>

<panel  header="**22 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/231#issuecomment-955633983" expanded>

related to #205 

1. Steps cannot be left blank now
2. String of spaces is still ok, it will be trimmed down
</panel>

<panel  header="**23 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/241#issuecomment-955634067" expanded>

related to #205 

1. special characters will still be allowed
2. recipeName, ingredients, steps will now enforce that ANY field cannot be blank
</panel>

<panel  header="**24 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/243#issuecomment-955634108" expanded>

related to #205 

recipeNames are now no longer allowed to be blank
</panel>

<panel  header="**25 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/198#issuecomment-955634539" expanded>

Good catch

related issues of 
1. setCalories
2. setDifficulty
3. setPrice
4. setTime

have all been handled.

</panel>

<panel  header="**26 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/242#issuecomment-955634693" expanded>

related to #198 

</panel>

<panel  header="**27 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/240#issuecomment-955634725" expanded>

related to #198 
</panel>

<panel  header="**28 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/239#issuecomment-955634767" expanded>

related to #198 
</panel>

<panel  header="**29 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/223#issuecomment-955635086" expanded>

issue w float architecture, unsure if we can really do anything about it
</panel>

<panel  header="**30 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/238#issuecomment-955637025" expanded>

Good catch, fixed related issue with DeleteTags as well
</panel>

<panel  header="**31 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/206#issuecomment-955641290" expanded>

Good point, added a corresponding prompt for this
</panel>

<panel  header="**32 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/215#issuecomment-955641932" expanded>

Good point, added a message to notify the User of this.
</panel>

<panel  header="**33 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/235#issuecomment-955643255" expanded>

unable to replicate

![Screenshot 2021-10-31 at 2 08 12 PM](https://user-images.githubusercontent.com/64007674/139570459-f924fc6e-3de4-409d-87a1-74eaab67c687.png)



</panel>

<panel  header="**34 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/234#issuecomment-955643845" expanded>

Fixed
</panel>

<panel  header="**35 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/207#issuecomment-955673801" expanded>

Added to our UG
</panel>

<panel  header="**36 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/227#issuecomment-955673823" expanded>

Added to our UG
</panel>

<panel  header="**37 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/236#issuecomment-955673865" expanded>

Added to our UG
</panel>

<panel  header="**38 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/246#issuecomment-955674077" expanded>

Fixed.
</panel>

<panel  header="**39 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/250#issuecomment-958673854" expanded>

no reply from tester, bug rejected
</panel>

<panel  header="**40 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/235#issuecomment-958673942" expanded>

no reply from tester, bug rejected
</panel>

<panel  header="**41 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W13-2/tp/issues/259#issuecomment-958674029" expanded>

all done
</panel>

<panel  header="**42 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/238#issuecomment-952551758" expanded>

![Screenshot 2021-10-27 at 1 06 33 PM](https://user-images.githubusercontent.com/64007674/139005095-f63aa9c1-5c98-412c-b94a-2af10938fbc2.png)

For self invocation, I think there should be another small bar that 'receives' the command, then outputs the results. Like the lecture notes below

![Screenshot 2021-10-27 at 1 27 21 PM](https://user-images.githubusercontent.com/64007674/139005127-3686aa25-f95c-4f70-a036-760842876090.png)



</panel>

<panel  header="**43 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/238#issuecomment-952553178" expanded>


![Screenshot 2021-10-27 at 1 15 58 PM](https://user-images.githubusercontent.com/64007674/139005664-6bfb3fbb-41f0-4e4b-a208-e7c5d0bf5e4a.png)

for Enums, maybe it's better to not explicitly link it to the class? Makes the diagram look neater

![Screenshot 2021-10-27 at 1 32 33 PM](https://user-images.githubusercontent.com/64007674/139005690-43144ac5-c8bb-4146-9062-6914aafab061.png)



</panel>

<panel  header="**44 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/238#issuecomment-952556032" expanded>

![Screenshot 2021-10-27 at 1 25 32 PM](https://user-images.githubusercontent.com/64007674/139005828-726b9556-3eb7-4840-a189-f1159cc5d63d.png)

The `generateMonthReport()` and `Summary(ed:EntryDatabase, int:days)` being together on the same line is abit confusing

 I think it should be `Summary(ed:EntryDatabase, int:days)` first, because it is creating the Summary class first, then `generateMonthReport()` to pull all the data out
</panel>

<panel  header="**45 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/pull/238#issuecomment-952557341" expanded>

![Screenshot 2021-10-27 at 1 25 32 PM](https://user-images.githubusercontent.com/64007674/139006471-931e79b4-43fc-4cf0-91aa-e41826cd1488.png)

I think maybe it's better to leave out the object deletion sign, since for Java it's not really important. Can help to reduce the clutter of the diagram too
</panel>

</panel>


<panel type="info" header="### 175. Jin Minyue `@astralum` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/147#issuecomment-955998630" expanded>

Unable to reproduce.
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-F12-1/tp/issues/157#issuecomment-962783476" expanded>

Resolved
</panel>

</panel>


<panel type="info" header="### 176. Aditi Chadha `@aditichadha1310` (0 comments)"  collapsed>


<panel  header="**1 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/55#discussion_r725791552" expanded>

I have updated the PR. You can proceed and merge now. Thank you
</panel>

<panel  header="**2 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/56#discussion_r726034807" expanded>

Sure, I will do this.
</panel>

<panel  header="**3 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/56#discussion_r726034958" expanded>

Yes, you're right. I will improve on it.
</panel>

<panel  header="**4 :octicon-git-pull-request::octicon-comment:** (commented on own PR)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/185#discussion_r744131141" expanded>

Resolved and updated the PR. You can merge it. Thanks
</panel>

<panel  header="**5 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/31#issuecomment-936310398" expanded>

Looks good to merge!
</panel>

<panel  header="**6 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/pull/51#issuecomment-939211678" expanded>

> Almost there, but the variables and functions for delete should not be static because they should pertain to that specific Timetable Object

Yes you're right! Thanks for notifying.
</panel>

<panel  header="**7 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/162#issuecomment-962800581" expanded>

Linked to PR #185 
</panel>

<panel  header="**8 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/161#issuecomment-962800768" expanded>

Linked to PR #185
</panel>

<panel  header="**9 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/156#issuecomment-962800899" expanded>

Linked to PR #185 
</panel>

<panel  header="**10 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/141#issuecomment-962800985" expanded>

Linked to PR #185 
</panel>

<panel  header="**11 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/121#issuecomment-962801056" expanded>

Linked to PR #185 
</panel>

<panel  header="**12 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/144#issuecomment-962801127" expanded>

Linked to PR #185 
</panel>

<panel  header="**13 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/159#issuecomment-962801203" expanded>

Linked to PR #185 
</panel>

<panel  header="**14 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/151#issuecomment-962801275" expanded>

Linked to PR #185 
</panel>

<panel  header="**15 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-2/tp/issues/148#issuecomment-962801345" expanded>

Linked to PR #185 
</panel>

</panel>


<panel type="info" header="### 177. Bellakka Krishnamurthy Prajwal `@praj-bellakka` (0 comments)"  collapsed>


<panel  header="**1 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/278#issuecomment-955680420" expanded>

Closing this issue as we are not concerned with the quality of names input, as long as it doesn't break input guidelines given in the UG @rest
</panel>

<panel  header="**2 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/314#issuecomment-956179731" expanded>

This is a feature, not a bug as we are not checking for spelling mistakes
</panel>

<panel  header="**3 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/305#issuecomment-960464841" expanded>

Closing as this is not a bug
</panel>

<panel  header="**4 :octicon-comment:** (other comment)" popup-url="https://github.com/AY2122S1-CS2113T-W12-1/tp/issues/243#issuecomment-962785192" expanded>

Refactored and SLAPed in #353 and #358
</panel>

</panel>
